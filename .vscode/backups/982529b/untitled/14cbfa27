untitled:Untitled-1.ipynb?jupyter-notebook {"typeId":"notebook/jupyter-notebook/jupyter-notebook"}
{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/teamspace/studios/this_studio\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/home/zeus/miniconda3/envs/cloudspace/lib/python3.10/site-packages/IPython/core/magics/osm.py:417: UserWarning: using dhist requires you to install the `pickleshare` library.\n",
      "  self.shell.db['dhist'] = compress_dhist(dhist)[-100:]\n"
     ]
    }
   ],
   "source": [
    "%cd /teamspace/studios/this_studio"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "!mkdir segnet_implementation\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "fatal: destination path 'SegNet-Semantic-Segmentation' already exists and is not an empty directory.\n",
      "\n",
      "\n",
      "\u001b[38;5;57m\u001b[1m⚡️ Tip\u001b[0m\tConnect GitHub to Studios: \u001b[4mhttps://lightning.ai/mishrapoorab/home?settings=integrations\u001b[0m\n",
      "\n"
     ]
    }
   ],
   "source": [
    "! git clone https://github.com/kulkarnikeerti/SegNet-Semantic-Segmentation"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/teamspace/studios/this_studio/SegNet-Semantic-Segmentation\n"
     ]
    }
   ],
   "source": [
    "%cd /teamspace/studios/this_studio/SegNet-Semantic-Segmentation"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Requirement already satisfied: pip in /system/conda/miniconda3/envs/cloudspace/lib/python3.10/site-packages (25.1.1)\n"
     ]
    }
   ],
   "source": [
    "! pip install --upgrade pip"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Requirement already satisfied: opencv-python-headless==4.7.0.72 in /system/conda/miniconda3/envs/cloudspace/lib/python3.10/site-packages (4.7.0.72)\n",
      "Requirement already satisfied: numpy>=1.21.2 in /system/conda/miniconda3/envs/cloudspace/lib/python3.10/site-packages (from opencv-python-headless==4.7.0.72) (1.26.4)\n",
      "Note: you may need to restart the kernel to use updated packages.\n"
     ]
    }
   ],
   "source": [
    "pip install opencv-python-headless==4.7.0.72"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Requirement already satisfied: numpy==1.26.4 in /system/conda/miniconda3/envs/cloudspace/lib/python3.10/site-packages (1.26.4)\n",
      "Note: you may need to restart the kernel to use updated packages.\n"
     ]
    }
   ],
   "source": [
    "pip install numpy==1.26.4"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Requirement already satisfied: tensorflow in /system/conda/miniconda3/envs/cloudspace/lib/python3.10/site-packages (2.19.0)\n",
      "Requirement already satisfied: absl-py>=1.0.0 in /system/conda/miniconda3/envs/cloudspace/lib/python3.10/site-packages (from tensorflow) (2.3.0)\n",
      "Requirement already satisfied: astunparse>=1.6.0 in /system/conda/miniconda3/envs/cloudspace/lib/python3.10/site-packages (from tensorflow) (1.6.3)\n",
      "Requirement already satisfied: flatbuffers>=24.3.25 in /system/conda/miniconda3/envs/cloudspace/lib/python3.10/site-packages (from tensorflow) (25.2.10)\n",
      "Requirement already satisfied: gast!=0.5.0,!=0.5.1,!=0.5.2,>=0.2.1 in /system/conda/miniconda3/envs/cloudspace/lib/python3.10/site-packages (from tensorflow) (0.6.0)\n",
      "Requirement already satisfied: google-pasta>=0.1.1 in /system/conda/miniconda3/envs/cloudspace/lib/python3.10/site-packages (from tensorflow) (0.2.0)\n",
      "Requirement already satisfied: libclang>=13.0.0 in /system/conda/miniconda3/envs/cloudspace/lib/python3.10/site-packages (from tensorflow) (18.1.1)\n",
      "Requirement already satisfied: opt-einsum>=2.3.2 in /system/conda/miniconda3/envs/cloudspace/lib/python3.10/site-packages (from tensorflow) (3.4.0)\n",
      "Requirement already satisfied: packaging in /system/conda/miniconda3/envs/cloudspace/lib/python3.10/site-packages (from tensorflow) (25.0)\n",
      "Requirement already satisfied: protobuf!=4.21.0,!=4.21.1,!=4.21.2,!=4.21.3,!=4.21.4,!=4.21.5,<6.0.0dev,>=3.20.3 in /system/conda/miniconda3/envs/cloudspace/lib/python3.10/site-packages (from tensorflow) (4.23.4)\n",
      "Requirement already satisfied: requests<3,>=2.21.0 in /system/conda/miniconda3/envs/cloudspace/lib/python3.10/site-packages (from tensorflow) (2.32.4)\n",
      "Requirement already satisfied: setuptools in /system/conda/miniconda3/envs/cloudspace/lib/python3.10/site-packages (from tensorflow) (78.1.1)\n",
      "Requirement already satisfied: six>=1.12.0 in /system/conda/miniconda3/envs/cloudspace/lib/python3.10/site-packages (from tensorflow) (1.17.0)\n",
      "Requirement already satisfied: termcolor>=1.1.0 in /system/conda/miniconda3/envs/cloudspace/lib/python3.10/site-packages (from tensorflow) (3.1.0)\n",
      "Requirement already satisfied: typing-extensions>=3.6.6 in /system/conda/miniconda3/envs/cloudspace/lib/python3.10/site-packages (from tensorflow) (4.14.0)\n",
      "Requirement already satisfied: wrapt>=1.11.0 in /system/conda/miniconda3/envs/cloudspace/lib/python3.10/site-packages (from tensorflow) (1.17.2)\n",
      "Requirement already satisfied: grpcio<2.0,>=1.24.3 in /system/conda/miniconda3/envs/cloudspace/lib/python3.10/site-packages (from tensorflow) (1.73.0)\n",
      "Requirement already satisfied: tensorboard~=2.19.0 in /system/conda/miniconda3/envs/cloudspace/lib/python3.10/site-packages (from tensorflow) (2.19.0)\n",
      "Requirement already satisfied: keras>=3.5.0 in /system/conda/miniconda3/envs/cloudspace/lib/python3.10/site-packages (from tensorflow) (3.10.0)\n",
      "Requirement already satisfied: numpy<2.2.0,>=1.26.0 in /system/conda/miniconda3/envs/cloudspace/lib/python3.10/site-packages (from tensorflow) (1.26.4)\n",
      "Requirement already satisfied: h5py>=3.11.0 in /system/conda/miniconda3/envs/cloudspace/lib/python3.10/site-packages (from tensorflow) (3.14.0)\n",
      "Requirement already satisfied: ml-dtypes<1.0.0,>=0.5.1 in /system/conda/miniconda3/envs/cloudspace/lib/python3.10/site-packages (from tensorflow) (0.5.1)\n",
      "Requirement already satisfied: tensorflow-io-gcs-filesystem>=0.23.1 in /system/conda/miniconda3/envs/cloudspace/lib/python3.10/site-packages (from tensorflow) (0.37.1)\n",
      "Requirement already satisfied: charset_normalizer<4,>=2 in /system/conda/miniconda3/envs/cloudspace/lib/python3.10/site-packages (from requests<3,>=2.21.0->tensorflow) (3.4.2)\n",
      "Requirement already satisfied: idna<4,>=2.5 in /system/conda/miniconda3/envs/cloudspace/lib/python3.10/site-packages (from requests<3,>=2.21.0->tensorflow) (3.10)\n",
      "Requirement already satisfied: urllib3<3,>=1.21.1 in /system/conda/miniconda3/envs/cloudspace/lib/python3.10/site-packages (from requests<3,>=2.21.0->tensorflow) (2.5.0)\n",
      "Requirement already satisfied: certifi>=2017.4.17 in /system/conda/miniconda3/envs/cloudspace/lib/python3.10/site-packages (from requests<3,>=2.21.0->tensorflow) (2025.6.15)\n",
      "Requirement already satisfied: markdown>=2.6.8 in /system/conda/miniconda3/envs/cloudspace/lib/python3.10/site-packages (from tensorboard~=2.19.0->tensorflow) (3.8.2)\n",
      "Requirement already satisfied: tensorboard-data-server<0.8.0,>=0.7.0 in /system/conda/miniconda3/envs/cloudspace/lib/python3.10/site-packages (from tensorboard~=2.19.0->tensorflow) (0.7.2)\n",
      "Requirement already satisfied: werkzeug>=1.0.1 in /system/conda/miniconda3/envs/cloudspace/lib/python3.10/site-packages (from tensorboard~=2.19.0->tensorflow) (3.1.3)\n",
      "Requirement already satisfied: wheel<1.0,>=0.23.0 in /system/conda/miniconda3/envs/cloudspace/lib/python3.10/site-packages (from astunparse>=1.6.0->tensorflow) (0.45.1)\n",
      "Requirement already satisfied: rich in /system/conda/miniconda3/envs/cloudspace/lib/python3.10/site-packages (from keras>=3.5.0->tensorflow) (14.0.0)\n",
      "Requirement already satisfied: namex in /system/conda/miniconda3/envs/cloudspace/lib/python3.10/site-packages (from keras>=3.5.0->tensorflow) (0.1.0)\n",
      "Requirement already satisfied: optree in /system/conda/miniconda3/envs/cloudspace/lib/python3.10/site-packages (from keras>=3.5.0->tensorflow) (0.16.0)\n",
      "Requirement already satisfied: MarkupSafe>=2.1.1 in /system/conda/miniconda3/envs/cloudspace/lib/python3.10/site-packages (from werkzeug>=1.0.1->tensorboard~=2.19.0->tensorflow) (3.0.2)\n",
      "Requirement already satisfied: markdown-it-py>=2.2.0 in /system/conda/miniconda3/envs/cloudspace/lib/python3.10/site-packages (from rich->keras>=3.5.0->tensorflow) (3.0.0)\n",
      "Requirement already satisfied: pygments<3.0.0,>=2.13.0 in /system/conda/miniconda3/envs/cloudspace/lib/python3.10/site-packages (from rich->keras>=3.5.0->tensorflow) (2.19.2)\n",
      "Requirement already satisfied: mdurl~=0.1 in /system/conda/miniconda3/envs/cloudspace/lib/python3.10/site-packages (from markdown-it-py>=2.2.0->rich->keras>=3.5.0->tensorflow) (0.1.2)\n"
     ]
    }
   ],
   "source": [
    "! pip install tensorflow"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "%matplotlib inline\n",
    "import matplotlib.pyplot as plt\n",
    "import cv2\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "from glob import glob\n",
    "import pickle\n",
    "import tensorflow as tf"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Requirement already satisfied: keras in /system/conda/miniconda3/envs/cloudspace/lib/python3.10/site-packages (3.10.0)\n",
      "Requirement already satisfied: absl-py in /system/conda/miniconda3/envs/cloudspace/lib/python3.10/site-packages (from keras) (2.3.0)\n",
      "Requirement already satisfied: numpy in /system/conda/miniconda3/envs/cloudspace/lib/python3.10/site-packages (from keras) (1.26.4)\n",
      "Requirement already satisfied: rich in /system/conda/miniconda3/envs/cloudspace/lib/python3.10/site-packages (from keras) (14.0.0)\n",
      "Requirement already satisfied: namex in /system/conda/miniconda3/envs/cloudspace/lib/python3.10/site-packages (from keras) (0.1.0)\n",
      "Requirement already satisfied: h5py in /system/conda/miniconda3/envs/cloudspace/lib/python3.10/site-packages (from keras) (3.14.0)\n",
      "Requirement already satisfied: optree in /system/conda/miniconda3/envs/cloudspace/lib/python3.10/site-packages (from keras) (0.16.0)\n",
      "Requirement already satisfied: ml-dtypes in /system/conda/miniconda3/envs/cloudspace/lib/python3.10/site-packages (from keras) (0.5.1)\n",
      "Requirement already satisfied: packaging in /system/conda/miniconda3/envs/cloudspace/lib/python3.10/site-packages (from keras) (25.0)\n",
      "Requirement already satisfied: typing-extensions>=4.6.0 in /system/conda/miniconda3/envs/cloudspace/lib/python3.10/site-packages (from optree->keras) (4.14.0)\n",
      "Requirement already satisfied: markdown-it-py>=2.2.0 in /system/conda/miniconda3/envs/cloudspace/lib/python3.10/site-packages (from rich->keras) (3.0.0)\n",
      "Requirement already satisfied: pygments<3.0.0,>=2.13.0 in /system/conda/miniconda3/envs/cloudspace/lib/python3.10/site-packages (from rich->keras) (2.19.2)\n",
      "Requirement already satisfied: mdurl~=0.1 in /system/conda/miniconda3/envs/cloudspace/lib/python3.10/site-packages (from markdown-it-py>=2.2.0->rich->keras) (0.1.2)\n"
     ]
    }
   ],
   "source": [
    "! pip install keras"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [],
   "source": [
    "data_path = 'Dataset/'\n",
    "\n",
    "train_path = \"Dataset/train/\"\n",
    "train_label_path = \"Dataset/trainannot/\"\n",
    "\n",
    "valid_path = \"Dataset/val/\"\n",
    "valid_label_path = \"Dataset/valannot/\"\n",
    "\n",
    "test_path = \"Dataset/test/\"\n",
    "test_label_path = \"Dataset/testannot/\"\n",
    "\n",
    "train_file = data_path + \"train.p\"\n",
    "valid_file = data_path + \"val.p\"\n",
    "test_file = data_path + \"test.p\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [],
   "source": [
    "train_list = sorted(glob(train_path + \"*.png\"))\n",
    "train_label_list = sorted(glob(train_label_path + \"*.png\"))\n",
    "\n",
    "valid_list = sorted(glob(valid_path + \"*.png\"))\n",
    "valid_label_list = sorted(glob(valid_label_path + \"*.png\"))\n",
    "\n",
    "test_list = sorted(glob(test_path + \"*.png\"))\n",
    "test_label_list = sorted(glob(test_label_path + \"*.png\"))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [],
   "source": [
    "from matplotlib import pyplot as plt\n",
    "def binarylab(labels):\n",
    "    x = np.zeros([labels.shape[0],labels.shape[1],12])\n",
    "    for i in range(labels.shape[0]):\n",
    "        for j in range(labels.shape[1]):\n",
    "            x[i,j,labels[i][j]]=1\n",
    "    return x\n",
    "\n",
    "def make_dataset(image_list, mask_list):\n",
    "  images = []\n",
    "  masks = []\n",
    "\n",
    "  for img, mask in zip(image_list, mask_list):\n",
    "    images.append(cv2.resize(cv2.imread(img), (224,224)))      # 224X224\n",
    "    masks.append(binarylab(cv2.resize(cv2.imread(mask), (224,224))))\n",
    "\n",
    "  images = np.array(images)\n",
    "  masks = np.array(masks)\n",
    "  return images, masks"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [],
   "source": [
    "X_train, y_train = make_dataset(train_list, train_label_list)\n",
    "X_val, y_val = make_dataset(valid_list, valid_label_list)\n",
    "X_test, y_test = make_dataset(test_list, test_label_list)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [],
   "source": [
    "X_train = np.concatenate([X_train, X_val])\n",
    "y_train = np.concatenate([y_train, y_val])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(<Axes: >,\n",
       " <matplotlib.image.AxesImage at 0x7f6e286c8cd0>,\n",
       " (-0.5, 223.5, 223.5, -0.5))"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 13 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "from matplotlib.gridspec import GridSpec\n",
    "from random import randint, sample\n",
    "ranidx = randint(0, len(y_train))\n",
    "gs = GridSpec(4,4)\n",
    "plt.figure(dpi=100)\n",
    "for i in range(4*3):\n",
    "    plt.subplot(gs[i]), plt.imshow(y_train[ranidx][:,:,i]), plt.axis('off')\n",
    "\n",
    "plt.subplot(gs[12]), plt.imshow(X_train[ranidx]), plt.axis('off')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [],
   "source": [
    "num_classes = 12\n",
    "input_shape = X_train.shape[1:] #(480,480,3)\n",
    "smooth = 1.\n",
    "nproc = 8"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [],
   "source": [
    "import tensorflow as tf\n",
    "from tensorflow.keras.layers import Layer\n",
    "\n",
    "\n",
    "class MaxPoolingWithArgmax2D(Layer):\n",
    "    def __init__(self, pool_size=(2, 2), strides=(2, 2), padding='same', **kwargs):\n",
    "        super(MaxPoolingWithArgmax2D, self).__init__(**kwargs)\n",
    "        self.padding = padding\n",
    "        self.pool_size = pool_size\n",
    "        self.strides = strides\n",
    "\n",
    "    def call(self, inputs, **kwargs):\n",
    "        print(\"max pooling with argmax\")\n",
    "        ksize = [1, self.pool_size[0], self.pool_size[1], 1]\n",
    "        strides = [1, self.strides[0], self.strides[1], 1]\n",
    "        padding = self.padding.upper()\n",
    "\n",
    "        output, argmax = tf.nn.max_pool_with_argmax(\n",
    "            inputs,\n",
    "            ksize=ksize,\n",
    "            strides=strides,\n",
    "            padding=padding\n",
    "        )\n",
    "        argmax = tf.cast(argmax, tf.float32)  # Correct cast\n",
    "        return [output, argmax]\n",
    "\n",
    "    def compute_output_shape(self, input_shape):\n",
    "        print(\"subsampling\")\n",
    "        ratio = (1, 2, 2, 1)\n",
    "        output_shape = [\n",
    "            dim // ratio[idx] if dim is not None else None\n",
    "            for idx, dim in enumerate(input_shape)\n",
    "        ]\n",
    "        output_shape = tuple(output_shape)\n",
    "        return [output_shape, output_shape]\n",
    "\n",
    "    def compute_mask(self, inputs, mask=None):\n",
    "        print(\"computing mask\")\n",
    "        return 2 * [None]\n",
    "\n",
    "\n",
    "class MaxUnpooling2D(Layer):\n",
    "    def __init__(self, size=(2, 2), **kwargs):\n",
    "        super(MaxUnpooling2D, self).__init__(**kwargs)\n",
    "        self.size = size\n",
    "\n",
    "    def call(self, inputs, output_shape=None):\n",
    "        updates, mask = inputs[0], inputs[1]\n",
    "\n",
    "        mask = tf.cast(mask, tf.int32)  # Corrected\n",
    "        input_shape = tf.shape(updates, out_type=tf.int32)\n",
    "\n",
    "        if output_shape is None:\n",
    "            output_shape = (\n",
    "                input_shape[0],\n",
    "                input_shape[1] * self.size[0],\n",
    "                input_shape[2] * self.size[1],\n",
    "                input_shape[3]\n",
    "            )\n",
    "        self.output_shape1 = output_shape\n",
    "\n",
    "        one_like_mask = tf.ones_like(mask, dtype=tf.int32)  # Corrected\n",
    "        batch_shape = tf.concat([[input_shape[0]], [1], [1], [1]], axis=0)  # Corrected\n",
    "        batch_range = tf.reshape(tf.range(output_shape[0], dtype=tf.int32), shape=batch_shape)\n",
    "        b = one_like_mask * batch_range\n",
    "\n",
    "        y = mask // (output_shape[2] * output_shape[3])\n",
    "        x = (mask // output_shape[3]) % output_shape[2]\n",
    "        feature_range = tf.range(output_shape[3], dtype=tf.int32)\n",
    "        f = one_like_mask * feature_range\n",
    "\n",
    "        updates_size = tf.size(updates)\n",
    "        indices = tf.transpose(tf.reshape(tf.stack([b, y, x, f]), [4, updates_size]))\n",
    "        values = tf.reshape(updates, [updates_size])\n",
    "        ret = tf.scatter_nd(indices, values, output_shape)\n",
    "\n",
    "        return ret\n",
    "\n",
    "    def compute_output_shape(self, input_shape):\n",
    "        mask_shape = input_shape[1]\n",
    "        return (\n",
    "            mask_shape[0],\n",
    "            mask_shape[1] * self.size[0],\n",
    "            mask_shape[2] * self.size[1],\n",
    "            mask_shape[3]\n",
    "        )\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [],
   "source": [
    "from keras.models import Model\n",
    "from keras.layers import Input, Activation, Reshape, Dense, Conv2D, BatchNormalization\n",
    "# from layers import MaxPoolingWithArgmax2D, MaxUnpooling2D\n",
    "\n",
    "def segnet(\n",
    "        input_shape,\n",
    "        n_labels,\n",
    "        kernel=3,\n",
    "        pool_size=(2, 2),\n",
    "        output_mode=\"softmax\"):\n",
    "\n",
    "    # encoder\n",
    "    inputs = Input(shape=input_shape)\n",
    "\n",
    "    conv_1 = Conv2D(64, (kernel, kernel), padding=\"same\", kernel_initializer='he_normal')(inputs)\n",
    "    conv_1 = BatchNormalization()(conv_1)\n",
    "    conv_1 = Activation(\"relu\")(conv_1)\n",
    "    conv_2 = Conv2D(64, (kernel, kernel), padding=\"same\", kernel_initializer='he_normal')(conv_1)\n",
    "    conv_2 = BatchNormalization()(conv_2)\n",
    "    conv_2 = Activation(\"relu\")(conv_2)\n",
    "    pool_1, mask_1 = MaxPoolingWithArgmax2D(pool_size)(conv_2)\n",
    "\n",
    "    conv_3 = Conv2D(128, (kernel, kernel), padding=\"same\", kernel_initializer='he_normal')(pool_1)\n",
    "    conv_3 = BatchNormalization()(conv_3)\n",
    "    conv_3 = Activation(\"relu\")(conv_3)\n",
    "    conv_4 = Conv2D(128, (kernel, kernel), padding=\"same\", kernel_initializer='he_normal')(conv_3)\n",
    "    conv_4 = BatchNormalization()(conv_4)\n",
    "    conv_4 = Activation(\"relu\")(conv_4)\n",
    "\n",
    "    pool_2, mask_2 = MaxPoolingWithArgmax2D(pool_size)(conv_4)\n",
    "\n",
    "    conv_5 = Conv2D(256, (kernel, kernel), padding=\"same\", kernel_initializer='he_normal')(pool_2)\n",
    "    conv_5 = BatchNormalization()(conv_5)\n",
    "    conv_5 = Activation(\"relu\")(conv_5)\n",
    "    conv_6 = Conv2D(256, (kernel, kernel), padding=\"same\", kernel_initializer='he_normal')(conv_5)\n",
    "    conv_6 = BatchNormalization()(conv_6)\n",
    "    conv_6 = Activation(\"relu\")(conv_6)\n",
    "    conv_7 = Conv2D(256, (kernel, kernel), padding=\"same\", kernel_initializer='he_normal')(conv_6)\n",
    "    conv_7 = BatchNormalization()(conv_7)\n",
    "    conv_7 = Activation(\"relu\")(conv_7)\n",
    "\n",
    "    pool_3, mask_3 = MaxPoolingWithArgmax2D(pool_size)(conv_7)\n",
    "\n",
    "    conv_8 = Conv2D(512, (kernel, kernel), padding=\"same\", kernel_initializer='he_normal')(pool_3)\n",
    "    conv_8 = BatchNormalization()(conv_8)\n",
    "    conv_8 = Activation(\"relu\")(conv_8)\n",
    "    conv_9 = Conv2D(512, (kernel, kernel), padding=\"same\", kernel_initializer='he_normal')(conv_8)\n",
    "    conv_9 = BatchNormalization()(conv_9)\n",
    "    conv_9 = Activation(\"relu\")(conv_9)\n",
    "    conv_10 = Conv2D(512, (kernel, kernel), padding=\"same\", kernel_initializer='he_normal')(conv_9)\n",
    "    conv_10 = BatchNormalization()(conv_10)\n",
    "    conv_10 = Activation(\"relu\")(conv_10)\n",
    "\n",
    "    pool_4, mask_4 = MaxPoolingWithArgmax2D(pool_size)(conv_10)\n",
    "\n",
    "    conv_11 = Conv2D(512, (kernel, kernel), padding=\"same\", kernel_initializer='he_normal')(pool_4)\n",
    "    conv_11 = BatchNormalization()(conv_11)\n",
    "    conv_11 = Activation(\"relu\")(conv_11)\n",
    "    conv_12 = Conv2D(512, (kernel, kernel), padding=\"same\", kernel_initializer='he_normal')(conv_11)\n",
    "    conv_12 = BatchNormalization()(conv_12)\n",
    "    conv_12 = Activation(\"relu\")(conv_12)\n",
    "    conv_13 = Conv2D(512, (kernel, kernel), padding=\"same\", kernel_initializer='he_normal')(conv_12)\n",
    "    conv_13 = BatchNormalization()(conv_13)\n",
    "    conv_13 = Activation(\"relu\")(conv_13)\n",
    "\n",
    "    pool_5, mask_5 = MaxPoolingWithArgmax2D(pool_size)(conv_13)\n",
    "\n",
    "    # decoder\n",
    "    unpool_1 = MaxUnpooling2D(pool_size)([pool_5, mask_5])\n",
    "\n",
    "    conv_14 = Conv2D(512, (kernel, kernel), padding=\"same\", kernel_initializer='he_normal')(unpool_1)\n",
    "    conv_14 = BatchNormalization()(conv_14)\n",
    "    conv_14 = Activation(\"relu\")(conv_14)\n",
    "    conv_15 = Conv2D(512, (kernel, kernel), padding=\"same\", kernel_initializer='he_normal')(conv_14)\n",
    "    conv_15 = BatchNormalization()(conv_15)\n",
    "    conv_15 = Activation(\"relu\")(conv_15)\n",
    "    conv_16 = Conv2D(512, (kernel, kernel), padding=\"same\", kernel_initializer='he_normal')(conv_15)\n",
    "    conv_16 = BatchNormalization()(conv_16)\n",
    "    conv_16 = Activation(\"relu\")(conv_16)\n",
    "\n",
    "    unpool_2 = MaxUnpooling2D(pool_size)([conv_16, mask_4])\n",
    "\n",
    "    conv_17 = Conv2D(512, (kernel, kernel), padding=\"same\", kernel_initializer='he_normal')(unpool_2)\n",
    "    conv_17 = BatchNormalization()(conv_17)\n",
    "    conv_17 = Activation(\"relu\")(conv_17)\n",
    "    conv_18 = Conv2D(512, (kernel, kernel), padding=\"same\", kernel_initializer='he_normal')(conv_17)\n",
    "    conv_18 = BatchNormalization()(conv_18)\n",
    "    conv_18 = Activation(\"relu\")(conv_18)\n",
    "    conv_19 = Conv2D(256, (kernel, kernel), padding=\"same\", kernel_initializer='he_normal')(conv_18)\n",
    "    conv_19 = BatchNormalization()(conv_19)\n",
    "    conv_19 = Activation(\"relu\")(conv_19)\n",
    "\n",
    "    unpool_3 = MaxUnpooling2D(pool_size)([conv_19, mask_3])\n",
    "\n",
    "    conv_20 = Conv2D(256, (kernel, kernel), padding=\"same\", kernel_initializer='he_normal')(unpool_3)\n",
    "    conv_20 = BatchNormalization()(conv_20)\n",
    "    conv_20 = Activation(\"relu\")(conv_20)\n",
    "    conv_21 = Conv2D(256, (kernel, kernel), padding=\"same\", kernel_initializer='he_normal')(conv_20)\n",
    "    conv_21 = BatchNormalization()(conv_21)\n",
    "    conv_21 = Activation(\"relu\")(conv_21)\n",
    "    conv_22 = Conv2D(128, (kernel, kernel), padding=\"same\", kernel_initializer='he_normal')(conv_21)\n",
    "    conv_22 = BatchNormalization()(conv_22)\n",
    "    conv_22 = Activation(\"relu\")(conv_22)\n",
    "\n",
    "    unpool_4 = MaxUnpooling2D(pool_size)([conv_22, mask_2])\n",
    "\n",
    "    conv_23 = Conv2D(128, (kernel, kernel), padding=\"same\", kernel_initializer='he_normal')(unpool_4)\n",
    "    conv_23 = BatchNormalization()(conv_23)\n",
    "    conv_23 = Activation(\"relu\")(conv_23)\n",
    "\n",
    "    conv_24 = Conv2D(64, (kernel, kernel), padding=\"same\", kernel_initializer='he_normal')(conv_23)\n",
    "    conv_24 = BatchNormalization()(conv_24)\n",
    "    conv_24 = Activation(\"relu\")(conv_24)\n",
    "\n",
    "    unpool_5 = MaxUnpooling2D(pool_size)([conv_24, mask_1])\n",
    "\n",
    "    conv_25 = Conv2D(64, (kernel, kernel), padding=\"same\", kernel_initializer='he_normal')(unpool_5)\n",
    "    conv_25 = BatchNormalization()(conv_25)\n",
    "    conv_25 = Activation(\"relu\")(conv_25)\n",
    "\n",
    "    conv_26 = Conv2D(n_labels, (1, 1), padding=\"same\", kernel_initializer='he_normal')(conv_25)\n",
    "    conv_26 = BatchNormalization()(conv_26)\n",
    "\n",
    "    conv_26 = Dense(12)(conv_26)\n",
    "\n",
    "    outputs = Activation(output_mode)(conv_26)\n",
    "    print(\"Build decoder done..\")\n",
    "\n",
    "    model = Model(inputs=inputs, outputs=outputs, name=\"SegNet\")\n",
    "\n",
    "    return model\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "I0000 00:00:1752484034.388256    1777 gpu_device.cc:2019] Created device /job:localhost/replica:0/task:0/device:GPU:0 with 20974 MB memory:  -> device: 0, name: NVIDIA L4, pci bus id: 0000:35:00.0, compute capability: 8.9\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "subsampling\n",
      "computing mask\n",
      "subsampling\n",
      "computing mask\n",
      "subsampling\n",
      "computing mask\n",
      "subsampling\n",
      "computing mask\n",
      "subsampling\n",
      "computing mask\n",
      "Build decoder done..\n"
     ]
    }
   ],
   "source": [
    "model= segnet(input_shape=input_shape, n_labels=12)  #, single_model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\">Model: \"SegNet\"</span>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[1mModel: \"SegNet\"\u001b[0m\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">┏━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┓\n",
       "┃<span style=\"font-weight: bold\"> Layer (type)        </span>┃<span style=\"font-weight: bold\"> Output Shape      </span>┃<span style=\"font-weight: bold\">    Param # </span>┃<span style=\"font-weight: bold\"> Connected to      </span>┃\n",
       "┡━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━┩\n",
       "│ input_layer         │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">224</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">224</span>,  │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ -                 │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">InputLayer</span>)        │ <span style=\"color: #00af00; text-decoration-color: #00af00\">3</span>)                │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ conv2d (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)     │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">224</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">224</span>,  │      <span style=\"color: #00af00; text-decoration-color: #00af00\">1,792</span> │ input_layer[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>][<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>] │\n",
       "│                     │ <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)               │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ batch_normalization │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">224</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">224</span>,  │        <span style=\"color: #00af00; text-decoration-color: #00af00\">256</span> │ conv2d[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>][<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>]      │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">BatchNormalizatio…</span> │ <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)               │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ activation          │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">224</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">224</span>,  │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ batch_normalizat… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Activation</span>)        │ <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)               │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ conv2d_1 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)   │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">224</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">224</span>,  │     <span style=\"color: #00af00; text-decoration-color: #00af00\">36,928</span> │ activation[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>][<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>]  │\n",
       "│                     │ <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)               │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ batch_normalizatio… │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">224</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">224</span>,  │        <span style=\"color: #00af00; text-decoration-color: #00af00\">256</span> │ conv2d_1[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>][<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>]    │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">BatchNormalizatio…</span> │ <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)               │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ activation_1        │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">224</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">224</span>,  │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ batch_normalizat… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Activation</span>)        │ <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)               │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ max_pooling_with_a… │ [(<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">112</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">112</span>, │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ activation_1[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>][<span style=\"color: #00af00; text-decoration-color: #00af00\">…</span> │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">MaxPoolingWithArg…</span> │ <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>), (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">112</span>,  │            │                   │\n",
       "│                     │ <span style=\"color: #00af00; text-decoration-color: #00af00\">112</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)]         │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ conv2d_2 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)   │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">112</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">112</span>,  │     <span style=\"color: #00af00; text-decoration-color: #00af00\">73,856</span> │ max_pooling_with… │\n",
       "│                     │ <span style=\"color: #00af00; text-decoration-color: #00af00\">128</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ batch_normalizatio… │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">112</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">112</span>,  │        <span style=\"color: #00af00; text-decoration-color: #00af00\">512</span> │ conv2d_2[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>][<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>]    │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">BatchNormalizatio…</span> │ <span style=\"color: #00af00; text-decoration-color: #00af00\">128</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ activation_2        │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">112</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">112</span>,  │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ batch_normalizat… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Activation</span>)        │ <span style=\"color: #00af00; text-decoration-color: #00af00\">128</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ conv2d_3 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)   │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">112</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">112</span>,  │    <span style=\"color: #00af00; text-decoration-color: #00af00\">147,584</span> │ activation_2[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>][<span style=\"color: #00af00; text-decoration-color: #00af00\">…</span> │\n",
       "│                     │ <span style=\"color: #00af00; text-decoration-color: #00af00\">128</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ batch_normalizatio… │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">112</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">112</span>,  │        <span style=\"color: #00af00; text-decoration-color: #00af00\">512</span> │ conv2d_3[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>][<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>]    │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">BatchNormalizatio…</span> │ <span style=\"color: #00af00; text-decoration-color: #00af00\">128</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ activation_3        │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">112</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">112</span>,  │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ batch_normalizat… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Activation</span>)        │ <span style=\"color: #00af00; text-decoration-color: #00af00\">128</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ max_pooling_with_a… │ [(<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">56</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">56</span>,   │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ activation_3[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>][<span style=\"color: #00af00; text-decoration-color: #00af00\">…</span> │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">MaxPoolingWithArg…</span> │ <span style=\"color: #00af00; text-decoration-color: #00af00\">128</span>), (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">56</span>,  │            │                   │\n",
       "│                     │ <span style=\"color: #00af00; text-decoration-color: #00af00\">56</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">128</span>)]         │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ conv2d_4 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)   │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">56</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">56</span>,    │    <span style=\"color: #00af00; text-decoration-color: #00af00\">295,168</span> │ max_pooling_with… │\n",
       "│                     │ <span style=\"color: #00af00; text-decoration-color: #00af00\">256</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ batch_normalizatio… │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">56</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">56</span>,    │      <span style=\"color: #00af00; text-decoration-color: #00af00\">1,024</span> │ conv2d_4[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>][<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>]    │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">BatchNormalizatio…</span> │ <span style=\"color: #00af00; text-decoration-color: #00af00\">256</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ activation_4        │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">56</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">56</span>,    │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ batch_normalizat… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Activation</span>)        │ <span style=\"color: #00af00; text-decoration-color: #00af00\">256</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ conv2d_5 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)   │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">56</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">56</span>,    │    <span style=\"color: #00af00; text-decoration-color: #00af00\">590,080</span> │ activation_4[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>][<span style=\"color: #00af00; text-decoration-color: #00af00\">…</span> │\n",
       "│                     │ <span style=\"color: #00af00; text-decoration-color: #00af00\">256</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ batch_normalizatio… │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">56</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">56</span>,    │      <span style=\"color: #00af00; text-decoration-color: #00af00\">1,024</span> │ conv2d_5[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>][<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>]    │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">BatchNormalizatio…</span> │ <span style=\"color: #00af00; text-decoration-color: #00af00\">256</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ activation_5        │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">56</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">56</span>,    │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ batch_normalizat… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Activation</span>)        │ <span style=\"color: #00af00; text-decoration-color: #00af00\">256</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ conv2d_6 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)   │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">56</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">56</span>,    │    <span style=\"color: #00af00; text-decoration-color: #00af00\">590,080</span> │ activation_5[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>][<span style=\"color: #00af00; text-decoration-color: #00af00\">…</span> │\n",
       "│                     │ <span style=\"color: #00af00; text-decoration-color: #00af00\">256</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ batch_normalizatio… │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">56</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">56</span>,    │      <span style=\"color: #00af00; text-decoration-color: #00af00\">1,024</span> │ conv2d_6[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>][<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>]    │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">BatchNormalizatio…</span> │ <span style=\"color: #00af00; text-decoration-color: #00af00\">256</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ activation_6        │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">56</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">56</span>,    │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ batch_normalizat… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Activation</span>)        │ <span style=\"color: #00af00; text-decoration-color: #00af00\">256</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ max_pooling_with_a… │ [(<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">28</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">28</span>,   │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ activation_6[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>][<span style=\"color: #00af00; text-decoration-color: #00af00\">…</span> │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">MaxPoolingWithArg…</span> │ <span style=\"color: #00af00; text-decoration-color: #00af00\">256</span>), (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">28</span>,  │            │                   │\n",
       "│                     │ <span style=\"color: #00af00; text-decoration-color: #00af00\">28</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">256</span>)]         │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ conv2d_7 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)   │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">28</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">28</span>,    │  <span style=\"color: #00af00; text-decoration-color: #00af00\">1,180,160</span> │ max_pooling_with… │\n",
       "│                     │ <span style=\"color: #00af00; text-decoration-color: #00af00\">512</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ batch_normalizatio… │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">28</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">28</span>,    │      <span style=\"color: #00af00; text-decoration-color: #00af00\">2,048</span> │ conv2d_7[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>][<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>]    │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">BatchNormalizatio…</span> │ <span style=\"color: #00af00; text-decoration-color: #00af00\">512</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ activation_7        │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">28</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">28</span>,    │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ batch_normalizat… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Activation</span>)        │ <span style=\"color: #00af00; text-decoration-color: #00af00\">512</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ conv2d_8 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)   │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">28</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">28</span>,    │  <span style=\"color: #00af00; text-decoration-color: #00af00\">2,359,808</span> │ activation_7[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>][<span style=\"color: #00af00; text-decoration-color: #00af00\">…</span> │\n",
       "│                     │ <span style=\"color: #00af00; text-decoration-color: #00af00\">512</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ batch_normalizatio… │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">28</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">28</span>,    │      <span style=\"color: #00af00; text-decoration-color: #00af00\">2,048</span> │ conv2d_8[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>][<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>]    │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">BatchNormalizatio…</span> │ <span style=\"color: #00af00; text-decoration-color: #00af00\">512</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ activation_8        │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">28</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">28</span>,    │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ batch_normalizat… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Activation</span>)        │ <span style=\"color: #00af00; text-decoration-color: #00af00\">512</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ conv2d_9 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)   │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">28</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">28</span>,    │  <span style=\"color: #00af00; text-decoration-color: #00af00\">2,359,808</span> │ activation_8[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>][<span style=\"color: #00af00; text-decoration-color: #00af00\">…</span> │\n",
       "│                     │ <span style=\"color: #00af00; text-decoration-color: #00af00\">512</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ batch_normalizatio… │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">28</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">28</span>,    │      <span style=\"color: #00af00; text-decoration-color: #00af00\">2,048</span> │ conv2d_9[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>][<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>]    │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">BatchNormalizatio…</span> │ <span style=\"color: #00af00; text-decoration-color: #00af00\">512</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ activation_9        │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">28</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">28</span>,    │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ batch_normalizat… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Activation</span>)        │ <span style=\"color: #00af00; text-decoration-color: #00af00\">512</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ max_pooling_with_a… │ [(<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>,   │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ activation_9[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>][<span style=\"color: #00af00; text-decoration-color: #00af00\">…</span> │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">MaxPoolingWithArg…</span> │ <span style=\"color: #00af00; text-decoration-color: #00af00\">512</span>), (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>,  │            │                   │\n",
       "│                     │ <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">512</span>)]         │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ conv2d_10 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)  │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>,    │  <span style=\"color: #00af00; text-decoration-color: #00af00\">2,359,808</span> │ max_pooling_with… │\n",
       "│                     │ <span style=\"color: #00af00; text-decoration-color: #00af00\">512</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ batch_normalizatio… │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>,    │      <span style=\"color: #00af00; text-decoration-color: #00af00\">2,048</span> │ conv2d_10[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>][<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>]   │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">BatchNormalizatio…</span> │ <span style=\"color: #00af00; text-decoration-color: #00af00\">512</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ activation_10       │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>,    │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ batch_normalizat… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Activation</span>)        │ <span style=\"color: #00af00; text-decoration-color: #00af00\">512</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ conv2d_11 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)  │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>,    │  <span style=\"color: #00af00; text-decoration-color: #00af00\">2,359,808</span> │ activation_10[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>]… │\n",
       "│                     │ <span style=\"color: #00af00; text-decoration-color: #00af00\">512</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ batch_normalizatio… │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>,    │      <span style=\"color: #00af00; text-decoration-color: #00af00\">2,048</span> │ conv2d_11[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>][<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>]   │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">BatchNormalizatio…</span> │ <span style=\"color: #00af00; text-decoration-color: #00af00\">512</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ activation_11       │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>,    │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ batch_normalizat… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Activation</span>)        │ <span style=\"color: #00af00; text-decoration-color: #00af00\">512</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ conv2d_12 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)  │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>,    │  <span style=\"color: #00af00; text-decoration-color: #00af00\">2,359,808</span> │ activation_11[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>]… │\n",
       "│                     │ <span style=\"color: #00af00; text-decoration-color: #00af00\">512</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ batch_normalizatio… │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>,    │      <span style=\"color: #00af00; text-decoration-color: #00af00\">2,048</span> │ conv2d_12[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>][<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>]   │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">BatchNormalizatio…</span> │ <span style=\"color: #00af00; text-decoration-color: #00af00\">512</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ activation_12       │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>,    │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ batch_normalizat… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Activation</span>)        │ <span style=\"color: #00af00; text-decoration-color: #00af00\">512</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ max_pooling_with_a… │ [(<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">7</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">7</span>,     │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ activation_12[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>]… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">MaxPoolingWithArg…</span> │ <span style=\"color: #00af00; text-decoration-color: #00af00\">512</span>), (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">7</span>,   │            │                   │\n",
       "│                     │ <span style=\"color: #00af00; text-decoration-color: #00af00\">7</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">512</span>)]          │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ max_unpooling2d     │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>,    │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ max_pooling_with… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">MaxUnpooling2D</span>)    │ <span style=\"color: #00af00; text-decoration-color: #00af00\">512</span>)              │            │ max_pooling_with… │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ conv2d_13 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)  │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>,    │  <span style=\"color: #00af00; text-decoration-color: #00af00\">2,359,808</span> │ max_unpooling2d[<span style=\"color: #00af00; text-decoration-color: #00af00\">…</span> │\n",
       "│                     │ <span style=\"color: #00af00; text-decoration-color: #00af00\">512</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ batch_normalizatio… │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>,    │      <span style=\"color: #00af00; text-decoration-color: #00af00\">2,048</span> │ conv2d_13[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>][<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>]   │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">BatchNormalizatio…</span> │ <span style=\"color: #00af00; text-decoration-color: #00af00\">512</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ activation_13       │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>,    │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ batch_normalizat… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Activation</span>)        │ <span style=\"color: #00af00; text-decoration-color: #00af00\">512</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ conv2d_14 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)  │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>,    │  <span style=\"color: #00af00; text-decoration-color: #00af00\">2,359,808</span> │ activation_13[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>]… │\n",
       "│                     │ <span style=\"color: #00af00; text-decoration-color: #00af00\">512</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ batch_normalizatio… │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>,    │      <span style=\"color: #00af00; text-decoration-color: #00af00\">2,048</span> │ conv2d_14[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>][<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>]   │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">BatchNormalizatio…</span> │ <span style=\"color: #00af00; text-decoration-color: #00af00\">512</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ activation_14       │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>,    │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ batch_normalizat… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Activation</span>)        │ <span style=\"color: #00af00; text-decoration-color: #00af00\">512</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ conv2d_15 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)  │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>,    │  <span style=\"color: #00af00; text-decoration-color: #00af00\">2,359,808</span> │ activation_14[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>]… │\n",
       "│                     │ <span style=\"color: #00af00; text-decoration-color: #00af00\">512</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ batch_normalizatio… │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>,    │      <span style=\"color: #00af00; text-decoration-color: #00af00\">2,048</span> │ conv2d_15[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>][<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>]   │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">BatchNormalizatio…</span> │ <span style=\"color: #00af00; text-decoration-color: #00af00\">512</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ activation_15       │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">14</span>,    │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ batch_normalizat… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Activation</span>)        │ <span style=\"color: #00af00; text-decoration-color: #00af00\">512</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ max_unpooling2d_1   │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">28</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">28</span>,    │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ activation_15[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>]… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">MaxUnpooling2D</span>)    │ <span style=\"color: #00af00; text-decoration-color: #00af00\">512</span>)              │            │ max_pooling_with… │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ conv2d_16 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)  │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">28</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">28</span>,    │  <span style=\"color: #00af00; text-decoration-color: #00af00\">2,359,808</span> │ max_unpooling2d_… │\n",
       "│                     │ <span style=\"color: #00af00; text-decoration-color: #00af00\">512</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ batch_normalizatio… │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">28</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">28</span>,    │      <span style=\"color: #00af00; text-decoration-color: #00af00\">2,048</span> │ conv2d_16[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>][<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>]   │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">BatchNormalizatio…</span> │ <span style=\"color: #00af00; text-decoration-color: #00af00\">512</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ activation_16       │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">28</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">28</span>,    │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ batch_normalizat… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Activation</span>)        │ <span style=\"color: #00af00; text-decoration-color: #00af00\">512</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ conv2d_17 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)  │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">28</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">28</span>,    │  <span style=\"color: #00af00; text-decoration-color: #00af00\">2,359,808</span> │ activation_16[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>]… │\n",
       "│                     │ <span style=\"color: #00af00; text-decoration-color: #00af00\">512</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ batch_normalizatio… │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">28</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">28</span>,    │      <span style=\"color: #00af00; text-decoration-color: #00af00\">2,048</span> │ conv2d_17[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>][<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>]   │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">BatchNormalizatio…</span> │ <span style=\"color: #00af00; text-decoration-color: #00af00\">512</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ activation_17       │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">28</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">28</span>,    │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ batch_normalizat… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Activation</span>)        │ <span style=\"color: #00af00; text-decoration-color: #00af00\">512</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ conv2d_18 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)  │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">28</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">28</span>,    │  <span style=\"color: #00af00; text-decoration-color: #00af00\">1,179,904</span> │ activation_17[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>]… │\n",
       "│                     │ <span style=\"color: #00af00; text-decoration-color: #00af00\">256</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ batch_normalizatio… │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">28</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">28</span>,    │      <span style=\"color: #00af00; text-decoration-color: #00af00\">1,024</span> │ conv2d_18[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>][<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>]   │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">BatchNormalizatio…</span> │ <span style=\"color: #00af00; text-decoration-color: #00af00\">256</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ activation_18       │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">28</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">28</span>,    │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ batch_normalizat… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Activation</span>)        │ <span style=\"color: #00af00; text-decoration-color: #00af00\">256</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ max_unpooling2d_2   │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">56</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">56</span>,    │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ activation_18[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>]… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">MaxUnpooling2D</span>)    │ <span style=\"color: #00af00; text-decoration-color: #00af00\">256</span>)              │            │ max_pooling_with… │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ conv2d_19 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)  │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">56</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">56</span>,    │    <span style=\"color: #00af00; text-decoration-color: #00af00\">590,080</span> │ max_unpooling2d_… │\n",
       "│                     │ <span style=\"color: #00af00; text-decoration-color: #00af00\">256</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ batch_normalizatio… │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">56</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">56</span>,    │      <span style=\"color: #00af00; text-decoration-color: #00af00\">1,024</span> │ conv2d_19[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>][<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>]   │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">BatchNormalizatio…</span> │ <span style=\"color: #00af00; text-decoration-color: #00af00\">256</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ activation_19       │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">56</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">56</span>,    │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ batch_normalizat… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Activation</span>)        │ <span style=\"color: #00af00; text-decoration-color: #00af00\">256</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ conv2d_20 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)  │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">56</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">56</span>,    │    <span style=\"color: #00af00; text-decoration-color: #00af00\">590,080</span> │ activation_19[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>]… │\n",
       "│                     │ <span style=\"color: #00af00; text-decoration-color: #00af00\">256</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ batch_normalizatio… │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">56</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">56</span>,    │      <span style=\"color: #00af00; text-decoration-color: #00af00\">1,024</span> │ conv2d_20[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>][<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>]   │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">BatchNormalizatio…</span> │ <span style=\"color: #00af00; text-decoration-color: #00af00\">256</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ activation_20       │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">56</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">56</span>,    │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ batch_normalizat… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Activation</span>)        │ <span style=\"color: #00af00; text-decoration-color: #00af00\">256</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ conv2d_21 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)  │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">56</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">56</span>,    │    <span style=\"color: #00af00; text-decoration-color: #00af00\">295,040</span> │ activation_20[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>]… │\n",
       "│                     │ <span style=\"color: #00af00; text-decoration-color: #00af00\">128</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ batch_normalizatio… │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">56</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">56</span>,    │        <span style=\"color: #00af00; text-decoration-color: #00af00\">512</span> │ conv2d_21[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>][<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>]   │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">BatchNormalizatio…</span> │ <span style=\"color: #00af00; text-decoration-color: #00af00\">128</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ activation_21       │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">56</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">56</span>,    │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ batch_normalizat… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Activation</span>)        │ <span style=\"color: #00af00; text-decoration-color: #00af00\">128</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ max_unpooling2d_3   │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">112</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">112</span>,  │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ activation_21[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>]… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">MaxUnpooling2D</span>)    │ <span style=\"color: #00af00; text-decoration-color: #00af00\">128</span>)              │            │ max_pooling_with… │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ conv2d_22 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)  │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">112</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">112</span>,  │    <span style=\"color: #00af00; text-decoration-color: #00af00\">147,584</span> │ max_unpooling2d_… │\n",
       "│                     │ <span style=\"color: #00af00; text-decoration-color: #00af00\">128</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ batch_normalizatio… │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">112</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">112</span>,  │        <span style=\"color: #00af00; text-decoration-color: #00af00\">512</span> │ conv2d_22[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>][<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>]   │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">BatchNormalizatio…</span> │ <span style=\"color: #00af00; text-decoration-color: #00af00\">128</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ activation_22       │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">112</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">112</span>,  │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ batch_normalizat… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Activation</span>)        │ <span style=\"color: #00af00; text-decoration-color: #00af00\">128</span>)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ conv2d_23 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)  │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">112</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">112</span>,  │     <span style=\"color: #00af00; text-decoration-color: #00af00\">73,792</span> │ activation_22[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>]… │\n",
       "│                     │ <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)               │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ batch_normalizatio… │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">112</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">112</span>,  │        <span style=\"color: #00af00; text-decoration-color: #00af00\">256</span> │ conv2d_23[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>][<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>]   │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">BatchNormalizatio…</span> │ <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)               │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ activation_23       │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">112</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">112</span>,  │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ batch_normalizat… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Activation</span>)        │ <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)               │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ max_unpooling2d_4   │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">224</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">224</span>,  │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ activation_23[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>]… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">MaxUnpooling2D</span>)    │ <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)               │            │ max_pooling_with… │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ conv2d_24 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)  │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">224</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">224</span>,  │     <span style=\"color: #00af00; text-decoration-color: #00af00\">36,928</span> │ max_unpooling2d_… │\n",
       "│                     │ <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)               │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ batch_normalizatio… │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">224</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">224</span>,  │        <span style=\"color: #00af00; text-decoration-color: #00af00\">256</span> │ conv2d_24[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>][<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>]   │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">BatchNormalizatio…</span> │ <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)               │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ activation_24       │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">224</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">224</span>,  │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ batch_normalizat… │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Activation</span>)        │ <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)               │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ conv2d_25 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)  │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">224</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">224</span>,  │        <span style=\"color: #00af00; text-decoration-color: #00af00\">780</span> │ activation_24[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>]… │\n",
       "│                     │ <span style=\"color: #00af00; text-decoration-color: #00af00\">12</span>)               │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ batch_normalizatio… │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">224</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">224</span>,  │         <span style=\"color: #00af00; text-decoration-color: #00af00\">48</span> │ conv2d_25[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>][<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>]   │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">BatchNormalizatio…</span> │ <span style=\"color: #00af00; text-decoration-color: #00af00\">12</span>)               │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ dense (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)       │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">224</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">224</span>,  │        <span style=\"color: #00af00; text-decoration-color: #00af00\">156</span> │ batch_normalizat… │\n",
       "│                     │ <span style=\"color: #00af00; text-decoration-color: #00af00\">12</span>)               │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ activation_25       │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">224</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">224</span>,  │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ dense[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>][<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>]       │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Activation</span>)        │ <span style=\"color: #00af00; text-decoration-color: #00af00\">12</span>)               │            │                   │\n",
       "└─────────────────────┴───────────────────┴────────────┴───────────────────┘\n",
       "</pre>\n"
      ],
      "text/plain": [
       "┏━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┓\n",
       "┃\u001b[1m \u001b[0m\u001b[1mLayer (type)       \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1mOutput Shape     \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1m   Param #\u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1mConnected to     \u001b[0m\u001b[1m \u001b[0m┃\n",
       "┡━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━┩\n",
       "│ input_layer         │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m224\u001b[0m, \u001b[38;5;34m224\u001b[0m,  │          \u001b[38;5;34m0\u001b[0m │ -                 │\n",
       "│ (\u001b[38;5;33mInputLayer\u001b[0m)        │ \u001b[38;5;34m3\u001b[0m)                │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ conv2d (\u001b[38;5;33mConv2D\u001b[0m)     │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m224\u001b[0m, \u001b[38;5;34m224\u001b[0m,  │      \u001b[38;5;34m1,792\u001b[0m │ input_layer[\u001b[38;5;34m0\u001b[0m][\u001b[38;5;34m0\u001b[0m] │\n",
       "│                     │ \u001b[38;5;34m64\u001b[0m)               │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ batch_normalization │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m224\u001b[0m, \u001b[38;5;34m224\u001b[0m,  │        \u001b[38;5;34m256\u001b[0m │ conv2d[\u001b[38;5;34m0\u001b[0m][\u001b[38;5;34m0\u001b[0m]      │\n",
       "│ (\u001b[38;5;33mBatchNormalizatio…\u001b[0m │ \u001b[38;5;34m64\u001b[0m)               │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ activation          │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m224\u001b[0m, \u001b[38;5;34m224\u001b[0m,  │          \u001b[38;5;34m0\u001b[0m │ batch_normalizat… │\n",
       "│ (\u001b[38;5;33mActivation\u001b[0m)        │ \u001b[38;5;34m64\u001b[0m)               │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ conv2d_1 (\u001b[38;5;33mConv2D\u001b[0m)   │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m224\u001b[0m, \u001b[38;5;34m224\u001b[0m,  │     \u001b[38;5;34m36,928\u001b[0m │ activation[\u001b[38;5;34m0\u001b[0m][\u001b[38;5;34m0\u001b[0m]  │\n",
       "│                     │ \u001b[38;5;34m64\u001b[0m)               │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ batch_normalizatio… │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m224\u001b[0m, \u001b[38;5;34m224\u001b[0m,  │        \u001b[38;5;34m256\u001b[0m │ conv2d_1[\u001b[38;5;34m0\u001b[0m][\u001b[38;5;34m0\u001b[0m]    │\n",
       "│ (\u001b[38;5;33mBatchNormalizatio…\u001b[0m │ \u001b[38;5;34m64\u001b[0m)               │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ activation_1        │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m224\u001b[0m, \u001b[38;5;34m224\u001b[0m,  │          \u001b[38;5;34m0\u001b[0m │ batch_normalizat… │\n",
       "│ (\u001b[38;5;33mActivation\u001b[0m)        │ \u001b[38;5;34m64\u001b[0m)               │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ max_pooling_with_a… │ [(\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m112\u001b[0m, \u001b[38;5;34m112\u001b[0m, │          \u001b[38;5;34m0\u001b[0m │ activation_1[\u001b[38;5;34m0\u001b[0m][\u001b[38;5;34m…\u001b[0m │\n",
       "│ (\u001b[38;5;33mMaxPoolingWithArg…\u001b[0m │ \u001b[38;5;34m64\u001b[0m), (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m112\u001b[0m,  │            │                   │\n",
       "│                     │ \u001b[38;5;34m112\u001b[0m, \u001b[38;5;34m64\u001b[0m)]         │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ conv2d_2 (\u001b[38;5;33mConv2D\u001b[0m)   │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m112\u001b[0m, \u001b[38;5;34m112\u001b[0m,  │     \u001b[38;5;34m73,856\u001b[0m │ max_pooling_with… │\n",
       "│                     │ \u001b[38;5;34m128\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ batch_normalizatio… │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m112\u001b[0m, \u001b[38;5;34m112\u001b[0m,  │        \u001b[38;5;34m512\u001b[0m │ conv2d_2[\u001b[38;5;34m0\u001b[0m][\u001b[38;5;34m0\u001b[0m]    │\n",
       "│ (\u001b[38;5;33mBatchNormalizatio…\u001b[0m │ \u001b[38;5;34m128\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ activation_2        │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m112\u001b[0m, \u001b[38;5;34m112\u001b[0m,  │          \u001b[38;5;34m0\u001b[0m │ batch_normalizat… │\n",
       "│ (\u001b[38;5;33mActivation\u001b[0m)        │ \u001b[38;5;34m128\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ conv2d_3 (\u001b[38;5;33mConv2D\u001b[0m)   │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m112\u001b[0m, \u001b[38;5;34m112\u001b[0m,  │    \u001b[38;5;34m147,584\u001b[0m │ activation_2[\u001b[38;5;34m0\u001b[0m][\u001b[38;5;34m…\u001b[0m │\n",
       "│                     │ \u001b[38;5;34m128\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ batch_normalizatio… │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m112\u001b[0m, \u001b[38;5;34m112\u001b[0m,  │        \u001b[38;5;34m512\u001b[0m │ conv2d_3[\u001b[38;5;34m0\u001b[0m][\u001b[38;5;34m0\u001b[0m]    │\n",
       "│ (\u001b[38;5;33mBatchNormalizatio…\u001b[0m │ \u001b[38;5;34m128\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ activation_3        │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m112\u001b[0m, \u001b[38;5;34m112\u001b[0m,  │          \u001b[38;5;34m0\u001b[0m │ batch_normalizat… │\n",
       "│ (\u001b[38;5;33mActivation\u001b[0m)        │ \u001b[38;5;34m128\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ max_pooling_with_a… │ [(\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m56\u001b[0m, \u001b[38;5;34m56\u001b[0m,   │          \u001b[38;5;34m0\u001b[0m │ activation_3[\u001b[38;5;34m0\u001b[0m][\u001b[38;5;34m…\u001b[0m │\n",
       "│ (\u001b[38;5;33mMaxPoolingWithArg…\u001b[0m │ \u001b[38;5;34m128\u001b[0m), (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m56\u001b[0m,  │            │                   │\n",
       "│                     │ \u001b[38;5;34m56\u001b[0m, \u001b[38;5;34m128\u001b[0m)]         │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ conv2d_4 (\u001b[38;5;33mConv2D\u001b[0m)   │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m56\u001b[0m, \u001b[38;5;34m56\u001b[0m,    │    \u001b[38;5;34m295,168\u001b[0m │ max_pooling_with… │\n",
       "│                     │ \u001b[38;5;34m256\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ batch_normalizatio… │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m56\u001b[0m, \u001b[38;5;34m56\u001b[0m,    │      \u001b[38;5;34m1,024\u001b[0m │ conv2d_4[\u001b[38;5;34m0\u001b[0m][\u001b[38;5;34m0\u001b[0m]    │\n",
       "│ (\u001b[38;5;33mBatchNormalizatio…\u001b[0m │ \u001b[38;5;34m256\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ activation_4        │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m56\u001b[0m, \u001b[38;5;34m56\u001b[0m,    │          \u001b[38;5;34m0\u001b[0m │ batch_normalizat… │\n",
       "│ (\u001b[38;5;33mActivation\u001b[0m)        │ \u001b[38;5;34m256\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ conv2d_5 (\u001b[38;5;33mConv2D\u001b[0m)   │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m56\u001b[0m, \u001b[38;5;34m56\u001b[0m,    │    \u001b[38;5;34m590,080\u001b[0m │ activation_4[\u001b[38;5;34m0\u001b[0m][\u001b[38;5;34m…\u001b[0m │\n",
       "│                     │ \u001b[38;5;34m256\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ batch_normalizatio… │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m56\u001b[0m, \u001b[38;5;34m56\u001b[0m,    │      \u001b[38;5;34m1,024\u001b[0m │ conv2d_5[\u001b[38;5;34m0\u001b[0m][\u001b[38;5;34m0\u001b[0m]    │\n",
       "│ (\u001b[38;5;33mBatchNormalizatio…\u001b[0m │ \u001b[38;5;34m256\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ activation_5        │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m56\u001b[0m, \u001b[38;5;34m56\u001b[0m,    │          \u001b[38;5;34m0\u001b[0m │ batch_normalizat… │\n",
       "│ (\u001b[38;5;33mActivation\u001b[0m)        │ \u001b[38;5;34m256\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ conv2d_6 (\u001b[38;5;33mConv2D\u001b[0m)   │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m56\u001b[0m, \u001b[38;5;34m56\u001b[0m,    │    \u001b[38;5;34m590,080\u001b[0m │ activation_5[\u001b[38;5;34m0\u001b[0m][\u001b[38;5;34m…\u001b[0m │\n",
       "│                     │ \u001b[38;5;34m256\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ batch_normalizatio… │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m56\u001b[0m, \u001b[38;5;34m56\u001b[0m,    │      \u001b[38;5;34m1,024\u001b[0m │ conv2d_6[\u001b[38;5;34m0\u001b[0m][\u001b[38;5;34m0\u001b[0m]    │\n",
       "│ (\u001b[38;5;33mBatchNormalizatio…\u001b[0m │ \u001b[38;5;34m256\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ activation_6        │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m56\u001b[0m, \u001b[38;5;34m56\u001b[0m,    │          \u001b[38;5;34m0\u001b[0m │ batch_normalizat… │\n",
       "│ (\u001b[38;5;33mActivation\u001b[0m)        │ \u001b[38;5;34m256\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ max_pooling_with_a… │ [(\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m28\u001b[0m, \u001b[38;5;34m28\u001b[0m,   │          \u001b[38;5;34m0\u001b[0m │ activation_6[\u001b[38;5;34m0\u001b[0m][\u001b[38;5;34m…\u001b[0m │\n",
       "│ (\u001b[38;5;33mMaxPoolingWithArg…\u001b[0m │ \u001b[38;5;34m256\u001b[0m), (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m28\u001b[0m,  │            │                   │\n",
       "│                     │ \u001b[38;5;34m28\u001b[0m, \u001b[38;5;34m256\u001b[0m)]         │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ conv2d_7 (\u001b[38;5;33mConv2D\u001b[0m)   │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m28\u001b[0m, \u001b[38;5;34m28\u001b[0m,    │  \u001b[38;5;34m1,180,160\u001b[0m │ max_pooling_with… │\n",
       "│                     │ \u001b[38;5;34m512\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ batch_normalizatio… │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m28\u001b[0m, \u001b[38;5;34m28\u001b[0m,    │      \u001b[38;5;34m2,048\u001b[0m │ conv2d_7[\u001b[38;5;34m0\u001b[0m][\u001b[38;5;34m0\u001b[0m]    │\n",
       "│ (\u001b[38;5;33mBatchNormalizatio…\u001b[0m │ \u001b[38;5;34m512\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ activation_7        │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m28\u001b[0m, \u001b[38;5;34m28\u001b[0m,    │          \u001b[38;5;34m0\u001b[0m │ batch_normalizat… │\n",
       "│ (\u001b[38;5;33mActivation\u001b[0m)        │ \u001b[38;5;34m512\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ conv2d_8 (\u001b[38;5;33mConv2D\u001b[0m)   │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m28\u001b[0m, \u001b[38;5;34m28\u001b[0m,    │  \u001b[38;5;34m2,359,808\u001b[0m │ activation_7[\u001b[38;5;34m0\u001b[0m][\u001b[38;5;34m…\u001b[0m │\n",
       "│                     │ \u001b[38;5;34m512\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ batch_normalizatio… │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m28\u001b[0m, \u001b[38;5;34m28\u001b[0m,    │      \u001b[38;5;34m2,048\u001b[0m │ conv2d_8[\u001b[38;5;34m0\u001b[0m][\u001b[38;5;34m0\u001b[0m]    │\n",
       "│ (\u001b[38;5;33mBatchNormalizatio…\u001b[0m │ \u001b[38;5;34m512\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ activation_8        │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m28\u001b[0m, \u001b[38;5;34m28\u001b[0m,    │          \u001b[38;5;34m0\u001b[0m │ batch_normalizat… │\n",
       "│ (\u001b[38;5;33mActivation\u001b[0m)        │ \u001b[38;5;34m512\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ conv2d_9 (\u001b[38;5;33mConv2D\u001b[0m)   │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m28\u001b[0m, \u001b[38;5;34m28\u001b[0m,    │  \u001b[38;5;34m2,359,808\u001b[0m │ activation_8[\u001b[38;5;34m0\u001b[0m][\u001b[38;5;34m…\u001b[0m │\n",
       "│                     │ \u001b[38;5;34m512\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ batch_normalizatio… │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m28\u001b[0m, \u001b[38;5;34m28\u001b[0m,    │      \u001b[38;5;34m2,048\u001b[0m │ conv2d_9[\u001b[38;5;34m0\u001b[0m][\u001b[38;5;34m0\u001b[0m]    │\n",
       "│ (\u001b[38;5;33mBatchNormalizatio…\u001b[0m │ \u001b[38;5;34m512\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ activation_9        │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m28\u001b[0m, \u001b[38;5;34m28\u001b[0m,    │          \u001b[38;5;34m0\u001b[0m │ batch_normalizat… │\n",
       "│ (\u001b[38;5;33mActivation\u001b[0m)        │ \u001b[38;5;34m512\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ max_pooling_with_a… │ [(\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m14\u001b[0m, \u001b[38;5;34m14\u001b[0m,   │          \u001b[38;5;34m0\u001b[0m │ activation_9[\u001b[38;5;34m0\u001b[0m][\u001b[38;5;34m…\u001b[0m │\n",
       "│ (\u001b[38;5;33mMaxPoolingWithArg…\u001b[0m │ \u001b[38;5;34m512\u001b[0m), (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m14\u001b[0m,  │            │                   │\n",
       "│                     │ \u001b[38;5;34m14\u001b[0m, \u001b[38;5;34m512\u001b[0m)]         │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ conv2d_10 (\u001b[38;5;33mConv2D\u001b[0m)  │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m14\u001b[0m, \u001b[38;5;34m14\u001b[0m,    │  \u001b[38;5;34m2,359,808\u001b[0m │ max_pooling_with… │\n",
       "│                     │ \u001b[38;5;34m512\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ batch_normalizatio… │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m14\u001b[0m, \u001b[38;5;34m14\u001b[0m,    │      \u001b[38;5;34m2,048\u001b[0m │ conv2d_10[\u001b[38;5;34m0\u001b[0m][\u001b[38;5;34m0\u001b[0m]   │\n",
       "│ (\u001b[38;5;33mBatchNormalizatio…\u001b[0m │ \u001b[38;5;34m512\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ activation_10       │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m14\u001b[0m, \u001b[38;5;34m14\u001b[0m,    │          \u001b[38;5;34m0\u001b[0m │ batch_normalizat… │\n",
       "│ (\u001b[38;5;33mActivation\u001b[0m)        │ \u001b[38;5;34m512\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ conv2d_11 (\u001b[38;5;33mConv2D\u001b[0m)  │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m14\u001b[0m, \u001b[38;5;34m14\u001b[0m,    │  \u001b[38;5;34m2,359,808\u001b[0m │ activation_10[\u001b[38;5;34m0\u001b[0m]… │\n",
       "│                     │ \u001b[38;5;34m512\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ batch_normalizatio… │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m14\u001b[0m, \u001b[38;5;34m14\u001b[0m,    │      \u001b[38;5;34m2,048\u001b[0m │ conv2d_11[\u001b[38;5;34m0\u001b[0m][\u001b[38;5;34m0\u001b[0m]   │\n",
       "│ (\u001b[38;5;33mBatchNormalizatio…\u001b[0m │ \u001b[38;5;34m512\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ activation_11       │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m14\u001b[0m, \u001b[38;5;34m14\u001b[0m,    │          \u001b[38;5;34m0\u001b[0m │ batch_normalizat… │\n",
       "│ (\u001b[38;5;33mActivation\u001b[0m)        │ \u001b[38;5;34m512\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ conv2d_12 (\u001b[38;5;33mConv2D\u001b[0m)  │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m14\u001b[0m, \u001b[38;5;34m14\u001b[0m,    │  \u001b[38;5;34m2,359,808\u001b[0m │ activation_11[\u001b[38;5;34m0\u001b[0m]… │\n",
       "│                     │ \u001b[38;5;34m512\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ batch_normalizatio… │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m14\u001b[0m, \u001b[38;5;34m14\u001b[0m,    │      \u001b[38;5;34m2,048\u001b[0m │ conv2d_12[\u001b[38;5;34m0\u001b[0m][\u001b[38;5;34m0\u001b[0m]   │\n",
       "│ (\u001b[38;5;33mBatchNormalizatio…\u001b[0m │ \u001b[38;5;34m512\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ activation_12       │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m14\u001b[0m, \u001b[38;5;34m14\u001b[0m,    │          \u001b[38;5;34m0\u001b[0m │ batch_normalizat… │\n",
       "│ (\u001b[38;5;33mActivation\u001b[0m)        │ \u001b[38;5;34m512\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ max_pooling_with_a… │ [(\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m7\u001b[0m, \u001b[38;5;34m7\u001b[0m,     │          \u001b[38;5;34m0\u001b[0m │ activation_12[\u001b[38;5;34m0\u001b[0m]… │\n",
       "│ (\u001b[38;5;33mMaxPoolingWithArg…\u001b[0m │ \u001b[38;5;34m512\u001b[0m), (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m7\u001b[0m,   │            │                   │\n",
       "│                     │ \u001b[38;5;34m7\u001b[0m, \u001b[38;5;34m512\u001b[0m)]          │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ max_unpooling2d     │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m14\u001b[0m, \u001b[38;5;34m14\u001b[0m,    │          \u001b[38;5;34m0\u001b[0m │ max_pooling_with… │\n",
       "│ (\u001b[38;5;33mMaxUnpooling2D\u001b[0m)    │ \u001b[38;5;34m512\u001b[0m)              │            │ max_pooling_with… │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ conv2d_13 (\u001b[38;5;33mConv2D\u001b[0m)  │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m14\u001b[0m, \u001b[38;5;34m14\u001b[0m,    │  \u001b[38;5;34m2,359,808\u001b[0m │ max_unpooling2d[\u001b[38;5;34m…\u001b[0m │\n",
       "│                     │ \u001b[38;5;34m512\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ batch_normalizatio… │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m14\u001b[0m, \u001b[38;5;34m14\u001b[0m,    │      \u001b[38;5;34m2,048\u001b[0m │ conv2d_13[\u001b[38;5;34m0\u001b[0m][\u001b[38;5;34m0\u001b[0m]   │\n",
       "│ (\u001b[38;5;33mBatchNormalizatio…\u001b[0m │ \u001b[38;5;34m512\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ activation_13       │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m14\u001b[0m, \u001b[38;5;34m14\u001b[0m,    │          \u001b[38;5;34m0\u001b[0m │ batch_normalizat… │\n",
       "│ (\u001b[38;5;33mActivation\u001b[0m)        │ \u001b[38;5;34m512\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ conv2d_14 (\u001b[38;5;33mConv2D\u001b[0m)  │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m14\u001b[0m, \u001b[38;5;34m14\u001b[0m,    │  \u001b[38;5;34m2,359,808\u001b[0m │ activation_13[\u001b[38;5;34m0\u001b[0m]… │\n",
       "│                     │ \u001b[38;5;34m512\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ batch_normalizatio… │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m14\u001b[0m, \u001b[38;5;34m14\u001b[0m,    │      \u001b[38;5;34m2,048\u001b[0m │ conv2d_14[\u001b[38;5;34m0\u001b[0m][\u001b[38;5;34m0\u001b[0m]   │\n",
       "│ (\u001b[38;5;33mBatchNormalizatio…\u001b[0m │ \u001b[38;5;34m512\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ activation_14       │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m14\u001b[0m, \u001b[38;5;34m14\u001b[0m,    │          \u001b[38;5;34m0\u001b[0m │ batch_normalizat… │\n",
       "│ (\u001b[38;5;33mActivation\u001b[0m)        │ \u001b[38;5;34m512\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ conv2d_15 (\u001b[38;5;33mConv2D\u001b[0m)  │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m14\u001b[0m, \u001b[38;5;34m14\u001b[0m,    │  \u001b[38;5;34m2,359,808\u001b[0m │ activation_14[\u001b[38;5;34m0\u001b[0m]… │\n",
       "│                     │ \u001b[38;5;34m512\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ batch_normalizatio… │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m14\u001b[0m, \u001b[38;5;34m14\u001b[0m,    │      \u001b[38;5;34m2,048\u001b[0m │ conv2d_15[\u001b[38;5;34m0\u001b[0m][\u001b[38;5;34m0\u001b[0m]   │\n",
       "│ (\u001b[38;5;33mBatchNormalizatio…\u001b[0m │ \u001b[38;5;34m512\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ activation_15       │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m14\u001b[0m, \u001b[38;5;34m14\u001b[0m,    │          \u001b[38;5;34m0\u001b[0m │ batch_normalizat… │\n",
       "│ (\u001b[38;5;33mActivation\u001b[0m)        │ \u001b[38;5;34m512\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ max_unpooling2d_1   │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m28\u001b[0m, \u001b[38;5;34m28\u001b[0m,    │          \u001b[38;5;34m0\u001b[0m │ activation_15[\u001b[38;5;34m0\u001b[0m]… │\n",
       "│ (\u001b[38;5;33mMaxUnpooling2D\u001b[0m)    │ \u001b[38;5;34m512\u001b[0m)              │            │ max_pooling_with… │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ conv2d_16 (\u001b[38;5;33mConv2D\u001b[0m)  │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m28\u001b[0m, \u001b[38;5;34m28\u001b[0m,    │  \u001b[38;5;34m2,359,808\u001b[0m │ max_unpooling2d_… │\n",
       "│                     │ \u001b[38;5;34m512\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ batch_normalizatio… │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m28\u001b[0m, \u001b[38;5;34m28\u001b[0m,    │      \u001b[38;5;34m2,048\u001b[0m │ conv2d_16[\u001b[38;5;34m0\u001b[0m][\u001b[38;5;34m0\u001b[0m]   │\n",
       "│ (\u001b[38;5;33mBatchNormalizatio…\u001b[0m │ \u001b[38;5;34m512\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ activation_16       │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m28\u001b[0m, \u001b[38;5;34m28\u001b[0m,    │          \u001b[38;5;34m0\u001b[0m │ batch_normalizat… │\n",
       "│ (\u001b[38;5;33mActivation\u001b[0m)        │ \u001b[38;5;34m512\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ conv2d_17 (\u001b[38;5;33mConv2D\u001b[0m)  │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m28\u001b[0m, \u001b[38;5;34m28\u001b[0m,    │  \u001b[38;5;34m2,359,808\u001b[0m │ activation_16[\u001b[38;5;34m0\u001b[0m]… │\n",
       "│                     │ \u001b[38;5;34m512\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ batch_normalizatio… │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m28\u001b[0m, \u001b[38;5;34m28\u001b[0m,    │      \u001b[38;5;34m2,048\u001b[0m │ conv2d_17[\u001b[38;5;34m0\u001b[0m][\u001b[38;5;34m0\u001b[0m]   │\n",
       "│ (\u001b[38;5;33mBatchNormalizatio…\u001b[0m │ \u001b[38;5;34m512\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ activation_17       │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m28\u001b[0m, \u001b[38;5;34m28\u001b[0m,    │          \u001b[38;5;34m0\u001b[0m │ batch_normalizat… │\n",
       "│ (\u001b[38;5;33mActivation\u001b[0m)        │ \u001b[38;5;34m512\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ conv2d_18 (\u001b[38;5;33mConv2D\u001b[0m)  │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m28\u001b[0m, \u001b[38;5;34m28\u001b[0m,    │  \u001b[38;5;34m1,179,904\u001b[0m │ activation_17[\u001b[38;5;34m0\u001b[0m]… │\n",
       "│                     │ \u001b[38;5;34m256\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ batch_normalizatio… │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m28\u001b[0m, \u001b[38;5;34m28\u001b[0m,    │      \u001b[38;5;34m1,024\u001b[0m │ conv2d_18[\u001b[38;5;34m0\u001b[0m][\u001b[38;5;34m0\u001b[0m]   │\n",
       "│ (\u001b[38;5;33mBatchNormalizatio…\u001b[0m │ \u001b[38;5;34m256\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ activation_18       │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m28\u001b[0m, \u001b[38;5;34m28\u001b[0m,    │          \u001b[38;5;34m0\u001b[0m │ batch_normalizat… │\n",
       "│ (\u001b[38;5;33mActivation\u001b[0m)        │ \u001b[38;5;34m256\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ max_unpooling2d_2   │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m56\u001b[0m, \u001b[38;5;34m56\u001b[0m,    │          \u001b[38;5;34m0\u001b[0m │ activation_18[\u001b[38;5;34m0\u001b[0m]… │\n",
       "│ (\u001b[38;5;33mMaxUnpooling2D\u001b[0m)    │ \u001b[38;5;34m256\u001b[0m)              │            │ max_pooling_with… │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ conv2d_19 (\u001b[38;5;33mConv2D\u001b[0m)  │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m56\u001b[0m, \u001b[38;5;34m56\u001b[0m,    │    \u001b[38;5;34m590,080\u001b[0m │ max_unpooling2d_… │\n",
       "│                     │ \u001b[38;5;34m256\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ batch_normalizatio… │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m56\u001b[0m, \u001b[38;5;34m56\u001b[0m,    │      \u001b[38;5;34m1,024\u001b[0m │ conv2d_19[\u001b[38;5;34m0\u001b[0m][\u001b[38;5;34m0\u001b[0m]   │\n",
       "│ (\u001b[38;5;33mBatchNormalizatio…\u001b[0m │ \u001b[38;5;34m256\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ activation_19       │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m56\u001b[0m, \u001b[38;5;34m56\u001b[0m,    │          \u001b[38;5;34m0\u001b[0m │ batch_normalizat… │\n",
       "│ (\u001b[38;5;33mActivation\u001b[0m)        │ \u001b[38;5;34m256\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ conv2d_20 (\u001b[38;5;33mConv2D\u001b[0m)  │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m56\u001b[0m, \u001b[38;5;34m56\u001b[0m,    │    \u001b[38;5;34m590,080\u001b[0m │ activation_19[\u001b[38;5;34m0\u001b[0m]… │\n",
       "│                     │ \u001b[38;5;34m256\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ batch_normalizatio… │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m56\u001b[0m, \u001b[38;5;34m56\u001b[0m,    │      \u001b[38;5;34m1,024\u001b[0m │ conv2d_20[\u001b[38;5;34m0\u001b[0m][\u001b[38;5;34m0\u001b[0m]   │\n",
       "│ (\u001b[38;5;33mBatchNormalizatio…\u001b[0m │ \u001b[38;5;34m256\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ activation_20       │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m56\u001b[0m, \u001b[38;5;34m56\u001b[0m,    │          \u001b[38;5;34m0\u001b[0m │ batch_normalizat… │\n",
       "│ (\u001b[38;5;33mActivation\u001b[0m)        │ \u001b[38;5;34m256\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ conv2d_21 (\u001b[38;5;33mConv2D\u001b[0m)  │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m56\u001b[0m, \u001b[38;5;34m56\u001b[0m,    │    \u001b[38;5;34m295,040\u001b[0m │ activation_20[\u001b[38;5;34m0\u001b[0m]… │\n",
       "│                     │ \u001b[38;5;34m128\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ batch_normalizatio… │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m56\u001b[0m, \u001b[38;5;34m56\u001b[0m,    │        \u001b[38;5;34m512\u001b[0m │ conv2d_21[\u001b[38;5;34m0\u001b[0m][\u001b[38;5;34m0\u001b[0m]   │\n",
       "│ (\u001b[38;5;33mBatchNormalizatio…\u001b[0m │ \u001b[38;5;34m128\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ activation_21       │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m56\u001b[0m, \u001b[38;5;34m56\u001b[0m,    │          \u001b[38;5;34m0\u001b[0m │ batch_normalizat… │\n",
       "│ (\u001b[38;5;33mActivation\u001b[0m)        │ \u001b[38;5;34m128\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ max_unpooling2d_3   │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m112\u001b[0m, \u001b[38;5;34m112\u001b[0m,  │          \u001b[38;5;34m0\u001b[0m │ activation_21[\u001b[38;5;34m0\u001b[0m]… │\n",
       "│ (\u001b[38;5;33mMaxUnpooling2D\u001b[0m)    │ \u001b[38;5;34m128\u001b[0m)              │            │ max_pooling_with… │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ conv2d_22 (\u001b[38;5;33mConv2D\u001b[0m)  │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m112\u001b[0m, \u001b[38;5;34m112\u001b[0m,  │    \u001b[38;5;34m147,584\u001b[0m │ max_unpooling2d_… │\n",
       "│                     │ \u001b[38;5;34m128\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ batch_normalizatio… │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m112\u001b[0m, \u001b[38;5;34m112\u001b[0m,  │        \u001b[38;5;34m512\u001b[0m │ conv2d_22[\u001b[38;5;34m0\u001b[0m][\u001b[38;5;34m0\u001b[0m]   │\n",
       "│ (\u001b[38;5;33mBatchNormalizatio…\u001b[0m │ \u001b[38;5;34m128\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ activation_22       │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m112\u001b[0m, \u001b[38;5;34m112\u001b[0m,  │          \u001b[38;5;34m0\u001b[0m │ batch_normalizat… │\n",
       "│ (\u001b[38;5;33mActivation\u001b[0m)        │ \u001b[38;5;34m128\u001b[0m)              │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ conv2d_23 (\u001b[38;5;33mConv2D\u001b[0m)  │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m112\u001b[0m, \u001b[38;5;34m112\u001b[0m,  │     \u001b[38;5;34m73,792\u001b[0m │ activation_22[\u001b[38;5;34m0\u001b[0m]… │\n",
       "│                     │ \u001b[38;5;34m64\u001b[0m)               │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ batch_normalizatio… │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m112\u001b[0m, \u001b[38;5;34m112\u001b[0m,  │        \u001b[38;5;34m256\u001b[0m │ conv2d_23[\u001b[38;5;34m0\u001b[0m][\u001b[38;5;34m0\u001b[0m]   │\n",
       "│ (\u001b[38;5;33mBatchNormalizatio…\u001b[0m │ \u001b[38;5;34m64\u001b[0m)               │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ activation_23       │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m112\u001b[0m, \u001b[38;5;34m112\u001b[0m,  │          \u001b[38;5;34m0\u001b[0m │ batch_normalizat… │\n",
       "│ (\u001b[38;5;33mActivation\u001b[0m)        │ \u001b[38;5;34m64\u001b[0m)               │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ max_unpooling2d_4   │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m224\u001b[0m, \u001b[38;5;34m224\u001b[0m,  │          \u001b[38;5;34m0\u001b[0m │ activation_23[\u001b[38;5;34m0\u001b[0m]… │\n",
       "│ (\u001b[38;5;33mMaxUnpooling2D\u001b[0m)    │ \u001b[38;5;34m64\u001b[0m)               │            │ max_pooling_with… │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ conv2d_24 (\u001b[38;5;33mConv2D\u001b[0m)  │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m224\u001b[0m, \u001b[38;5;34m224\u001b[0m,  │     \u001b[38;5;34m36,928\u001b[0m │ max_unpooling2d_… │\n",
       "│                     │ \u001b[38;5;34m64\u001b[0m)               │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ batch_normalizatio… │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m224\u001b[0m, \u001b[38;5;34m224\u001b[0m,  │        \u001b[38;5;34m256\u001b[0m │ conv2d_24[\u001b[38;5;34m0\u001b[0m][\u001b[38;5;34m0\u001b[0m]   │\n",
       "│ (\u001b[38;5;33mBatchNormalizatio…\u001b[0m │ \u001b[38;5;34m64\u001b[0m)               │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ activation_24       │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m224\u001b[0m, \u001b[38;5;34m224\u001b[0m,  │          \u001b[38;5;34m0\u001b[0m │ batch_normalizat… │\n",
       "│ (\u001b[38;5;33mActivation\u001b[0m)        │ \u001b[38;5;34m64\u001b[0m)               │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ conv2d_25 (\u001b[38;5;33mConv2D\u001b[0m)  │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m224\u001b[0m, \u001b[38;5;34m224\u001b[0m,  │        \u001b[38;5;34m780\u001b[0m │ activation_24[\u001b[38;5;34m0\u001b[0m]… │\n",
       "│                     │ \u001b[38;5;34m12\u001b[0m)               │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ batch_normalizatio… │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m224\u001b[0m, \u001b[38;5;34m224\u001b[0m,  │         \u001b[38;5;34m48\u001b[0m │ conv2d_25[\u001b[38;5;34m0\u001b[0m][\u001b[38;5;34m0\u001b[0m]   │\n",
       "│ (\u001b[38;5;33mBatchNormalizatio…\u001b[0m │ \u001b[38;5;34m12\u001b[0m)               │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ dense (\u001b[38;5;33mDense\u001b[0m)       │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m224\u001b[0m, \u001b[38;5;34m224\u001b[0m,  │        \u001b[38;5;34m156\u001b[0m │ batch_normalizat… │\n",
       "│                     │ \u001b[38;5;34m12\u001b[0m)               │            │                   │\n",
       "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
       "│ activation_25       │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m224\u001b[0m, \u001b[38;5;34m224\u001b[0m,  │          \u001b[38;5;34m0\u001b[0m │ dense[\u001b[38;5;34m0\u001b[0m][\u001b[38;5;34m0\u001b[0m]       │\n",
       "│ (\u001b[38;5;33mActivation\u001b[0m)        │ \u001b[38;5;34m12\u001b[0m)               │            │                   │\n",
       "└─────────────────────┴───────────────────┴────────────┴───────────────────┘\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Total params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">29,459,864</span> (112.38 MB)\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[1m Total params: \u001b[0m\u001b[38;5;34m29,459,864\u001b[0m (112.38 MB)\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">29,443,968</span> (112.32 MB)\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[1m Trainable params: \u001b[0m\u001b[38;5;34m29,443,968\u001b[0m (112.32 MB)\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Non-trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">15,896</span> (62.09 KB)\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[1m Non-trainable params: \u001b[0m\u001b[38;5;34m15,896\u001b[0m (62.09 KB)\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "model.summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [],
   "source": [
    "VGG16_MODEL=tf.keras.applications.VGG16(include_top=False, weights='imagenet')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\">Model: \"vgg16\"</span>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[1mModel: \"vgg16\"\u001b[0m\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓\n",
       "┃<span style=\"font-weight: bold\"> Layer (type)                    </span>┃<span style=\"font-weight: bold\"> Output Shape           </span>┃<span style=\"font-weight: bold\">       Param # </span>┃\n",
       "┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩\n",
       "│ input_layer_1 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">InputLayer</span>)      │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">3</span>)  │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n",
       "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
       "│ block1_conv1 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)           │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>) │         <span style=\"color: #00af00; text-decoration-color: #00af00\">1,792</span> │\n",
       "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
       "│ block1_conv2 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)           │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>) │        <span style=\"color: #00af00; text-decoration-color: #00af00\">36,928</span> │\n",
       "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
       "│ block1_pool (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">MaxPooling2D</span>)      │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>) │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n",
       "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
       "│ block2_conv1 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)           │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>,     │        <span style=\"color: #00af00; text-decoration-color: #00af00\">73,856</span> │\n",
       "│                                 │ <span style=\"color: #00af00; text-decoration-color: #00af00\">128</span>)                   │               │\n",
       "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
       "│ block2_conv2 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)           │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>,     │       <span style=\"color: #00af00; text-decoration-color: #00af00\">147,584</span> │\n",
       "│                                 │ <span style=\"color: #00af00; text-decoration-color: #00af00\">128</span>)                   │               │\n",
       "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
       "│ block2_pool (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">MaxPooling2D</span>)      │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>,     │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n",
       "│                                 │ <span style=\"color: #00af00; text-decoration-color: #00af00\">128</span>)                   │               │\n",
       "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
       "│ block3_conv1 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)           │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>,     │       <span style=\"color: #00af00; text-decoration-color: #00af00\">295,168</span> │\n",
       "│                                 │ <span style=\"color: #00af00; text-decoration-color: #00af00\">256</span>)                   │               │\n",
       "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
       "│ block3_conv2 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)           │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>,     │       <span style=\"color: #00af00; text-decoration-color: #00af00\">590,080</span> │\n",
       "│                                 │ <span style=\"color: #00af00; text-decoration-color: #00af00\">256</span>)                   │               │\n",
       "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
       "│ block3_conv3 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)           │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>,     │       <span style=\"color: #00af00; text-decoration-color: #00af00\">590,080</span> │\n",
       "│                                 │ <span style=\"color: #00af00; text-decoration-color: #00af00\">256</span>)                   │               │\n",
       "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
       "│ block3_pool (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">MaxPooling2D</span>)      │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>,     │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n",
       "│                                 │ <span style=\"color: #00af00; text-decoration-color: #00af00\">256</span>)                   │               │\n",
       "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
       "│ block4_conv1 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)           │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>,     │     <span style=\"color: #00af00; text-decoration-color: #00af00\">1,180,160</span> │\n",
       "│                                 │ <span style=\"color: #00af00; text-decoration-color: #00af00\">512</span>)                   │               │\n",
       "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
       "│ block4_conv2 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)           │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>,     │     <span style=\"color: #00af00; text-decoration-color: #00af00\">2,359,808</span> │\n",
       "│                                 │ <span style=\"color: #00af00; text-decoration-color: #00af00\">512</span>)                   │               │\n",
       "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
       "│ block4_conv3 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)           │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>,     │     <span style=\"color: #00af00; text-decoration-color: #00af00\">2,359,808</span> │\n",
       "│                                 │ <span style=\"color: #00af00; text-decoration-color: #00af00\">512</span>)                   │               │\n",
       "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
       "│ block4_pool (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">MaxPooling2D</span>)      │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>,     │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n",
       "│                                 │ <span style=\"color: #00af00; text-decoration-color: #00af00\">512</span>)                   │               │\n",
       "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
       "│ block5_conv1 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)           │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>,     │     <span style=\"color: #00af00; text-decoration-color: #00af00\">2,359,808</span> │\n",
       "│                                 │ <span style=\"color: #00af00; text-decoration-color: #00af00\">512</span>)                   │               │\n",
       "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
       "│ block5_conv2 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)           │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>,     │     <span style=\"color: #00af00; text-decoration-color: #00af00\">2,359,808</span> │\n",
       "│                                 │ <span style=\"color: #00af00; text-decoration-color: #00af00\">512</span>)                   │               │\n",
       "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
       "│ block5_conv3 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)           │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>,     │     <span style=\"color: #00af00; text-decoration-color: #00af00\">2,359,808</span> │\n",
       "│                                 │ <span style=\"color: #00af00; text-decoration-color: #00af00\">512</span>)                   │               │\n",
       "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
       "│ block5_pool (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">MaxPooling2D</span>)      │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>,     │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n",
       "│                                 │ <span style=\"color: #00af00; text-decoration-color: #00af00\">512</span>)                   │               │\n",
       "└─────────────────────────────────┴────────────────────────┴───────────────┘\n",
       "</pre>\n"
      ],
      "text/plain": [
       "┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓\n",
       "┃\u001b[1m \u001b[0m\u001b[1mLayer (type)                   \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1mOutput Shape          \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1m      Param #\u001b[0m\u001b[1m \u001b[0m┃\n",
       "┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩\n",
       "│ input_layer_1 (\u001b[38;5;33mInputLayer\u001b[0m)      │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;45mNone\u001b[0m, \u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m3\u001b[0m)  │             \u001b[38;5;34m0\u001b[0m │\n",
       "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
       "│ block1_conv1 (\u001b[38;5;33mConv2D\u001b[0m)           │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;45mNone\u001b[0m, \u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m64\u001b[0m) │         \u001b[38;5;34m1,792\u001b[0m │\n",
       "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
       "│ block1_conv2 (\u001b[38;5;33mConv2D\u001b[0m)           │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;45mNone\u001b[0m, \u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m64\u001b[0m) │        \u001b[38;5;34m36,928\u001b[0m │\n",
       "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
       "│ block1_pool (\u001b[38;5;33mMaxPooling2D\u001b[0m)      │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;45mNone\u001b[0m, \u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m64\u001b[0m) │             \u001b[38;5;34m0\u001b[0m │\n",
       "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
       "│ block2_conv1 (\u001b[38;5;33mConv2D\u001b[0m)           │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;45mNone\u001b[0m, \u001b[38;5;45mNone\u001b[0m,     │        \u001b[38;5;34m73,856\u001b[0m │\n",
       "│                                 │ \u001b[38;5;34m128\u001b[0m)                   │               │\n",
       "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
       "│ block2_conv2 (\u001b[38;5;33mConv2D\u001b[0m)           │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;45mNone\u001b[0m, \u001b[38;5;45mNone\u001b[0m,     │       \u001b[38;5;34m147,584\u001b[0m │\n",
       "│                                 │ \u001b[38;5;34m128\u001b[0m)                   │               │\n",
       "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
       "│ block2_pool (\u001b[38;5;33mMaxPooling2D\u001b[0m)      │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;45mNone\u001b[0m, \u001b[38;5;45mNone\u001b[0m,     │             \u001b[38;5;34m0\u001b[0m │\n",
       "│                                 │ \u001b[38;5;34m128\u001b[0m)                   │               │\n",
       "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
       "│ block3_conv1 (\u001b[38;5;33mConv2D\u001b[0m)           │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;45mNone\u001b[0m, \u001b[38;5;45mNone\u001b[0m,     │       \u001b[38;5;34m295,168\u001b[0m │\n",
       "│                                 │ \u001b[38;5;34m256\u001b[0m)                   │               │\n",
       "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
       "│ block3_conv2 (\u001b[38;5;33mConv2D\u001b[0m)           │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;45mNone\u001b[0m, \u001b[38;5;45mNone\u001b[0m,     │       \u001b[38;5;34m590,080\u001b[0m │\n",
       "│                                 │ \u001b[38;5;34m256\u001b[0m)                   │               │\n",
       "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
       "│ block3_conv3 (\u001b[38;5;33mConv2D\u001b[0m)           │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;45mNone\u001b[0m, \u001b[38;5;45mNone\u001b[0m,     │       \u001b[38;5;34m590,080\u001b[0m │\n",
       "│                                 │ \u001b[38;5;34m256\u001b[0m)                   │               │\n",
       "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
       "│ block3_pool (\u001b[38;5;33mMaxPooling2D\u001b[0m)      │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;45mNone\u001b[0m, \u001b[38;5;45mNone\u001b[0m,     │             \u001b[38;5;34m0\u001b[0m │\n",
       "│                                 │ \u001b[38;5;34m256\u001b[0m)                   │               │\n",
       "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
       "│ block4_conv1 (\u001b[38;5;33mConv2D\u001b[0m)           │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;45mNone\u001b[0m, \u001b[38;5;45mNone\u001b[0m,     │     \u001b[38;5;34m1,180,160\u001b[0m │\n",
       "│                                 │ \u001b[38;5;34m512\u001b[0m)                   │               │\n",
       "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
       "│ block4_conv2 (\u001b[38;5;33mConv2D\u001b[0m)           │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;45mNone\u001b[0m, \u001b[38;5;45mNone\u001b[0m,     │     \u001b[38;5;34m2,359,808\u001b[0m │\n",
       "│                                 │ \u001b[38;5;34m512\u001b[0m)                   │               │\n",
       "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
       "│ block4_conv3 (\u001b[38;5;33mConv2D\u001b[0m)           │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;45mNone\u001b[0m, \u001b[38;5;45mNone\u001b[0m,     │     \u001b[38;5;34m2,359,808\u001b[0m │\n",
       "│                                 │ \u001b[38;5;34m512\u001b[0m)                   │               │\n",
       "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
       "│ block4_pool (\u001b[38;5;33mMaxPooling2D\u001b[0m)      │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;45mNone\u001b[0m, \u001b[38;5;45mNone\u001b[0m,     │             \u001b[38;5;34m0\u001b[0m │\n",
       "│                                 │ \u001b[38;5;34m512\u001b[0m)                   │               │\n",
       "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
       "│ block5_conv1 (\u001b[38;5;33mConv2D\u001b[0m)           │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;45mNone\u001b[0m, \u001b[38;5;45mNone\u001b[0m,     │     \u001b[38;5;34m2,359,808\u001b[0m │\n",
       "│                                 │ \u001b[38;5;34m512\u001b[0m)                   │               │\n",
       "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
       "│ block5_conv2 (\u001b[38;5;33mConv2D\u001b[0m)           │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;45mNone\u001b[0m, \u001b[38;5;45mNone\u001b[0m,     │     \u001b[38;5;34m2,359,808\u001b[0m │\n",
       "│                                 │ \u001b[38;5;34m512\u001b[0m)                   │               │\n",
       "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
       "│ block5_conv3 (\u001b[38;5;33mConv2D\u001b[0m)           │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;45mNone\u001b[0m, \u001b[38;5;45mNone\u001b[0m,     │     \u001b[38;5;34m2,359,808\u001b[0m │\n",
       "│                                 │ \u001b[38;5;34m512\u001b[0m)                   │               │\n",
       "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
       "│ block5_pool (\u001b[38;5;33mMaxPooling2D\u001b[0m)      │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;45mNone\u001b[0m, \u001b[38;5;45mNone\u001b[0m,     │             \u001b[38;5;34m0\u001b[0m │\n",
       "│                                 │ \u001b[38;5;34m512\u001b[0m)                   │               │\n",
       "└─────────────────────────────────┴────────────────────────┴───────────────┘\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Total params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">14,714,688</span> (56.13 MB)\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[1m Total params: \u001b[0m\u001b[38;5;34m14,714,688\u001b[0m (56.13 MB)\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">14,714,688</span> (56.13 MB)\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[1m Trainable params: \u001b[0m\u001b[38;5;34m14,714,688\u001b[0m (56.13 MB)\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Non-trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> (0.00 B)\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[1m Non-trainable params: \u001b[0m\u001b[38;5;34m0\u001b[0m (0.00 B)\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "VGG16_MODEL.summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [],
   "source": [
    "from tensorflow.keras.layers import Conv2D\n",
    "layers = model.layers\n",
    "merged_layers = []\n",
    "count = 1\n",
    "for _layer in layers:\n",
    "  if isinstance(_layer, Conv2D):\n",
    "    merged_layers.append(_layer)\n",
    "  if _layer.name == \"block5_pool\":\n",
    "    break\n",
    "\n",
    "vgg_layer =[]\n",
    "vgg_layers = VGG16_MODEL.layers\n",
    "for _layer in vgg_layers:\n",
    "  if isinstance(_layer, Conv2D):\n",
    "    vgg_layer.append(_layer)\n",
    "\n",
    "for seg_model, vgg_model in zip(merged_layers, vgg_layer):\n",
    "  wk0 = vgg_model.get_weights()\n",
    "  seg_model.set_weights(wk0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "367\n"
     ]
    }
   ],
   "source": [
    "! ls -1 /teamspace/studios/this_studio/SegNet-Semantic-Segmentation/Dataset/train | wc -l"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "before y_train: (468, 224, 224, 12)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "after argmax y_train: (468, 224, 224)\n",
      "before y_test: (233, 224, 224, 12)\n",
      "after argmax y_test: (233, 224, 224)\n"
     ]
    }
   ],
   "source": [
    "import numpy as np\n",
    "\n",
    "# suppose y_train has shape (N, H, W, C)\n",
    "print(\"before y_train:\", y_train.shape)  \n",
    "# e.g. (100, 224, 224, 12)\n",
    "\n",
    "# 1) Convert one-hot → integer class (0…C-1)\n",
    "y_train_int = np.argmax(y_train, axis=-1)\n",
    "# now shape is (N, H, W)\n",
    "print(\"after argmax y_train:\", y_train_int.shape)\n",
    "\n",
    "# 2) (Optional) if Keras ever complains about shape, you can add a channel dim:\n",
    "# y_train_int = np.expand_dims(y_train_int, axis=-1)\n",
    "# which would give shape (N, H, W, 1)\n",
    "\n",
    "# 3) Cast to an integer type\n",
    "y_train_int = y_train_int.astype(np.uint8)\n",
    "\n",
    "print(\"before y_test:\", y_test.shape)  \n",
    "y_test_int = np.argmax(y_test, axis=-1).astype(np.uint8)\n",
    "print(\"after argmax y_test:\", y_test_int.shape)\n",
    "\n",
    "# If you have a separate validation set:\n",
    "# y_val_int = np.argmax(y_val, axis=-1).astype(np.uint8)\n",
    "\n",
    "# 4) Re-fit your model:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/200\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/home/zeus/miniconda3/envs/cloudspace/lib/python3.10/site-packages/tensorflow/python/data/ops/structured_function.py:258: UserWarning: Even though the `tf.config.experimental_run_functions_eagerly` option is set, this option does not apply to tf.data functions. To force eager execution of tf.data functions, please use `tf.data.experimental.enable_debug_mode()`.\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "I0000 00:00:1752484037.105724    1777 cuda_dnn.cc:529] Loaded cuDNN version 90701\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 1/36\u001b[0m \u001b[37m━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m4:51\u001b[0m 8s/step - accuracy: 0.0607 - loss: 2.9465max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 2/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m28s\u001b[0m 824ms/step - accuracy: 0.0637 - loss: 2.9272max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 3/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 810ms/step - accuracy: 0.0656 - loss: 2.9111max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 4/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 811ms/step - accuracy: 0.0673 - loss: 2.8951max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 5/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 808ms/step - accuracy: 0.0690 - loss: 2.8769max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 6/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 808ms/step - accuracy: 0.0706 - loss: 2.8600max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 7/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 806ms/step - accuracy: 0.0719 - loss: 2.8440max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 8/36\u001b[0m \u001b[32m━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 803ms/step - accuracy: 0.0732 - loss: 2.8290max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 9/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 801ms/step - accuracy: 0.0742 - loss: 2.8153max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m10/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m20s\u001b[0m 799ms/step - accuracy: 0.0753 - loss: 2.8024max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m11/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 799ms/step - accuracy: 0.0764 - loss: 2.7902max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m12/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 798ms/step - accuracy: 0.0775 - loss: 2.7788max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m13/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 798ms/step - accuracy: 0.0787 - loss: 2.7681max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m14/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m17s\u001b[0m 797ms/step - accuracy: 0.0798 - loss: 2.7581max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m15/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m16s\u001b[0m 796ms/step - accuracy: 0.0809 - loss: 2.7487max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m16/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 795ms/step - accuracy: 0.0821 - loss: 2.7398max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m17/36\u001b[0m \u001b[32m━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 794ms/step - accuracy: 0.0833 - loss: 2.7315max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m18/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 794ms/step - accuracy: 0.0845 - loss: 2.7236max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m19/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m13s\u001b[0m 794ms/step - accuracy: 0.0858 - loss: 2.7160max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m20/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m12s\u001b[0m 794ms/step - accuracy: 0.0870 - loss: 2.7091max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m21/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 794ms/step - accuracy: 0.0883 - loss: 2.7024max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m22/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 793ms/step - accuracy: 0.0896 - loss: 2.6960max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m23/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m10s\u001b[0m 793ms/step - accuracy: 0.0910 - loss: 2.6898max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m24/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m9s\u001b[0m 792ms/step - accuracy: 0.0923 - loss: 2.6838 max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m25/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m8s\u001b[0m 792ms/step - accuracy: 0.0936 - loss: 2.6781max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m26/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━\u001b[0m \u001b[1m7s\u001b[0m 792ms/step - accuracy: 0.0950 - loss: 2.6725max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m27/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m7s\u001b[0m 791ms/step - accuracy: 0.0963 - loss: 2.6671max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m28/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m6s\u001b[0m 791ms/step - accuracy: 0.0976 - loss: 2.6618max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m29/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m5s\u001b[0m 791ms/step - accuracy: 0.0990 - loss: 2.6567max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m30/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m4s\u001b[0m 791ms/step - accuracy: 0.1003 - loss: 2.6516max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m31/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 791ms/step - accuracy: 0.1017 - loss: 2.6467max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m32/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 791ms/step - accuracy: 0.1031 - loss: 2.6418max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m33/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m2s\u001b[0m 790ms/step - accuracy: 0.1044 - loss: 2.6370max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m34/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m1s\u001b[0m 790ms/step - accuracy: 0.1058 - loss: 2.6323max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m35/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 790ms/step - accuracy: 0.1072 - loss: 2.6276max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 814ms/step - accuracy: 0.1086 - loss: 2.6232max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m40s\u001b[0m 899ms/step - accuracy: 0.1099 - loss: 2.6191 - val_accuracy: 0.0629 - val_loss: 2.5033 - learning_rate: 1.0000e-04\n",
      "Epoch 2/200\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 1/36\u001b[0m \u001b[37m━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m28s\u001b[0m 810ms/step - accuracy: 0.2943 - loss: 2.1831max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 2/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 780ms/step - accuracy: 0.2893 - loss: 2.2020max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 3/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 791ms/step - accuracy: 0.2898 - loss: 2.2033max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 4/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 795ms/step - accuracy: 0.2926 - loss: 2.2008max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 5/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 799ms/step - accuracy: 0.2940 - loss: 2.1998max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 6/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 797ms/step - accuracy: 0.2947 - loss: 2.1991max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 7/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 799ms/step - accuracy: 0.2959 - loss: 2.1971max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 8/36\u001b[0m \u001b[32m━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 800ms/step - accuracy: 0.2969 - loss: 2.1952max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 9/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 800ms/step - accuracy: 0.2975 - loss: 2.1938max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m10/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m20s\u001b[0m 801ms/step - accuracy: 0.2981 - loss: 2.1926max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m11/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 799ms/step - accuracy: 0.2989 - loss: 2.1910max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m12/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 797ms/step - accuracy: 0.3001 - loss: 2.1889max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m13/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 795ms/step - accuracy: 0.3011 - loss: 2.1869max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m14/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m17s\u001b[0m 794ms/step - accuracy: 0.3023 - loss: 2.1847max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m15/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m16s\u001b[0m 793ms/step - accuracy: 0.3035 - loss: 2.1826max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m16/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 792ms/step - accuracy: 0.3047 - loss: 2.1803max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m17/36\u001b[0m \u001b[32m━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 792ms/step - accuracy: 0.3061 - loss: 2.1780max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m18/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 791ms/step - accuracy: 0.3074 - loss: 2.1757max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m19/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m13s\u001b[0m 790ms/step - accuracy: 0.3087 - loss: 2.1734max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m20/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m12s\u001b[0m 790ms/step - accuracy: 0.3099 - loss: 2.1712max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m21/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 790ms/step - accuracy: 0.3112 - loss: 2.1690max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m22/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 790ms/step - accuracy: 0.3125 - loss: 2.1668max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m23/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m10s\u001b[0m 790ms/step - accuracy: 0.3137 - loss: 2.1646max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m24/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m9s\u001b[0m 790ms/step - accuracy: 0.3150 - loss: 2.1625 max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m25/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m8s\u001b[0m 790ms/step - accuracy: 0.3161 - loss: 2.1604max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m26/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━\u001b[0m \u001b[1m7s\u001b[0m 789ms/step - accuracy: 0.3173 - loss: 2.1584max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m27/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m7s\u001b[0m 789ms/step - accuracy: 0.3184 - loss: 2.1564max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m28/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m6s\u001b[0m 788ms/step - accuracy: 0.3196 - loss: 2.1543max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m29/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m5s\u001b[0m 788ms/step - accuracy: 0.3207 - loss: 2.1523max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m30/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m4s\u001b[0m 787ms/step - accuracy: 0.3217 - loss: 2.1503max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m31/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 787ms/step - accuracy: 0.3228 - loss: 2.1483max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m32/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 786ms/step - accuracy: 0.3239 - loss: 2.1462max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m33/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m2s\u001b[0m 785ms/step - accuracy: 0.3250 - loss: 2.1443max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m34/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m1s\u001b[0m 785ms/step - accuracy: 0.3261 - loss: 2.1423max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m35/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 785ms/step - accuracy: 0.3271 - loss: 2.1404max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 777ms/step - accuracy: 0.3282 - loss: 2.1385max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 806ms/step - accuracy: 0.3291 - loss: 2.1367 - val_accuracy: 0.1453 - val_loss: 2.4900 - learning_rate: 1.0000e-04\n",
      "Epoch 3/200\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 1/36\u001b[0m \u001b[37m━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m27s\u001b[0m 795ms/step - accuracy: 0.4253 - loss: 1.9748max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 2/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 769ms/step - accuracy: 0.4280 - loss: 1.9668max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 3/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 774ms/step - accuracy: 0.4285 - loss: 1.9628max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 4/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 774ms/step - accuracy: 0.4318 - loss: 1.9563max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 5/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 775ms/step - accuracy: 0.4333 - loss: 1.9518max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 6/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 777ms/step - accuracy: 0.4338 - loss: 1.9488max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 7/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 776ms/step - accuracy: 0.4340 - loss: 1.9467max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 8/36\u001b[0m \u001b[32m━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 777ms/step - accuracy: 0.4347 - loss: 1.9443max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 9/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m20s\u001b[0m 775ms/step - accuracy: 0.4356 - loss: 1.9419max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m10/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m20s\u001b[0m 777ms/step - accuracy: 0.4365 - loss: 1.9395max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m11/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 777ms/step - accuracy: 0.4376 - loss: 1.9369max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m12/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 777ms/step - accuracy: 0.4386 - loss: 1.9340max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m13/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m17s\u001b[0m 778ms/step - accuracy: 0.4396 - loss: 1.9312max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m14/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m17s\u001b[0m 778ms/step - accuracy: 0.4407 - loss: 1.9284max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m15/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m16s\u001b[0m 778ms/step - accuracy: 0.4416 - loss: 1.9258max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m16/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 778ms/step - accuracy: 0.4424 - loss: 1.9233max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m17/36\u001b[0m \u001b[32m━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 778ms/step - accuracy: 0.4432 - loss: 1.9209max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m18/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 779ms/step - accuracy: 0.4440 - loss: 1.9184max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m19/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m13s\u001b[0m 779ms/step - accuracy: 0.4447 - loss: 1.9160max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m20/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m12s\u001b[0m 779ms/step - accuracy: 0.4454 - loss: 1.9137max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m21/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 779ms/step - accuracy: 0.4460 - loss: 1.9115max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m22/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 787ms/step - accuracy: 0.4466 - loss: 1.9092max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m23/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m10s\u001b[0m 787ms/step - accuracy: 0.4473 - loss: 1.9069max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m24/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m9s\u001b[0m 787ms/step - accuracy: 0.4479 - loss: 1.9046 max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m25/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m8s\u001b[0m 787ms/step - accuracy: 0.4486 - loss: 1.9023max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m26/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━\u001b[0m \u001b[1m7s\u001b[0m 786ms/step - accuracy: 0.4493 - loss: 1.9000max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m27/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m7s\u001b[0m 786ms/step - accuracy: 0.4501 - loss: 1.8976max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m28/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m6s\u001b[0m 786ms/step - accuracy: 0.4509 - loss: 1.8953max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m29/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m5s\u001b[0m 786ms/step - accuracy: 0.4517 - loss: 1.8929max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m30/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m4s\u001b[0m 786ms/step - accuracy: 0.4525 - loss: 1.8905max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m31/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 786ms/step - accuracy: 0.4534 - loss: 1.8882max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m32/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 785ms/step - accuracy: 0.4543 - loss: 1.8858max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m33/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m2s\u001b[0m 785ms/step - accuracy: 0.4552 - loss: 1.8833max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m34/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m1s\u001b[0m 785ms/step - accuracy: 0.4562 - loss: 1.8808max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m35/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 785ms/step - accuracy: 0.4572 - loss: 1.8784max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 777ms/step - accuracy: 0.4581 - loss: 1.8761max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 806ms/step - accuracy: 0.4590 - loss: 1.8739 - val_accuracy: 0.1081 - val_loss: 2.8600 - learning_rate: 1.0000e-04\n",
      "Epoch 4/200\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 1/36\u001b[0m \u001b[37m━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m28s\u001b[0m 807ms/step - accuracy: 0.5898 - loss: 1.6262max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 2/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 784ms/step - accuracy: 0.5965 - loss: 1.6222max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 3/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 790ms/step - accuracy: 0.6033 - loss: 1.6157max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 4/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 788ms/step - accuracy: 0.6046 - loss: 1.6167max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 5/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 786ms/step - accuracy: 0.6071 - loss: 1.6154max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 6/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 785ms/step - accuracy: 0.6098 - loss: 1.6130max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 7/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 786ms/step - accuracy: 0.6123 - loss: 1.6112max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 8/36\u001b[0m \u001b[32m━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 787ms/step - accuracy: 0.6145 - loss: 1.6089max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 9/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 788ms/step - accuracy: 0.6167 - loss: 1.6065max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m10/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m20s\u001b[0m 789ms/step - accuracy: 0.6186 - loss: 1.6040max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m11/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 788ms/step - accuracy: 0.6198 - loss: 1.6025max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m12/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 788ms/step - accuracy: 0.6211 - loss: 1.6005max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m13/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 789ms/step - accuracy: 0.6225 - loss: 1.5983max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m14/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m17s\u001b[0m 787ms/step - accuracy: 0.6238 - loss: 1.5965max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m15/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m16s\u001b[0m 787ms/step - accuracy: 0.6251 - loss: 1.5946max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m16/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 786ms/step - accuracy: 0.6266 - loss: 1.5925max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m17/36\u001b[0m \u001b[32m━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 786ms/step - accuracy: 0.6281 - loss: 1.5902max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m18/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 787ms/step - accuracy: 0.6297 - loss: 1.5879max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m19/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m13s\u001b[0m 787ms/step - accuracy: 0.6312 - loss: 1.5855max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m20/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m12s\u001b[0m 787ms/step - accuracy: 0.6328 - loss: 1.5832max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m21/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 787ms/step - accuracy: 0.6343 - loss: 1.5807max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m22/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 788ms/step - accuracy: 0.6359 - loss: 1.5782max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m23/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m10s\u001b[0m 787ms/step - accuracy: 0.6374 - loss: 1.5758max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m24/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m9s\u001b[0m 787ms/step - accuracy: 0.6389 - loss: 1.5734 max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m25/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m8s\u001b[0m 787ms/step - accuracy: 0.6404 - loss: 1.5710max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m26/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━\u001b[0m \u001b[1m7s\u001b[0m 787ms/step - accuracy: 0.6418 - loss: 1.5686max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m27/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m7s\u001b[0m 787ms/step - accuracy: 0.6433 - loss: 1.5662max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m28/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m6s\u001b[0m 787ms/step - accuracy: 0.6446 - loss: 1.5638max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m29/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m5s\u001b[0m 787ms/step - accuracy: 0.6460 - loss: 1.5614max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m30/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m4s\u001b[0m 787ms/step - accuracy: 0.6474 - loss: 1.5591max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m31/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 787ms/step - accuracy: 0.6487 - loss: 1.5567max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m32/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 787ms/step - accuracy: 0.6501 - loss: 1.5543max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m33/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m2s\u001b[0m 787ms/step - accuracy: 0.6514 - loss: 1.5520max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m34/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m1s\u001b[0m 787ms/step - accuracy: 0.6527 - loss: 1.5497max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m35/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 787ms/step - accuracy: 0.6540 - loss: 1.5475max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 779ms/step - accuracy: 0.6552 - loss: 1.5453max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 806ms/step - accuracy: 0.6564 - loss: 1.5433 - val_accuracy: 0.1475 - val_loss: 2.7605 - learning_rate: 1.0000e-04\n",
      "Epoch 5/200\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 1/36\u001b[0m \u001b[37m━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m27s\u001b[0m 799ms/step - accuracy: 0.7760 - loss: 1.3322max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 2/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 781ms/step - accuracy: 0.7806 - loss: 1.3200max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 3/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 786ms/step - accuracy: 0.7826 - loss: 1.3158max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 4/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 784ms/step - accuracy: 0.7850 - loss: 1.3117max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 5/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 785ms/step - accuracy: 0.7867 - loss: 1.3076max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 6/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 785ms/step - accuracy: 0.7875 - loss: 1.3043max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 7/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 785ms/step - accuracy: 0.7873 - loss: 1.3024max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 8/36\u001b[0m \u001b[32m━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 784ms/step - accuracy: 0.7874 - loss: 1.2999max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 9/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 784ms/step - accuracy: 0.7877 - loss: 1.2973max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m10/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m20s\u001b[0m 783ms/step - accuracy: 0.7880 - loss: 1.2949max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m11/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 784ms/step - accuracy: 0.7884 - loss: 1.2926max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m12/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 784ms/step - accuracy: 0.7889 - loss: 1.2902max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m13/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 785ms/step - accuracy: 0.7891 - loss: 1.2883max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m14/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m17s\u001b[0m 785ms/step - accuracy: 0.7893 - loss: 1.2870max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m15/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m16s\u001b[0m 785ms/step - accuracy: 0.7896 - loss: 1.2856max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m16/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 785ms/step - accuracy: 0.7899 - loss: 1.2841max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m17/36\u001b[0m \u001b[32m━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 785ms/step - accuracy: 0.7902 - loss: 1.2827max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m18/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 785ms/step - accuracy: 0.7906 - loss: 1.2812max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m19/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m13s\u001b[0m 785ms/step - accuracy: 0.7909 - loss: 1.2798max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m20/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m12s\u001b[0m 785ms/step - accuracy: 0.7912 - loss: 1.2784max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m21/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 785ms/step - accuracy: 0.7915 - loss: 1.2771max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m22/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m10s\u001b[0m 785ms/step - accuracy: 0.7918 - loss: 1.2758max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m23/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m10s\u001b[0m 785ms/step - accuracy: 0.7921 - loss: 1.2745max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m24/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m9s\u001b[0m 785ms/step - accuracy: 0.7924 - loss: 1.2733 max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m25/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m8s\u001b[0m 785ms/step - accuracy: 0.7927 - loss: 1.2721max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m26/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━\u001b[0m \u001b[1m7s\u001b[0m 785ms/step - accuracy: 0.7931 - loss: 1.2708max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m27/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m7s\u001b[0m 784ms/step - accuracy: 0.7935 - loss: 1.2696max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m28/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m6s\u001b[0m 784ms/step - accuracy: 0.7938 - loss: 1.2683max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m29/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m5s\u001b[0m 784ms/step - accuracy: 0.7942 - loss: 1.2670max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m30/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m4s\u001b[0m 784ms/step - accuracy: 0.7946 - loss: 1.2657max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m31/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 783ms/step - accuracy: 0.7949 - loss: 1.2645max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m32/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 783ms/step - accuracy: 0.7953 - loss: 1.2633max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m33/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m2s\u001b[0m 783ms/step - accuracy: 0.7956 - loss: 1.2621max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m34/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m1s\u001b[0m 783ms/step - accuracy: 0.7959 - loss: 1.2609max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m35/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 782ms/step - accuracy: 0.7962 - loss: 1.2597max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 774ms/step - accuracy: 0.7965 - loss: 1.2587max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 803ms/step - accuracy: 0.7968 - loss: 1.2577 - val_accuracy: 0.4263 - val_loss: 2.0125 - learning_rate: 1.0000e-04\n",
      "Epoch 6/200\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 1/36\u001b[0m \u001b[37m━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m27s\u001b[0m 800ms/step - accuracy: 0.8359 - loss: 1.1106max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 2/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 768ms/step - accuracy: 0.8351 - loss: 1.1130max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 3/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 777ms/step - accuracy: 0.8317 - loss: 1.1191max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 4/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 777ms/step - accuracy: 0.8297 - loss: 1.1237max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 5/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 777ms/step - accuracy: 0.8294 - loss: 1.1255max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 6/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 778ms/step - accuracy: 0.8292 - loss: 1.1268max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 7/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 779ms/step - accuracy: 0.8294 - loss: 1.1285max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 8/36\u001b[0m \u001b[32m━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 780ms/step - accuracy: 0.8297 - loss: 1.1292max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 9/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 778ms/step - accuracy: 0.8300 - loss: 1.1294max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m10/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m20s\u001b[0m 779ms/step - accuracy: 0.8302 - loss: 1.1296max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m11/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 780ms/step - accuracy: 0.8304 - loss: 1.1293max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m12/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 781ms/step - accuracy: 0.8306 - loss: 1.1290max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m13/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m17s\u001b[0m 781ms/step - accuracy: 0.8309 - loss: 1.1286max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m14/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m17s\u001b[0m 782ms/step - accuracy: 0.8312 - loss: 1.1279max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m15/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m16s\u001b[0m 783ms/step - accuracy: 0.8315 - loss: 1.1272max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m16/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 784ms/step - accuracy: 0.8318 - loss: 1.1265max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m17/36\u001b[0m \u001b[32m━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 784ms/step - accuracy: 0.8321 - loss: 1.1257max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m18/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 784ms/step - accuracy: 0.8323 - loss: 1.1251max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m19/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m13s\u001b[0m 784ms/step - accuracy: 0.8325 - loss: 1.1244max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m20/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m12s\u001b[0m 784ms/step - accuracy: 0.8327 - loss: 1.1237max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m21/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 784ms/step - accuracy: 0.8328 - loss: 1.1230max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m22/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m10s\u001b[0m 784ms/step - accuracy: 0.8330 - loss: 1.1223max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m23/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m10s\u001b[0m 784ms/step - accuracy: 0.8332 - loss: 1.1216max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m24/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m9s\u001b[0m 785ms/step - accuracy: 0.8333 - loss: 1.1210 max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m25/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m8s\u001b[0m 785ms/step - accuracy: 0.8334 - loss: 1.1203max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m26/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━\u001b[0m \u001b[1m7s\u001b[0m 785ms/step - accuracy: 0.8335 - loss: 1.1198max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m27/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m7s\u001b[0m 785ms/step - accuracy: 0.8336 - loss: 1.1192max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m28/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m6s\u001b[0m 785ms/step - accuracy: 0.8337 - loss: 1.1187max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m29/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m5s\u001b[0m 785ms/step - accuracy: 0.8338 - loss: 1.1182max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m30/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m4s\u001b[0m 785ms/step - accuracy: 0.8338 - loss: 1.1177max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m31/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 786ms/step - accuracy: 0.8338 - loss: 1.1172max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m32/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 786ms/step - accuracy: 0.8338 - loss: 1.1168max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m33/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m2s\u001b[0m 785ms/step - accuracy: 0.8339 - loss: 1.1163max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m34/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m1s\u001b[0m 786ms/step - accuracy: 0.8339 - loss: 1.1159max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m35/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 786ms/step - accuracy: 0.8339 - loss: 1.1154max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 778ms/step - accuracy: 0.8339 - loss: 1.1149max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 807ms/step - accuracy: 0.8339 - loss: 1.1145 - val_accuracy: 0.6777 - val_loss: 1.4830 - learning_rate: 1.0000e-04\n",
      "Epoch 7/200\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 1/36\u001b[0m \u001b[37m━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m27s\u001b[0m 798ms/step - accuracy: 0.8466 - loss: 1.0479max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 2/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 783ms/step - accuracy: 0.8491 - loss: 1.0350max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 3/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 782ms/step - accuracy: 0.8504 - loss: 1.0338max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 4/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 781ms/step - accuracy: 0.8491 - loss: 1.0349max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 5/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 777ms/step - accuracy: 0.8482 - loss: 1.0356max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 6/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 777ms/step - accuracy: 0.8474 - loss: 1.0361max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 7/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 777ms/step - accuracy: 0.8462 - loss: 1.0382max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 8/36\u001b[0m \u001b[32m━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 778ms/step - accuracy: 0.8456 - loss: 1.0389max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 9/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m20s\u001b[0m 778ms/step - accuracy: 0.8449 - loss: 1.0397max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m10/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m20s\u001b[0m 778ms/step - accuracy: 0.8446 - loss: 1.0404max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m11/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 779ms/step - accuracy: 0.8444 - loss: 1.0409max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m12/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 780ms/step - accuracy: 0.8442 - loss: 1.0411max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m13/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m17s\u001b[0m 780ms/step - accuracy: 0.8442 - loss: 1.0410max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m14/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m17s\u001b[0m 780ms/step - accuracy: 0.8444 - loss: 1.0406max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m15/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m16s\u001b[0m 780ms/step - accuracy: 0.8445 - loss: 1.0404max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m16/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 780ms/step - accuracy: 0.8444 - loss: 1.0403max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m17/36\u001b[0m \u001b[32m━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 780ms/step - accuracy: 0.8444 - loss: 1.0403max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m18/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 780ms/step - accuracy: 0.8443 - loss: 1.0403max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m19/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m13s\u001b[0m 780ms/step - accuracy: 0.8442 - loss: 1.0402max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m20/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m12s\u001b[0m 780ms/step - accuracy: 0.8441 - loss: 1.0402max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m21/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 781ms/step - accuracy: 0.8440 - loss: 1.0401max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m22/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m10s\u001b[0m 782ms/step - accuracy: 0.8439 - loss: 1.0399max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m23/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m10s\u001b[0m 782ms/step - accuracy: 0.8439 - loss: 1.0397max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m24/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m9s\u001b[0m 782ms/step - accuracy: 0.8438 - loss: 1.0396 max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m25/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m8s\u001b[0m 782ms/step - accuracy: 0.8437 - loss: 1.0394max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m26/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━\u001b[0m \u001b[1m7s\u001b[0m 782ms/step - accuracy: 0.8437 - loss: 1.0392max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m27/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m7s\u001b[0m 782ms/step - accuracy: 0.8437 - loss: 1.0388max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m28/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m6s\u001b[0m 782ms/step - accuracy: 0.8438 - loss: 1.0384max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m29/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m5s\u001b[0m 783ms/step - accuracy: 0.8438 - loss: 1.0380max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m30/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m4s\u001b[0m 783ms/step - accuracy: 0.8438 - loss: 1.0376max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m31/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 783ms/step - accuracy: 0.8438 - loss: 1.0372max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m32/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 783ms/step - accuracy: 0.8439 - loss: 1.0367max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m33/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m2s\u001b[0m 784ms/step - accuracy: 0.8440 - loss: 1.0361max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m34/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m1s\u001b[0m 784ms/step - accuracy: 0.8440 - loss: 1.0357max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m35/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 783ms/step - accuracy: 0.8441 - loss: 1.0351max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 776ms/step - accuracy: 0.8442 - loss: 1.0346max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 807ms/step - accuracy: 0.8442 - loss: 1.0342 - val_accuracy: 0.7447 - val_loss: 1.2736 - learning_rate: 1.0000e-04\n",
      "Epoch 8/200\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 1/36\u001b[0m \u001b[37m━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m28s\u001b[0m 802ms/step - accuracy: 0.8493 - loss: 0.9546max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 2/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 783ms/step - accuracy: 0.8445 - loss: 0.9726max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 3/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 789ms/step - accuracy: 0.8437 - loss: 0.9809max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 4/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 786ms/step - accuracy: 0.8436 - loss: 0.9857max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 5/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 785ms/step - accuracy: 0.8440 - loss: 0.9898max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 6/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 785ms/step - accuracy: 0.8448 - loss: 0.9912max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 7/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 786ms/step - accuracy: 0.8452 - loss: 0.9929max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 8/36\u001b[0m \u001b[32m━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 787ms/step - accuracy: 0.8449 - loss: 0.9951max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 9/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 788ms/step - accuracy: 0.8445 - loss: 0.9972max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m10/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m20s\u001b[0m 788ms/step - accuracy: 0.8442 - loss: 0.9985max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m11/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 789ms/step - accuracy: 0.8443 - loss: 0.9986max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m12/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 789ms/step - accuracy: 0.8444 - loss: 0.9987max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m13/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 789ms/step - accuracy: 0.8446 - loss: 0.9987max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m14/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m17s\u001b[0m 789ms/step - accuracy: 0.8447 - loss: 0.9988max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m15/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m16s\u001b[0m 789ms/step - accuracy: 0.8446 - loss: 0.9989max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m16/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 789ms/step - accuracy: 0.8446 - loss: 0.9987max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m17/36\u001b[0m \u001b[32m━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 789ms/step - accuracy: 0.8446 - loss: 0.9984max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m18/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 789ms/step - accuracy: 0.8447 - loss: 0.9981max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m19/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m13s\u001b[0m 789ms/step - accuracy: 0.8447 - loss: 0.9977max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m20/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m12s\u001b[0m 789ms/step - accuracy: 0.8447 - loss: 0.9974max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m21/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 789ms/step - accuracy: 0.8448 - loss: 0.9970max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m22/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 789ms/step - accuracy: 0.8449 - loss: 0.9966max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m23/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m10s\u001b[0m 789ms/step - accuracy: 0.8451 - loss: 0.9961max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m24/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m9s\u001b[0m 789ms/step - accuracy: 0.8452 - loss: 0.9958 max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m25/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m8s\u001b[0m 789ms/step - accuracy: 0.8452 - loss: 0.9953max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m26/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━\u001b[0m \u001b[1m7s\u001b[0m 789ms/step - accuracy: 0.8454 - loss: 0.9949max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m27/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m7s\u001b[0m 789ms/step - accuracy: 0.8454 - loss: 0.9945max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m28/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m6s\u001b[0m 789ms/step - accuracy: 0.8455 - loss: 0.9941max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m29/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m5s\u001b[0m 789ms/step - accuracy: 0.8456 - loss: 0.9937max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m30/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m4s\u001b[0m 788ms/step - accuracy: 0.8457 - loss: 0.9932max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m31/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 788ms/step - accuracy: 0.8459 - loss: 0.9927max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m32/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 788ms/step - accuracy: 0.8460 - loss: 0.9922max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m33/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m2s\u001b[0m 788ms/step - accuracy: 0.8460 - loss: 0.9918max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m34/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m1s\u001b[0m 788ms/step - accuracy: 0.8461 - loss: 0.9913max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m35/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 788ms/step - accuracy: 0.8462 - loss: 0.9907max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 780ms/step - accuracy: 0.8463 - loss: 0.9903max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 809ms/step - accuracy: 0.8464 - loss: 0.9898 - val_accuracy: 0.6693 - val_loss: 1.5685 - learning_rate: 1.0000e-04\n",
      "Epoch 9/200\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 1/36\u001b[0m \u001b[37m━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m28s\u001b[0m 805ms/step - accuracy: 0.8567 - loss: 0.9536max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 2/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 780ms/step - accuracy: 0.8476 - loss: 0.9641max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 3/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 782ms/step - accuracy: 0.8451 - loss: 0.9624max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 4/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 785ms/step - accuracy: 0.8439 - loss: 0.9616max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 5/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 783ms/step - accuracy: 0.8442 - loss: 0.9593max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 6/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 783ms/step - accuracy: 0.8451 - loss: 0.9561max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 7/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 784ms/step - accuracy: 0.8449 - loss: 0.9548max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 8/36\u001b[0m \u001b[32m━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 785ms/step - accuracy: 0.8451 - loss: 0.9535max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 9/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 785ms/step - accuracy: 0.8452 - loss: 0.9524max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m10/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m20s\u001b[0m 785ms/step - accuracy: 0.8451 - loss: 0.9520max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m11/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 785ms/step - accuracy: 0.8451 - loss: 0.9514max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m12/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 784ms/step - accuracy: 0.8452 - loss: 0.9509max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m13/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 784ms/step - accuracy: 0.8454 - loss: 0.9501max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m14/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m17s\u001b[0m 784ms/step - accuracy: 0.8456 - loss: 0.9493max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m15/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m16s\u001b[0m 785ms/step - accuracy: 0.8457 - loss: 0.9487max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m16/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 785ms/step - accuracy: 0.8459 - loss: 0.9480max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m17/36\u001b[0m \u001b[32m━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 785ms/step - accuracy: 0.8460 - loss: 0.9475max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m18/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 786ms/step - accuracy: 0.8461 - loss: 0.9471max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m19/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m13s\u001b[0m 786ms/step - accuracy: 0.8462 - loss: 0.9465max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m20/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m12s\u001b[0m 787ms/step - accuracy: 0.8464 - loss: 0.9461max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m21/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 787ms/step - accuracy: 0.8465 - loss: 0.9457max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m22/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 787ms/step - accuracy: 0.8466 - loss: 0.9452max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m23/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m10s\u001b[0m 788ms/step - accuracy: 0.8468 - loss: 0.9448max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m24/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m9s\u001b[0m 788ms/step - accuracy: 0.8469 - loss: 0.9443 max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m25/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m8s\u001b[0m 787ms/step - accuracy: 0.8471 - loss: 0.9438max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m26/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━\u001b[0m \u001b[1m7s\u001b[0m 787ms/step - accuracy: 0.8474 - loss: 0.9432max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m27/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m7s\u001b[0m 787ms/step - accuracy: 0.8476 - loss: 0.9427max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m28/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m6s\u001b[0m 787ms/step - accuracy: 0.8478 - loss: 0.9421max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m29/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m5s\u001b[0m 787ms/step - accuracy: 0.8480 - loss: 0.9415max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m30/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m4s\u001b[0m 787ms/step - accuracy: 0.8483 - loss: 0.9409max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m31/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 787ms/step - accuracy: 0.8485 - loss: 0.9403max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m32/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 788ms/step - accuracy: 0.8488 - loss: 0.9397max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m33/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m2s\u001b[0m 787ms/step - accuracy: 0.8490 - loss: 0.9391max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m34/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m1s\u001b[0m 787ms/step - accuracy: 0.8491 - loss: 0.9387max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m35/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 788ms/step - accuracy: 0.8493 - loss: 0.9383max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 780ms/step - accuracy: 0.8494 - loss: 0.9379max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 811ms/step - accuracy: 0.8496 - loss: 0.9376 - val_accuracy: 0.7685 - val_loss: 1.1909 - learning_rate: 1.0000e-04\n",
      "Epoch 10/200\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 1/36\u001b[0m \u001b[37m━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m28s\u001b[0m 805ms/step - accuracy: 0.8541 - loss: 0.8949max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 2/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m27s\u001b[0m 795ms/step - accuracy: 0.8536 - loss: 0.8985max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 3/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 785ms/step - accuracy: 0.8550 - loss: 0.8919max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 4/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 785ms/step - accuracy: 0.8564 - loss: 0.8891max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 5/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 786ms/step - accuracy: 0.8561 - loss: 0.8889max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 6/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 787ms/step - accuracy: 0.8562 - loss: 0.8887max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 7/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 789ms/step - accuracy: 0.8563 - loss: 0.8891max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 8/36\u001b[0m \u001b[32m━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 787ms/step - accuracy: 0.8563 - loss: 0.8897max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 9/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 787ms/step - accuracy: 0.8567 - loss: 0.8900max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m10/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m20s\u001b[0m 788ms/step - accuracy: 0.8571 - loss: 0.8898max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m11/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 788ms/step - accuracy: 0.8574 - loss: 0.8898max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m12/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 788ms/step - accuracy: 0.8576 - loss: 0.8899max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m13/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 790ms/step - accuracy: 0.8577 - loss: 0.8901max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m14/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m17s\u001b[0m 790ms/step - accuracy: 0.8579 - loss: 0.8901max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m15/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m16s\u001b[0m 790ms/step - accuracy: 0.8580 - loss: 0.8902max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m16/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 791ms/step - accuracy: 0.8581 - loss: 0.8903max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m17/36\u001b[0m \u001b[32m━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 791ms/step - accuracy: 0.8580 - loss: 0.8905max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m18/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 791ms/step - accuracy: 0.8580 - loss: 0.8907max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m19/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m13s\u001b[0m 790ms/step - accuracy: 0.8580 - loss: 0.8909max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m20/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m12s\u001b[0m 790ms/step - accuracy: 0.8580 - loss: 0.8909max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m21/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 790ms/step - accuracy: 0.8580 - loss: 0.8911max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m22/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 790ms/step - accuracy: 0.8580 - loss: 0.8912max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m23/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m10s\u001b[0m 789ms/step - accuracy: 0.8580 - loss: 0.8914max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m24/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m9s\u001b[0m 790ms/step - accuracy: 0.8580 - loss: 0.8914 max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m25/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m8s\u001b[0m 790ms/step - accuracy: 0.8580 - loss: 0.8914max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m26/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━\u001b[0m \u001b[1m7s\u001b[0m 790ms/step - accuracy: 0.8580 - loss: 0.8914max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m27/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m7s\u001b[0m 790ms/step - accuracy: 0.8580 - loss: 0.8913max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m28/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m6s\u001b[0m 790ms/step - accuracy: 0.8580 - loss: 0.8913max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m29/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m5s\u001b[0m 790ms/step - accuracy: 0.8580 - loss: 0.8911max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m30/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m4s\u001b[0m 790ms/step - accuracy: 0.8580 - loss: 0.8909max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m31/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 790ms/step - accuracy: 0.8581 - loss: 0.8908max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m32/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 790ms/step - accuracy: 0.8581 - loss: 0.8906max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m33/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m2s\u001b[0m 790ms/step - accuracy: 0.8581 - loss: 0.8905max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m34/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m1s\u001b[0m 790ms/step - accuracy: 0.8581 - loss: 0.8903max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m35/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 790ms/step - accuracy: 0.8581 - loss: 0.8902max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 782ms/step - accuracy: 0.8581 - loss: 0.8901max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      " Saved checkpoint: checkpoints/segnet_epoch_010_vloss_0.9713.h5\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m30s\u001b[0m 830ms/step - accuracy: 0.8581 - loss: 0.8901 - val_accuracy: 0.8226 - val_loss: 0.9713 - learning_rate: 1.0000e-04\n",
      "Epoch 11/200\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 1/36\u001b[0m \u001b[37m━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m27s\u001b[0m 798ms/step - accuracy: 0.8692 - loss: 0.8268max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 2/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m27s\u001b[0m 817ms/step - accuracy: 0.8696 - loss: 0.8287max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 3/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 804ms/step - accuracy: 0.8689 - loss: 0.8335max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 4/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 802ms/step - accuracy: 0.8684 - loss: 0.8372max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 5/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 800ms/step - accuracy: 0.8669 - loss: 0.8412max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 6/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 801ms/step - accuracy: 0.8657 - loss: 0.8445max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 7/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 800ms/step - accuracy: 0.8647 - loss: 0.8469max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 8/36\u001b[0m \u001b[32m━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 802ms/step - accuracy: 0.8640 - loss: 0.8488max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 9/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 804ms/step - accuracy: 0.8634 - loss: 0.8502max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m10/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m20s\u001b[0m 803ms/step - accuracy: 0.8627 - loss: 0.8517max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m11/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m20s\u001b[0m 802ms/step - accuracy: 0.8621 - loss: 0.8529max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m12/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 802ms/step - accuracy: 0.8616 - loss: 0.8539max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m13/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 800ms/step - accuracy: 0.8611 - loss: 0.8550max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m14/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m17s\u001b[0m 800ms/step - accuracy: 0.8607 - loss: 0.8559max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m15/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m16s\u001b[0m 800ms/step - accuracy: 0.8604 - loss: 0.8566max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m16/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m16s\u001b[0m 801ms/step - accuracy: 0.8601 - loss: 0.8572max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m17/36\u001b[0m \u001b[32m━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 800ms/step - accuracy: 0.8598 - loss: 0.8578max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m18/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 799ms/step - accuracy: 0.8596 - loss: 0.8580max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m19/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m13s\u001b[0m 799ms/step - accuracy: 0.8595 - loss: 0.8581max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m20/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m12s\u001b[0m 799ms/step - accuracy: 0.8595 - loss: 0.8582max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m21/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 798ms/step - accuracy: 0.8593 - loss: 0.8584max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m22/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 798ms/step - accuracy: 0.8592 - loss: 0.8585max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m23/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m10s\u001b[0m 797ms/step - accuracy: 0.8592 - loss: 0.8585max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m24/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m9s\u001b[0m 797ms/step - accuracy: 0.8591 - loss: 0.8585 max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m25/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m8s\u001b[0m 796ms/step - accuracy: 0.8590 - loss: 0.8585max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m26/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━\u001b[0m \u001b[1m7s\u001b[0m 796ms/step - accuracy: 0.8590 - loss: 0.8585max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m27/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m7s\u001b[0m 796ms/step - accuracy: 0.8589 - loss: 0.8585max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m28/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m6s\u001b[0m 796ms/step - accuracy: 0.8589 - loss: 0.8585max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m29/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m5s\u001b[0m 795ms/step - accuracy: 0.8588 - loss: 0.8584max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m30/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m4s\u001b[0m 795ms/step - accuracy: 0.8588 - loss: 0.8583max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m31/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 796ms/step - accuracy: 0.8588 - loss: 0.8582max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m32/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 796ms/step - accuracy: 0.8588 - loss: 0.8581max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m33/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m2s\u001b[0m 796ms/step - accuracy: 0.8588 - loss: 0.8579max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m34/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m1s\u001b[0m 796ms/step - accuracy: 0.8588 - loss: 0.8577max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m35/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 796ms/step - accuracy: 0.8589 - loss: 0.8575max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 788ms/step - accuracy: 0.8589 - loss: 0.8574max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 817ms/step - accuracy: 0.8589 - loss: 0.8573 - val_accuracy: 0.8100 - val_loss: 1.0354 - learning_rate: 1.0000e-04\n",
      "Epoch 12/200\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 1/36\u001b[0m \u001b[37m━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m28s\u001b[0m 801ms/step - accuracy: 0.8579 - loss: 0.8546max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 2/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m27s\u001b[0m 797ms/step - accuracy: 0.8627 - loss: 0.8382max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 3/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 800ms/step - accuracy: 0.8623 - loss: 0.8363max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 4/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 799ms/step - accuracy: 0.8612 - loss: 0.8374max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 5/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 798ms/step - accuracy: 0.8599 - loss: 0.8387max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 6/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 796ms/step - accuracy: 0.8600 - loss: 0.8379max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 7/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 795ms/step - accuracy: 0.8602 - loss: 0.8368max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 8/36\u001b[0m \u001b[32m━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 794ms/step - accuracy: 0.8604 - loss: 0.8358max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 9/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 794ms/step - accuracy: 0.8604 - loss: 0.8353max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m10/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m20s\u001b[0m 794ms/step - accuracy: 0.8605 - loss: 0.8347max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m11/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 794ms/step - accuracy: 0.8605 - loss: 0.8342max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m12/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 795ms/step - accuracy: 0.8606 - loss: 0.8338max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m13/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 795ms/step - accuracy: 0.8607 - loss: 0.8334max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m14/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m17s\u001b[0m 794ms/step - accuracy: 0.8608 - loss: 0.8331max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m15/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m16s\u001b[0m 794ms/step - accuracy: 0.8609 - loss: 0.8326max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m16/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 793ms/step - accuracy: 0.8611 - loss: 0.8320max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m17/36\u001b[0m \u001b[32m━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 793ms/step - accuracy: 0.8612 - loss: 0.8314max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m18/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 792ms/step - accuracy: 0.8614 - loss: 0.8309max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m19/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m13s\u001b[0m 793ms/step - accuracy: 0.8615 - loss: 0.8304max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m20/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m12s\u001b[0m 792ms/step - accuracy: 0.8617 - loss: 0.8298max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m21/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 792ms/step - accuracy: 0.8618 - loss: 0.8293max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m22/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 792ms/step - accuracy: 0.8619 - loss: 0.8287max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m23/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m10s\u001b[0m 792ms/step - accuracy: 0.8621 - loss: 0.8282max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m24/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m9s\u001b[0m 792ms/step - accuracy: 0.8622 - loss: 0.8276 max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m25/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m8s\u001b[0m 792ms/step - accuracy: 0.8623 - loss: 0.8271max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m26/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━\u001b[0m \u001b[1m7s\u001b[0m 792ms/step - accuracy: 0.8625 - loss: 0.8266max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m27/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m7s\u001b[0m 791ms/step - accuracy: 0.8626 - loss: 0.8262max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m28/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m6s\u001b[0m 791ms/step - accuracy: 0.8628 - loss: 0.8257max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m29/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m5s\u001b[0m 792ms/step - accuracy: 0.8629 - loss: 0.8253max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m30/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m4s\u001b[0m 792ms/step - accuracy: 0.8631 - loss: 0.8249max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m31/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 792ms/step - accuracy: 0.8632 - loss: 0.8246max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m32/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 792ms/step - accuracy: 0.8633 - loss: 0.8242max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m33/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m2s\u001b[0m 792ms/step - accuracy: 0.8633 - loss: 0.8239max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m34/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m1s\u001b[0m 793ms/step - accuracy: 0.8634 - loss: 0.8236max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m35/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 793ms/step - accuracy: 0.8635 - loss: 0.8233max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 784ms/step - accuracy: 0.8636 - loss: 0.8230max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 816ms/step - accuracy: 0.8636 - loss: 0.8227 - val_accuracy: 0.8267 - val_loss: 0.9294 - learning_rate: 1.0000e-04\n",
      "Epoch 13/200\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 1/36\u001b[0m \u001b[37m━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m28s\u001b[0m 807ms/step - accuracy: 0.8643 - loss: 0.7675max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 2/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 789ms/step - accuracy: 0.8658 - loss: 0.7772max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 3/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 792ms/step - accuracy: 0.8638 - loss: 0.7925max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 4/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 791ms/step - accuracy: 0.8631 - loss: 0.7984max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 5/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 790ms/step - accuracy: 0.8630 - loss: 0.8014max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 6/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 789ms/step - accuracy: 0.8632 - loss: 0.8023max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 7/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 790ms/step - accuracy: 0.8634 - loss: 0.8026max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 8/36\u001b[0m \u001b[32m━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 790ms/step - accuracy: 0.8638 - loss: 0.8021max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 9/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 789ms/step - accuracy: 0.8640 - loss: 0.8019max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m10/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m20s\u001b[0m 789ms/step - accuracy: 0.8641 - loss: 0.8017max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m11/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 789ms/step - accuracy: 0.8641 - loss: 0.8016max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m12/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 788ms/step - accuracy: 0.8640 - loss: 0.8020max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m13/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 789ms/step - accuracy: 0.8638 - loss: 0.8023max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m14/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m17s\u001b[0m 790ms/step - accuracy: 0.8636 - loss: 0.8025max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m15/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m16s\u001b[0m 790ms/step - accuracy: 0.8634 - loss: 0.8031max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m16/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 791ms/step - accuracy: 0.8632 - loss: 0.8035max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m17/36\u001b[0m \u001b[32m━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 791ms/step - accuracy: 0.8630 - loss: 0.8037max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m18/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 791ms/step - accuracy: 0.8629 - loss: 0.8038max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m19/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m13s\u001b[0m 792ms/step - accuracy: 0.8629 - loss: 0.8039max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m20/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m12s\u001b[0m 792ms/step - accuracy: 0.8628 - loss: 0.8039max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m21/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 792ms/step - accuracy: 0.8627 - loss: 0.8040max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m22/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 792ms/step - accuracy: 0.8626 - loss: 0.8040max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m23/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m10s\u001b[0m 791ms/step - accuracy: 0.8626 - loss: 0.8039max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m24/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m9s\u001b[0m 791ms/step - accuracy: 0.8625 - loss: 0.8038 max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m25/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m8s\u001b[0m 791ms/step - accuracy: 0.8625 - loss: 0.8037max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m26/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━\u001b[0m \u001b[1m7s\u001b[0m 791ms/step - accuracy: 0.8625 - loss: 0.8035max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m27/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m7s\u001b[0m 791ms/step - accuracy: 0.8625 - loss: 0.8033max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m28/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m6s\u001b[0m 791ms/step - accuracy: 0.8625 - loss: 0.8031max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m29/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m5s\u001b[0m 792ms/step - accuracy: 0.8626 - loss: 0.8029max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m30/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m4s\u001b[0m 792ms/step - accuracy: 0.8627 - loss: 0.8026max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m31/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 793ms/step - accuracy: 0.8627 - loss: 0.8023max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m32/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 793ms/step - accuracy: 0.8628 - loss: 0.8020max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m33/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m2s\u001b[0m 793ms/step - accuracy: 0.8629 - loss: 0.8018max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m34/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m1s\u001b[0m 793ms/step - accuracy: 0.8630 - loss: 0.8015max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m35/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 793ms/step - accuracy: 0.8631 - loss: 0.8012max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 785ms/step - accuracy: 0.8631 - loss: 0.8010max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 816ms/step - accuracy: 0.8632 - loss: 0.8008 - val_accuracy: 0.8329 - val_loss: 0.9170 - learning_rate: 1.0000e-04\n",
      "Epoch 14/200\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 1/36\u001b[0m \u001b[37m━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m28s\u001b[0m 805ms/step - accuracy: 0.8643 - loss: 0.7786max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 2/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 789ms/step - accuracy: 0.8699 - loss: 0.7702max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 3/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 786ms/step - accuracy: 0.8711 - loss: 0.7699max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 4/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 787ms/step - accuracy: 0.8720 - loss: 0.7684max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 5/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 786ms/step - accuracy: 0.8734 - loss: 0.7667max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 6/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 786ms/step - accuracy: 0.8743 - loss: 0.7662max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 7/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 786ms/step - accuracy: 0.8754 - loss: 0.7648max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 8/36\u001b[0m \u001b[32m━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 786ms/step - accuracy: 0.8761 - loss: 0.7636max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 9/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 786ms/step - accuracy: 0.8764 - loss: 0.7627max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m10/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m20s\u001b[0m 786ms/step - accuracy: 0.8766 - loss: 0.7618max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m11/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 787ms/step - accuracy: 0.8767 - loss: 0.7609max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m12/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 787ms/step - accuracy: 0.8768 - loss: 0.7605max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m13/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 787ms/step - accuracy: 0.8768 - loss: 0.7603max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m14/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m17s\u001b[0m 786ms/step - accuracy: 0.8769 - loss: 0.7600max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m15/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m16s\u001b[0m 786ms/step - accuracy: 0.8770 - loss: 0.7597max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m16/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 787ms/step - accuracy: 0.8770 - loss: 0.7595max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m17/36\u001b[0m \u001b[32m━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 787ms/step - accuracy: 0.8770 - loss: 0.7592max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m18/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 787ms/step - accuracy: 0.8771 - loss: 0.7589max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m19/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m13s\u001b[0m 787ms/step - accuracy: 0.8770 - loss: 0.7587max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m20/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m12s\u001b[0m 787ms/step - accuracy: 0.8770 - loss: 0.7586max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m21/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 787ms/step - accuracy: 0.8770 - loss: 0.7585max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m22/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 787ms/step - accuracy: 0.8769 - loss: 0.7584max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m23/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m10s\u001b[0m 787ms/step - accuracy: 0.8769 - loss: 0.7583max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m24/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m9s\u001b[0m 787ms/step - accuracy: 0.8769 - loss: 0.7581 max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m25/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m8s\u001b[0m 786ms/step - accuracy: 0.8769 - loss: 0.7578max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m26/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━\u001b[0m \u001b[1m7s\u001b[0m 786ms/step - accuracy: 0.8769 - loss: 0.7577max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m27/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m7s\u001b[0m 786ms/step - accuracy: 0.8768 - loss: 0.7575max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m28/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m6s\u001b[0m 787ms/step - accuracy: 0.8768 - loss: 0.7573max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m29/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m5s\u001b[0m 787ms/step - accuracy: 0.8768 - loss: 0.7572max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m30/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m4s\u001b[0m 787ms/step - accuracy: 0.8767 - loss: 0.7570max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m31/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 787ms/step - accuracy: 0.8767 - loss: 0.7568max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m32/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 787ms/step - accuracy: 0.8766 - loss: 0.7566max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m33/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m2s\u001b[0m 787ms/step - accuracy: 0.8766 - loss: 0.7564max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m34/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m1s\u001b[0m 787ms/step - accuracy: 0.8765 - loss: 0.7563max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m35/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 787ms/step - accuracy: 0.8764 - loss: 0.7561max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 779ms/step - accuracy: 0.8764 - loss: 0.7560max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 808ms/step - accuracy: 0.8763 - loss: 0.7559 - val_accuracy: 0.7959 - val_loss: 1.0798 - learning_rate: 1.0000e-04\n",
      "Epoch 15/200\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 1/36\u001b[0m \u001b[37m━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m27s\u001b[0m 794ms/step - accuracy: 0.8945 - loss: 0.7078max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 2/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 781ms/step - accuracy: 0.8869 - loss: 0.7153max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 3/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 789ms/step - accuracy: 0.8822 - loss: 0.7255max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 4/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 788ms/step - accuracy: 0.8794 - loss: 0.7295max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 5/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 788ms/step - accuracy: 0.8774 - loss: 0.7321max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 6/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 788ms/step - accuracy: 0.8761 - loss: 0.7338max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 7/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 788ms/step - accuracy: 0.8750 - loss: 0.7355max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 8/36\u001b[0m \u001b[32m━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 788ms/step - accuracy: 0.8743 - loss: 0.7365max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 9/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 788ms/step - accuracy: 0.8741 - loss: 0.7367max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m10/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m20s\u001b[0m 788ms/step - accuracy: 0.8740 - loss: 0.7366max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m11/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 787ms/step - accuracy: 0.8741 - loss: 0.7361max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m12/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 787ms/step - accuracy: 0.8741 - loss: 0.7359max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m13/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 788ms/step - accuracy: 0.8742 - loss: 0.7356max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m14/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m17s\u001b[0m 787ms/step - accuracy: 0.8742 - loss: 0.7354max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m15/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m16s\u001b[0m 787ms/step - accuracy: 0.8743 - loss: 0.7351max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m16/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 787ms/step - accuracy: 0.8743 - loss: 0.7348max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m17/36\u001b[0m \u001b[32m━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 787ms/step - accuracy: 0.8743 - loss: 0.7346max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m18/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 788ms/step - accuracy: 0.8743 - loss: 0.7345max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m19/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m13s\u001b[0m 787ms/step - accuracy: 0.8744 - loss: 0.7343max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m20/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m12s\u001b[0m 787ms/step - accuracy: 0.8745 - loss: 0.7341max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m21/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 787ms/step - accuracy: 0.8746 - loss: 0.7338max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m22/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 787ms/step - accuracy: 0.8746 - loss: 0.7337max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m23/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m10s\u001b[0m 786ms/step - accuracy: 0.8746 - loss: 0.7336max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m24/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m9s\u001b[0m 786ms/step - accuracy: 0.8747 - loss: 0.7334 max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m25/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m8s\u001b[0m 786ms/step - accuracy: 0.8747 - loss: 0.7332max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m26/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━\u001b[0m \u001b[1m7s\u001b[0m 786ms/step - accuracy: 0.8747 - loss: 0.7330max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m27/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m7s\u001b[0m 786ms/step - accuracy: 0.8748 - loss: 0.7328max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m28/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m6s\u001b[0m 786ms/step - accuracy: 0.8748 - loss: 0.7326max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m29/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m5s\u001b[0m 786ms/step - accuracy: 0.8749 - loss: 0.7324max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m30/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m4s\u001b[0m 786ms/step - accuracy: 0.8749 - loss: 0.7322max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m31/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 786ms/step - accuracy: 0.8749 - loss: 0.7320max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m32/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 786ms/step - accuracy: 0.8750 - loss: 0.7318max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m33/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m2s\u001b[0m 786ms/step - accuracy: 0.8750 - loss: 0.7316max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m34/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m1s\u001b[0m 786ms/step - accuracy: 0.8751 - loss: 0.7314max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m35/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 786ms/step - accuracy: 0.8751 - loss: 0.7312max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 778ms/step - accuracy: 0.8752 - loss: 0.7310max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 807ms/step - accuracy: 0.8753 - loss: 0.7308 - val_accuracy: 0.8431 - val_loss: 0.8122 - learning_rate: 1.0000e-04\n",
      "Epoch 16/200\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 1/36\u001b[0m \u001b[37m━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m27s\u001b[0m 799ms/step - accuracy: 0.8822 - loss: 0.6889max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 2/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 788ms/step - accuracy: 0.8802 - loss: 0.6934max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 3/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 788ms/step - accuracy: 0.8796 - loss: 0.6957max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 4/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 791ms/step - accuracy: 0.8798 - loss: 0.6984max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 5/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 789ms/step - accuracy: 0.8795 - loss: 0.7009max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 6/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 788ms/step - accuracy: 0.8792 - loss: 0.7031max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 7/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 789ms/step - accuracy: 0.8790 - loss: 0.7047max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 8/36\u001b[0m \u001b[32m━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 788ms/step - accuracy: 0.8790 - loss: 0.7055max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 9/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 789ms/step - accuracy: 0.8788 - loss: 0.7060max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m10/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m20s\u001b[0m 789ms/step - accuracy: 0.8787 - loss: 0.7061max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m11/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 788ms/step - accuracy: 0.8787 - loss: 0.7067max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m12/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 788ms/step - accuracy: 0.8787 - loss: 0.7071max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m13/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 788ms/step - accuracy: 0.8787 - loss: 0.7074max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m14/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m17s\u001b[0m 789ms/step - accuracy: 0.8786 - loss: 0.7080max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m15/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m16s\u001b[0m 789ms/step - accuracy: 0.8785 - loss: 0.7084max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m16/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 790ms/step - accuracy: 0.8785 - loss: 0.7088max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m17/36\u001b[0m \u001b[32m━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 790ms/step - accuracy: 0.8785 - loss: 0.7091max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m18/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 790ms/step - accuracy: 0.8784 - loss: 0.7094max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m19/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m13s\u001b[0m 791ms/step - accuracy: 0.8784 - loss: 0.7097max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m20/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m12s\u001b[0m 791ms/step - accuracy: 0.8784 - loss: 0.7099max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m21/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 791ms/step - accuracy: 0.8785 - loss: 0.7100max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m22/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 792ms/step - accuracy: 0.8785 - loss: 0.7101max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m23/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m10s\u001b[0m 791ms/step - accuracy: 0.8785 - loss: 0.7102max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m24/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m9s\u001b[0m 792ms/step - accuracy: 0.8784 - loss: 0.7103 max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m25/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m8s\u001b[0m 792ms/step - accuracy: 0.8784 - loss: 0.7104max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m26/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━\u001b[0m \u001b[1m7s\u001b[0m 792ms/step - accuracy: 0.8784 - loss: 0.7105max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m27/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m7s\u001b[0m 793ms/step - accuracy: 0.8784 - loss: 0.7106max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m28/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m6s\u001b[0m 793ms/step - accuracy: 0.8784 - loss: 0.7107max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m29/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m5s\u001b[0m 793ms/step - accuracy: 0.8784 - loss: 0.7107max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m30/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m4s\u001b[0m 793ms/step - accuracy: 0.8783 - loss: 0.7107max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m31/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 793ms/step - accuracy: 0.8783 - loss: 0.7107max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m32/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 793ms/step - accuracy: 0.8783 - loss: 0.7106max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m33/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m2s\u001b[0m 793ms/step - accuracy: 0.8783 - loss: 0.7105max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m34/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m1s\u001b[0m 793ms/step - accuracy: 0.8783 - loss: 0.7105max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m35/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 793ms/step - accuracy: 0.8783 - loss: 0.7103max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 785ms/step - accuracy: 0.8784 - loss: 0.7102max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 815ms/step - accuracy: 0.8784 - loss: 0.7102 - val_accuracy: 0.8386 - val_loss: 0.8210 - learning_rate: 1.0000e-04\n",
      "Epoch 17/200\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 1/36\u001b[0m \u001b[37m━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m28s\u001b[0m 813ms/step - accuracy: 0.8903 - loss: 0.6579max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 2/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m27s\u001b[0m 798ms/step - accuracy: 0.8913 - loss: 0.6575max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 3/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 793ms/step - accuracy: 0.8917 - loss: 0.6581max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 4/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 795ms/step - accuracy: 0.8919 - loss: 0.6598max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 5/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 794ms/step - accuracy: 0.8919 - loss: 0.6604max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 6/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 795ms/step - accuracy: 0.8919 - loss: 0.6605max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 7/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 796ms/step - accuracy: 0.8915 - loss: 0.6616max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 8/36\u001b[0m \u001b[32m━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 797ms/step - accuracy: 0.8912 - loss: 0.6625max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 9/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 796ms/step - accuracy: 0.8907 - loss: 0.6635max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m10/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m20s\u001b[0m 796ms/step - accuracy: 0.8903 - loss: 0.6644max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m11/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 795ms/step - accuracy: 0.8900 - loss: 0.6653max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m12/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 795ms/step - accuracy: 0.8896 - loss: 0.6663max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m13/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 795ms/step - accuracy: 0.8890 - loss: 0.6676max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m14/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m17s\u001b[0m 795ms/step - accuracy: 0.8884 - loss: 0.6690max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m15/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m16s\u001b[0m 795ms/step - accuracy: 0.8879 - loss: 0.6703max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m16/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 795ms/step - accuracy: 0.8874 - loss: 0.6714max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m17/36\u001b[0m \u001b[32m━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 795ms/step - accuracy: 0.8871 - loss: 0.6722max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m18/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 795ms/step - accuracy: 0.8868 - loss: 0.6729max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m19/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m13s\u001b[0m 796ms/step - accuracy: 0.8866 - loss: 0.6734max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m20/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m12s\u001b[0m 796ms/step - accuracy: 0.8864 - loss: 0.6740max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m21/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 795ms/step - accuracy: 0.8862 - loss: 0.6744max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m22/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 796ms/step - accuracy: 0.8861 - loss: 0.6748max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m23/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m10s\u001b[0m 796ms/step - accuracy: 0.8859 - loss: 0.6751max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m24/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m9s\u001b[0m 796ms/step - accuracy: 0.8858 - loss: 0.6754 max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m25/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m8s\u001b[0m 795ms/step - accuracy: 0.8857 - loss: 0.6757max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m26/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━\u001b[0m \u001b[1m7s\u001b[0m 796ms/step - accuracy: 0.8856 - loss: 0.6759max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m27/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m7s\u001b[0m 796ms/step - accuracy: 0.8856 - loss: 0.6761max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m28/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m6s\u001b[0m 796ms/step - accuracy: 0.8855 - loss: 0.6762max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m29/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m5s\u001b[0m 796ms/step - accuracy: 0.8855 - loss: 0.6764max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m30/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m4s\u001b[0m 796ms/step - accuracy: 0.8854 - loss: 0.6765max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m31/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 796ms/step - accuracy: 0.8854 - loss: 0.6766max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m32/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 796ms/step - accuracy: 0.8854 - loss: 0.6766max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m33/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m2s\u001b[0m 796ms/step - accuracy: 0.8854 - loss: 0.6766max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m34/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m1s\u001b[0m 796ms/step - accuracy: 0.8854 - loss: 0.6767max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m35/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 796ms/step - accuracy: 0.8854 - loss: 0.6767max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 787ms/step - accuracy: 0.8853 - loss: 0.6768max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 818ms/step - accuracy: 0.8853 - loss: 0.6769 - val_accuracy: 0.8437 - val_loss: 0.7860 - learning_rate: 1.0000e-04\n",
      "Epoch 18/200\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 1/36\u001b[0m \u001b[37m━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m28s\u001b[0m 813ms/step - accuracy: 0.8935 - loss: 0.6819max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 2/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m27s\u001b[0m 817ms/step - accuracy: 0.8872 - loss: 0.6884max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 3/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 810ms/step - accuracy: 0.8812 - loss: 0.6965max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 4/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 807ms/step - accuracy: 0.8771 - loss: 0.7036max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 5/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 803ms/step - accuracy: 0.8744 - loss: 0.7102max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 6/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 801ms/step - accuracy: 0.8725 - loss: 0.7143max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 7/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 802ms/step - accuracy: 0.8714 - loss: 0.7166max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 8/36\u001b[0m \u001b[32m━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 802ms/step - accuracy: 0.8707 - loss: 0.7178max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 9/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 802ms/step - accuracy: 0.8705 - loss: 0.7181max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m10/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m20s\u001b[0m 801ms/step - accuracy: 0.8703 - loss: 0.7183max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m11/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m20s\u001b[0m 802ms/step - accuracy: 0.8703 - loss: 0.7183max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m12/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 801ms/step - accuracy: 0.8702 - loss: 0.7180max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m13/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 802ms/step - accuracy: 0.8702 - loss: 0.7178max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m14/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m17s\u001b[0m 801ms/step - accuracy: 0.8704 - loss: 0.7172max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m15/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m16s\u001b[0m 801ms/step - accuracy: 0.8705 - loss: 0.7168max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m16/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 800ms/step - accuracy: 0.8705 - loss: 0.7165max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m17/36\u001b[0m \u001b[32m━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 799ms/step - accuracy: 0.8705 - loss: 0.7163max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m18/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 799ms/step - accuracy: 0.8706 - loss: 0.7159max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m19/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m13s\u001b[0m 799ms/step - accuracy: 0.8706 - loss: 0.7156max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m20/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m12s\u001b[0m 798ms/step - accuracy: 0.8707 - loss: 0.7153max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m21/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 797ms/step - accuracy: 0.8708 - loss: 0.7149max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m22/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 796ms/step - accuracy: 0.8709 - loss: 0.7145max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m23/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m10s\u001b[0m 796ms/step - accuracy: 0.8710 - loss: 0.7140max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m24/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m9s\u001b[0m 794ms/step - accuracy: 0.8712 - loss: 0.7136 max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m25/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m8s\u001b[0m 794ms/step - accuracy: 0.8713 - loss: 0.7131max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m26/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━\u001b[0m \u001b[1m7s\u001b[0m 793ms/step - accuracy: 0.8715 - loss: 0.7125max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m27/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m7s\u001b[0m 793ms/step - accuracy: 0.8716 - loss: 0.7121max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m28/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m6s\u001b[0m 794ms/step - accuracy: 0.8717 - loss: 0.7116max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m29/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m5s\u001b[0m 794ms/step - accuracy: 0.8719 - loss: 0.7111max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m30/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m4s\u001b[0m 794ms/step - accuracy: 0.8720 - loss: 0.7106max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m31/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 794ms/step - accuracy: 0.8722 - loss: 0.7100max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m32/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 794ms/step - accuracy: 0.8724 - loss: 0.7095max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m33/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m2s\u001b[0m 794ms/step - accuracy: 0.8725 - loss: 0.7091max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m34/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m1s\u001b[0m 794ms/step - accuracy: 0.8727 - loss: 0.7086max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m35/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 795ms/step - accuracy: 0.8728 - loss: 0.7082max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 787ms/step - accuracy: 0.8729 - loss: 0.7078max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 817ms/step - accuracy: 0.8730 - loss: 0.7075 - val_accuracy: 0.8038 - val_loss: 0.9573 - learning_rate: 1.0000e-04\n",
      "Epoch 19/200\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 1/36\u001b[0m \u001b[37m━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m28s\u001b[0m 813ms/step - accuracy: 0.8706 - loss: 0.6788max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 2/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m27s\u001b[0m 806ms/step - accuracy: 0.8768 - loss: 0.6791max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 3/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 798ms/step - accuracy: 0.8796 - loss: 0.6769max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 4/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 806ms/step - accuracy: 0.8803 - loss: 0.6761max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 5/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 802ms/step - accuracy: 0.8804 - loss: 0.6769max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 6/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 801ms/step - accuracy: 0.8805 - loss: 0.6771max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 7/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 801ms/step - accuracy: 0.8806 - loss: 0.6775max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 8/36\u001b[0m \u001b[32m━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 801ms/step - accuracy: 0.8804 - loss: 0.6787max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 9/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 800ms/step - accuracy: 0.8802 - loss: 0.6797max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m10/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m20s\u001b[0m 797ms/step - accuracy: 0.8801 - loss: 0.6803max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m11/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 796ms/step - accuracy: 0.8801 - loss: 0.6807max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m12/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 795ms/step - accuracy: 0.8800 - loss: 0.6810max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m13/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 794ms/step - accuracy: 0.8799 - loss: 0.6811max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m14/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m17s\u001b[0m 794ms/step - accuracy: 0.8799 - loss: 0.6811max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m15/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m16s\u001b[0m 794ms/step - accuracy: 0.8799 - loss: 0.6809max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m16/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 794ms/step - accuracy: 0.8798 - loss: 0.6810max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m17/36\u001b[0m \u001b[32m━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 794ms/step - accuracy: 0.8796 - loss: 0.6813max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m18/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 793ms/step - accuracy: 0.8795 - loss: 0.6816max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m19/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m13s\u001b[0m 793ms/step - accuracy: 0.8793 - loss: 0.6818max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m20/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m12s\u001b[0m 794ms/step - accuracy: 0.8792 - loss: 0.6820max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m21/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 793ms/step - accuracy: 0.8790 - loss: 0.6820max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m22/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 793ms/step - accuracy: 0.8789 - loss: 0.6821max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m23/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m10s\u001b[0m 793ms/step - accuracy: 0.8788 - loss: 0.6821max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m24/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m9s\u001b[0m 793ms/step - accuracy: 0.8787 - loss: 0.6821 max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m25/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m8s\u001b[0m 793ms/step - accuracy: 0.8787 - loss: 0.6821max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m26/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━\u001b[0m \u001b[1m7s\u001b[0m 793ms/step - accuracy: 0.8786 - loss: 0.6822max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m27/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m7s\u001b[0m 793ms/step - accuracy: 0.8786 - loss: 0.6821max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m28/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m6s\u001b[0m 793ms/step - accuracy: 0.8786 - loss: 0.6820max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m29/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m5s\u001b[0m 793ms/step - accuracy: 0.8786 - loss: 0.6819max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m30/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m4s\u001b[0m 793ms/step - accuracy: 0.8786 - loss: 0.6818max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m31/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 794ms/step - accuracy: 0.8786 - loss: 0.6816max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m32/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 794ms/step - accuracy: 0.8786 - loss: 0.6815max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m33/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m2s\u001b[0m 794ms/step - accuracy: 0.8787 - loss: 0.6813max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m34/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m1s\u001b[0m 794ms/step - accuracy: 0.8787 - loss: 0.6811max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m35/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 795ms/step - accuracy: 0.8788 - loss: 0.6809max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 787ms/step - accuracy: 0.8788 - loss: 0.6807max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 817ms/step - accuracy: 0.8789 - loss: 0.6805 - val_accuracy: 0.8145 - val_loss: 0.8772 - learning_rate: 1.0000e-04\n",
      "Epoch 20/200\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 1/36\u001b[0m \u001b[37m━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m28s\u001b[0m 810ms/step - accuracy: 0.8766 - loss: 0.6561max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 2/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m27s\u001b[0m 797ms/step - accuracy: 0.8821 - loss: 0.6428max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 3/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 798ms/step - accuracy: 0.8829 - loss: 0.6406max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 4/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 800ms/step - accuracy: 0.8836 - loss: 0.6403max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 5/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 801ms/step - accuracy: 0.8841 - loss: 0.6404max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 6/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 800ms/step - accuracy: 0.8842 - loss: 0.6412max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 7/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 799ms/step - accuracy: 0.8847 - loss: 0.6419max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 8/36\u001b[0m \u001b[32m━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 799ms/step - accuracy: 0.8849 - loss: 0.6428max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 9/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 798ms/step - accuracy: 0.8851 - loss: 0.6436max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m10/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m20s\u001b[0m 798ms/step - accuracy: 0.8850 - loss: 0.6446max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m11/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 798ms/step - accuracy: 0.8850 - loss: 0.6455max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m12/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 798ms/step - accuracy: 0.8850 - loss: 0.6462max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m13/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 798ms/step - accuracy: 0.8852 - loss: 0.6466max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m14/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m17s\u001b[0m 798ms/step - accuracy: 0.8853 - loss: 0.6469max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m15/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m16s\u001b[0m 798ms/step - accuracy: 0.8854 - loss: 0.6471max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m16/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 798ms/step - accuracy: 0.8854 - loss: 0.6473max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m17/36\u001b[0m \u001b[32m━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 797ms/step - accuracy: 0.8853 - loss: 0.6477max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m18/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 798ms/step - accuracy: 0.8853 - loss: 0.6480max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m19/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m13s\u001b[0m 798ms/step - accuracy: 0.8853 - loss: 0.6481max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m20/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m12s\u001b[0m 798ms/step - accuracy: 0.8853 - loss: 0.6482max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m21/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 799ms/step - accuracy: 0.8853 - loss: 0.6481max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m22/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 799ms/step - accuracy: 0.8854 - loss: 0.6481max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m23/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m10s\u001b[0m 799ms/step - accuracy: 0.8854 - loss: 0.6481max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m24/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m9s\u001b[0m 799ms/step - accuracy: 0.8854 - loss: 0.6480 max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m25/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m8s\u001b[0m 800ms/step - accuracy: 0.8855 - loss: 0.6479max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m26/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━\u001b[0m \u001b[1m8s\u001b[0m 800ms/step - accuracy: 0.8855 - loss: 0.6479max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m27/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m7s\u001b[0m 800ms/step - accuracy: 0.8856 - loss: 0.6479max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m28/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m6s\u001b[0m 800ms/step - accuracy: 0.8856 - loss: 0.6479max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m29/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m5s\u001b[0m 800ms/step - accuracy: 0.8856 - loss: 0.6480max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m30/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m4s\u001b[0m 800ms/step - accuracy: 0.8857 - loss: 0.6480max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m31/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m4s\u001b[0m 800ms/step - accuracy: 0.8857 - loss: 0.6479max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m32/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 800ms/step - accuracy: 0.8858 - loss: 0.6479max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m33/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m2s\u001b[0m 800ms/step - accuracy: 0.8858 - loss: 0.6479max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m34/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m1s\u001b[0m 800ms/step - accuracy: 0.8858 - loss: 0.6479max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m35/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 800ms/step - accuracy: 0.8859 - loss: 0.6478max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 792ms/step - accuracy: 0.8859 - loss: 0.6478max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      " Saved checkpoint: checkpoints/segnet_epoch_020_vloss_0.7693.h5\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m30s\u001b[0m 841ms/step - accuracy: 0.8859 - loss: 0.6477 - val_accuracy: 0.8435 - val_loss: 0.7693 - learning_rate: 1.0000e-04\n",
      "Epoch 21/200\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 1/36\u001b[0m \u001b[37m━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m28s\u001b[0m 810ms/step - accuracy: 0.8809 - loss: 0.6452max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 2/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m27s\u001b[0m 806ms/step - accuracy: 0.8854 - loss: 0.6395max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 3/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 816ms/step - accuracy: 0.8860 - loss: 0.6374max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 4/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 813ms/step - accuracy: 0.8858 - loss: 0.6374max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 5/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 809ms/step - accuracy: 0.8853 - loss: 0.6378max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 6/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 808ms/step - accuracy: 0.8857 - loss: 0.6372max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 7/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 806ms/step - accuracy: 0.8860 - loss: 0.6366max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 8/36\u001b[0m \u001b[32m━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 805ms/step - accuracy: 0.8863 - loss: 0.6359max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 9/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 804ms/step - accuracy: 0.8867 - loss: 0.6351max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m10/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m20s\u001b[0m 807ms/step - accuracy: 0.8869 - loss: 0.6348max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m11/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m20s\u001b[0m 807ms/step - accuracy: 0.8872 - loss: 0.6344max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m12/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 806ms/step - accuracy: 0.8874 - loss: 0.6342max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m13/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 806ms/step - accuracy: 0.8875 - loss: 0.6343max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m14/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m17s\u001b[0m 805ms/step - accuracy: 0.8876 - loss: 0.6341max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m15/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m16s\u001b[0m 805ms/step - accuracy: 0.8877 - loss: 0.6339max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m16/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m16s\u001b[0m 806ms/step - accuracy: 0.8878 - loss: 0.6337max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m17/36\u001b[0m \u001b[32m━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 806ms/step - accuracy: 0.8879 - loss: 0.6334max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m18/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 807ms/step - accuracy: 0.8880 - loss: 0.6331max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m19/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m13s\u001b[0m 807ms/step - accuracy: 0.8882 - loss: 0.6327max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m20/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m12s\u001b[0m 807ms/step - accuracy: 0.8883 - loss: 0.6324max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m21/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m12s\u001b[0m 807ms/step - accuracy: 0.8885 - loss: 0.6319max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m22/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 806ms/step - accuracy: 0.8887 - loss: 0.6315max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m23/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m10s\u001b[0m 806ms/step - accuracy: 0.8888 - loss: 0.6311max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m24/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m9s\u001b[0m 806ms/step - accuracy: 0.8890 - loss: 0.6307 max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m25/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m8s\u001b[0m 805ms/step - accuracy: 0.8892 - loss: 0.6303max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m26/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━\u001b[0m \u001b[1m8s\u001b[0m 805ms/step - accuracy: 0.8893 - loss: 0.6299max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m27/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m7s\u001b[0m 804ms/step - accuracy: 0.8895 - loss: 0.6295max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m28/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m6s\u001b[0m 804ms/step - accuracy: 0.8896 - loss: 0.6291max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m29/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m5s\u001b[0m 803ms/step - accuracy: 0.8897 - loss: 0.6288max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m30/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m4s\u001b[0m 803ms/step - accuracy: 0.8899 - loss: 0.6285max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m31/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m4s\u001b[0m 803ms/step - accuracy: 0.8900 - loss: 0.6282max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m32/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 803ms/step - accuracy: 0.8901 - loss: 0.6279max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m33/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m2s\u001b[0m 803ms/step - accuracy: 0.8902 - loss: 0.6276max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m34/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m1s\u001b[0m 803ms/step - accuracy: 0.8902 - loss: 0.6274max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m35/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 803ms/step - accuracy: 0.8903 - loss: 0.6271max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 794ms/step - accuracy: 0.8904 - loss: 0.6268max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m30s\u001b[0m 824ms/step - accuracy: 0.8905 - loss: 0.6266 - val_accuracy: 0.8310 - val_loss: 0.8267 - learning_rate: 1.0000e-04\n",
      "Epoch 22/200\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 1/36\u001b[0m \u001b[37m━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m28s\u001b[0m 808ms/step - accuracy: 0.9012 - loss: 0.5862max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 2/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m27s\u001b[0m 798ms/step - accuracy: 0.9025 - loss: 0.5879max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 3/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 796ms/step - accuracy: 0.9013 - loss: 0.5906max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 4/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 796ms/step - accuracy: 0.8999 - loss: 0.5928max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 5/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 795ms/step - accuracy: 0.8989 - loss: 0.5937max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 6/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 794ms/step - accuracy: 0.8989 - loss: 0.5934max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 7/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 794ms/step - accuracy: 0.8992 - loss: 0.5933max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 8/36\u001b[0m \u001b[32m━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 793ms/step - accuracy: 0.8996 - loss: 0.5929max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 9/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 793ms/step - accuracy: 0.8997 - loss: 0.5930max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m10/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m20s\u001b[0m 792ms/step - accuracy: 0.8996 - loss: 0.5935max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m11/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 791ms/step - accuracy: 0.8994 - loss: 0.5939max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m12/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 791ms/step - accuracy: 0.8993 - loss: 0.5941max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m13/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 791ms/step - accuracy: 0.8989 - loss: 0.5948max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m14/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m17s\u001b[0m 791ms/step - accuracy: 0.8987 - loss: 0.5952max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m15/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m16s\u001b[0m 790ms/step - accuracy: 0.8986 - loss: 0.5955max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m16/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 790ms/step - accuracy: 0.8986 - loss: 0.5955max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m17/36\u001b[0m \u001b[32m━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 790ms/step - accuracy: 0.8985 - loss: 0.5958max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m18/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 790ms/step - accuracy: 0.8985 - loss: 0.5960max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m19/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m13s\u001b[0m 789ms/step - accuracy: 0.8984 - loss: 0.5962max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m20/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m12s\u001b[0m 789ms/step - accuracy: 0.8983 - loss: 0.5964max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m21/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 789ms/step - accuracy: 0.8983 - loss: 0.5965max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m22/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 788ms/step - accuracy: 0.8983 - loss: 0.5966max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m23/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m10s\u001b[0m 788ms/step - accuracy: 0.8983 - loss: 0.5966max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m24/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m9s\u001b[0m 787ms/step - accuracy: 0.8983 - loss: 0.5966 max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m25/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m8s\u001b[0m 786ms/step - accuracy: 0.8983 - loss: 0.5966max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m26/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━\u001b[0m \u001b[1m7s\u001b[0m 786ms/step - accuracy: 0.8982 - loss: 0.5966max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m27/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m7s\u001b[0m 786ms/step - accuracy: 0.8983 - loss: 0.5965max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m28/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m6s\u001b[0m 787ms/step - accuracy: 0.8983 - loss: 0.5964max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m29/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m5s\u001b[0m 786ms/step - accuracy: 0.8983 - loss: 0.5963max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m30/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m4s\u001b[0m 786ms/step - accuracy: 0.8983 - loss: 0.5962max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m31/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 786ms/step - accuracy: 0.8983 - loss: 0.5962max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m32/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 786ms/step - accuracy: 0.8983 - loss: 0.5961max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m33/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m2s\u001b[0m 786ms/step - accuracy: 0.8983 - loss: 0.5959max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m34/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m1s\u001b[0m 787ms/step - accuracy: 0.8983 - loss: 0.5958max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m35/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 786ms/step - accuracy: 0.8983 - loss: 0.5957max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 779ms/step - accuracy: 0.8983 - loss: 0.5956max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 808ms/step - accuracy: 0.8984 - loss: 0.5955 - val_accuracy: 0.8509 - val_loss: 0.7264 - learning_rate: 1.0000e-04\n",
      "Epoch 23/200\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 1/36\u001b[0m \u001b[37m━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m28s\u001b[0m 814ms/step - accuracy: 0.8926 - loss: 0.5952max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 2/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 789ms/step - accuracy: 0.8963 - loss: 0.5812max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 3/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 788ms/step - accuracy: 0.8984 - loss: 0.5770max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 4/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 783ms/step - accuracy: 0.9002 - loss: 0.5741max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 5/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 785ms/step - accuracy: 0.9014 - loss: 0.5726max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 6/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 785ms/step - accuracy: 0.9024 - loss: 0.5713max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 7/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 785ms/step - accuracy: 0.9032 - loss: 0.5704max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 8/36\u001b[0m \u001b[32m━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 785ms/step - accuracy: 0.9039 - loss: 0.5695max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 9/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 785ms/step - accuracy: 0.9043 - loss: 0.5689max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m10/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m20s\u001b[0m 785ms/step - accuracy: 0.9047 - loss: 0.5683max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m11/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 786ms/step - accuracy: 0.9048 - loss: 0.5680max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m12/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 786ms/step - accuracy: 0.9050 - loss: 0.5680max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m13/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 786ms/step - accuracy: 0.9050 - loss: 0.5680max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m14/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m17s\u001b[0m 786ms/step - accuracy: 0.9050 - loss: 0.5681max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m15/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m16s\u001b[0m 786ms/step - accuracy: 0.9050 - loss: 0.5682max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m16/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 785ms/step - accuracy: 0.9049 - loss: 0.5683max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m17/36\u001b[0m \u001b[32m━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 786ms/step - accuracy: 0.9049 - loss: 0.5685max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m18/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 786ms/step - accuracy: 0.9048 - loss: 0.5686max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m19/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m13s\u001b[0m 787ms/step - accuracy: 0.9047 - loss: 0.5687max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m20/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m12s\u001b[0m 787ms/step - accuracy: 0.9046 - loss: 0.5688max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m21/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 787ms/step - accuracy: 0.9045 - loss: 0.5689max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m22/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 787ms/step - accuracy: 0.9045 - loss: 0.5689max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m23/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m10s\u001b[0m 788ms/step - accuracy: 0.9044 - loss: 0.5690max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m24/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m9s\u001b[0m 788ms/step - accuracy: 0.9043 - loss: 0.5691 max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m25/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m8s\u001b[0m 788ms/step - accuracy: 0.9042 - loss: 0.5692max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m26/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━\u001b[0m \u001b[1m7s\u001b[0m 788ms/step - accuracy: 0.9041 - loss: 0.5693max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m27/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m7s\u001b[0m 788ms/step - accuracy: 0.9041 - loss: 0.5694max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m28/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m6s\u001b[0m 788ms/step - accuracy: 0.9040 - loss: 0.5695max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m29/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m5s\u001b[0m 788ms/step - accuracy: 0.9040 - loss: 0.5696max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m30/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m4s\u001b[0m 788ms/step - accuracy: 0.9039 - loss: 0.5696max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m31/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 788ms/step - accuracy: 0.9039 - loss: 0.5697max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m32/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 788ms/step - accuracy: 0.9038 - loss: 0.5698max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m33/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m2s\u001b[0m 788ms/step - accuracy: 0.9038 - loss: 0.5698max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m34/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m1s\u001b[0m 788ms/step - accuracy: 0.9037 - loss: 0.5699max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m35/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 788ms/step - accuracy: 0.9037 - loss: 0.5700max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 780ms/step - accuracy: 0.9036 - loss: 0.5700max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 809ms/step - accuracy: 0.9036 - loss: 0.5701 - val_accuracy: 0.8631 - val_loss: 0.7024 - learning_rate: 1.0000e-04\n",
      "Epoch 24/200\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 1/36\u001b[0m \u001b[37m━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m28s\u001b[0m 800ms/step - accuracy: 0.8935 - loss: 0.6037max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 2/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 788ms/step - accuracy: 0.8984 - loss: 0.5855max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 3/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 786ms/step - accuracy: 0.9020 - loss: 0.5763max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 4/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 788ms/step - accuracy: 0.9042 - loss: 0.5704max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 5/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 825ms/step - accuracy: 0.9060 - loss: 0.5648max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 6/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 818ms/step - accuracy: 0.9066 - loss: 0.5620max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 7/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 813ms/step - accuracy: 0.9071 - loss: 0.5600max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 8/36\u001b[0m \u001b[32m━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 809ms/step - accuracy: 0.9075 - loss: 0.5581max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 9/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 807ms/step - accuracy: 0.9079 - loss: 0.5564max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m10/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m20s\u001b[0m 805ms/step - accuracy: 0.9082 - loss: 0.5552max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m11/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m20s\u001b[0m 804ms/step - accuracy: 0.9085 - loss: 0.5544max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m12/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 802ms/step - accuracy: 0.9087 - loss: 0.5536max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m13/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 801ms/step - accuracy: 0.9089 - loss: 0.5530max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m14/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m17s\u001b[0m 800ms/step - accuracy: 0.9090 - loss: 0.5524max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m15/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m16s\u001b[0m 799ms/step - accuracy: 0.9092 - loss: 0.5519max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m16/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 798ms/step - accuracy: 0.9093 - loss: 0.5515max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m17/36\u001b[0m \u001b[32m━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 797ms/step - accuracy: 0.9093 - loss: 0.5511max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m18/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 796ms/step - accuracy: 0.9094 - loss: 0.5507max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m19/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m13s\u001b[0m 796ms/step - accuracy: 0.9095 - loss: 0.5503max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m20/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m12s\u001b[0m 795ms/step - accuracy: 0.9096 - loss: 0.5499max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m21/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 794ms/step - accuracy: 0.9096 - loss: 0.5496max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m22/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 794ms/step - accuracy: 0.9097 - loss: 0.5493max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m23/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m10s\u001b[0m 793ms/step - accuracy: 0.9097 - loss: 0.5490max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m24/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m9s\u001b[0m 793ms/step - accuracy: 0.9097 - loss: 0.5488 max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m25/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m8s\u001b[0m 793ms/step - accuracy: 0.9097 - loss: 0.5487max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m26/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━\u001b[0m \u001b[1m7s\u001b[0m 792ms/step - accuracy: 0.9097 - loss: 0.5485max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m27/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m7s\u001b[0m 792ms/step - accuracy: 0.9097 - loss: 0.5483max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m28/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m6s\u001b[0m 791ms/step - accuracy: 0.9097 - loss: 0.5482max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m29/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m5s\u001b[0m 791ms/step - accuracy: 0.9097 - loss: 0.5482max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m30/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m4s\u001b[0m 791ms/step - accuracy: 0.9096 - loss: 0.5482max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m31/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 791ms/step - accuracy: 0.9096 - loss: 0.5482max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m32/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 791ms/step - accuracy: 0.9095 - loss: 0.5482max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m33/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m2s\u001b[0m 791ms/step - accuracy: 0.9095 - loss: 0.5482max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m34/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m1s\u001b[0m 791ms/step - accuracy: 0.9094 - loss: 0.5483max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m35/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 792ms/step - accuracy: 0.9093 - loss: 0.5483max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 783ms/step - accuracy: 0.9093 - loss: 0.5484max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 813ms/step - accuracy: 0.9092 - loss: 0.5484 - val_accuracy: 0.8446 - val_loss: 0.7856 - learning_rate: 1.0000e-04\n",
      "Epoch 25/200\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 1/36\u001b[0m \u001b[37m━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m28s\u001b[0m 807ms/step - accuracy: 0.9098 - loss: 0.5433max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 2/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 788ms/step - accuracy: 0.8993 - loss: 0.5755max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 3/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 791ms/step - accuracy: 0.8938 - loss: 0.5902max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 4/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 791ms/step - accuracy: 0.8917 - loss: 0.5959max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 5/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 791ms/step - accuracy: 0.8900 - loss: 0.6002max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 6/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 790ms/step - accuracy: 0.8888 - loss: 0.6031max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 7/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 789ms/step - accuracy: 0.8880 - loss: 0.6049max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 8/36\u001b[0m \u001b[32m━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 789ms/step - accuracy: 0.8873 - loss: 0.6066max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 9/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 787ms/step - accuracy: 0.8867 - loss: 0.6079max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m10/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m20s\u001b[0m 787ms/step - accuracy: 0.8859 - loss: 0.6096max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m11/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 787ms/step - accuracy: 0.8853 - loss: 0.6111max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m12/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 787ms/step - accuracy: 0.8846 - loss: 0.6128max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m13/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 787ms/step - accuracy: 0.8841 - loss: 0.6140max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m14/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m17s\u001b[0m 787ms/step - accuracy: 0.8836 - loss: 0.6150max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m15/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m16s\u001b[0m 787ms/step - accuracy: 0.8833 - loss: 0.6158max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m16/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 787ms/step - accuracy: 0.8829 - loss: 0.6166max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m17/36\u001b[0m \u001b[32m━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 788ms/step - accuracy: 0.8827 - loss: 0.6171max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m18/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 788ms/step - accuracy: 0.8825 - loss: 0.6175max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m19/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m13s\u001b[0m 787ms/step - accuracy: 0.8824 - loss: 0.6178max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m20/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m12s\u001b[0m 787ms/step - accuracy: 0.8824 - loss: 0.6178max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m21/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 787ms/step - accuracy: 0.8824 - loss: 0.6178max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m22/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 787ms/step - accuracy: 0.8824 - loss: 0.6177max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m23/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m10s\u001b[0m 787ms/step - accuracy: 0.8824 - loss: 0.6177max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m24/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m9s\u001b[0m 788ms/step - accuracy: 0.8824 - loss: 0.6175 max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m25/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m8s\u001b[0m 788ms/step - accuracy: 0.8825 - loss: 0.6174max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m26/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━\u001b[0m \u001b[1m7s\u001b[0m 788ms/step - accuracy: 0.8826 - loss: 0.6171max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m27/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m7s\u001b[0m 787ms/step - accuracy: 0.8827 - loss: 0.6169max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m28/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m6s\u001b[0m 786ms/step - accuracy: 0.8828 - loss: 0.6166max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m29/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m5s\u001b[0m 786ms/step - accuracy: 0.8829 - loss: 0.6163max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m30/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m4s\u001b[0m 786ms/step - accuracy: 0.8831 - loss: 0.6160max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m31/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 786ms/step - accuracy: 0.8832 - loss: 0.6156max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m32/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 786ms/step - accuracy: 0.8833 - loss: 0.6153max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m33/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m2s\u001b[0m 786ms/step - accuracy: 0.8834 - loss: 0.6149max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m34/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m1s\u001b[0m 786ms/step - accuracy: 0.8835 - loss: 0.6146max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m35/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 786ms/step - accuracy: 0.8836 - loss: 0.6144max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 778ms/step - accuracy: 0.8837 - loss: 0.6141max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 807ms/step - accuracy: 0.8838 - loss: 0.6139 - val_accuracy: 0.8585 - val_loss: 0.6970 - learning_rate: 1.0000e-04\n",
      "Epoch 26/200\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 1/36\u001b[0m \u001b[37m━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m27s\u001b[0m 799ms/step - accuracy: 0.8847 - loss: 0.5806max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 2/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 787ms/step - accuracy: 0.8862 - loss: 0.5800max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 3/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 789ms/step - accuracy: 0.8852 - loss: 0.5862max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 4/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 787ms/step - accuracy: 0.8864 - loss: 0.5859max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 5/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 788ms/step - accuracy: 0.8875 - loss: 0.5859max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 6/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 786ms/step - accuracy: 0.8879 - loss: 0.5860max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 7/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 786ms/step - accuracy: 0.8884 - loss: 0.5858max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 8/36\u001b[0m \u001b[32m━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 787ms/step - accuracy: 0.8885 - loss: 0.5864max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 9/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 787ms/step - accuracy: 0.8886 - loss: 0.5867max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m10/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m20s\u001b[0m 787ms/step - accuracy: 0.8888 - loss: 0.5866max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m11/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 787ms/step - accuracy: 0.8890 - loss: 0.5861max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m12/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 787ms/step - accuracy: 0.8894 - loss: 0.5856max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m13/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 787ms/step - accuracy: 0.8898 - loss: 0.5848max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m14/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m17s\u001b[0m 787ms/step - accuracy: 0.8902 - loss: 0.5840max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m15/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m16s\u001b[0m 787ms/step - accuracy: 0.8907 - loss: 0.5832max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m16/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 787ms/step - accuracy: 0.8911 - loss: 0.5824max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m17/36\u001b[0m \u001b[32m━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 788ms/step - accuracy: 0.8914 - loss: 0.5818max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m18/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 787ms/step - accuracy: 0.8917 - loss: 0.5812max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m19/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m13s\u001b[0m 787ms/step - accuracy: 0.8919 - loss: 0.5807max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m20/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m12s\u001b[0m 787ms/step - accuracy: 0.8922 - loss: 0.5801max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m21/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 787ms/step - accuracy: 0.8925 - loss: 0.5794max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m22/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 787ms/step - accuracy: 0.8927 - loss: 0.5788max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m23/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m10s\u001b[0m 787ms/step - accuracy: 0.8929 - loss: 0.5783max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m24/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m9s\u001b[0m 787ms/step - accuracy: 0.8931 - loss: 0.5779 max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m25/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m8s\u001b[0m 787ms/step - accuracy: 0.8932 - loss: 0.5776max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m26/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━\u001b[0m \u001b[1m7s\u001b[0m 787ms/step - accuracy: 0.8934 - loss: 0.5772max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m27/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m7s\u001b[0m 787ms/step - accuracy: 0.8935 - loss: 0.5768max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m28/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m6s\u001b[0m 787ms/step - accuracy: 0.8936 - loss: 0.5765max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m29/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m5s\u001b[0m 787ms/step - accuracy: 0.8937 - loss: 0.5761max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m30/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m4s\u001b[0m 787ms/step - accuracy: 0.8938 - loss: 0.5758max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m31/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 787ms/step - accuracy: 0.8939 - loss: 0.5755max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m32/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 787ms/step - accuracy: 0.8941 - loss: 0.5752max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m33/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m2s\u001b[0m 787ms/step - accuracy: 0.8942 - loss: 0.5748max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m34/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m1s\u001b[0m 787ms/step - accuracy: 0.8942 - loss: 0.5745max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m35/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 787ms/step - accuracy: 0.8943 - loss: 0.5742max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 779ms/step - accuracy: 0.8944 - loss: 0.5739max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 807ms/step - accuracy: 0.8945 - loss: 0.5737 - val_accuracy: 0.8607 - val_loss: 0.6955 - learning_rate: 1.0000e-04\n",
      "Epoch 27/200\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 1/36\u001b[0m \u001b[37m━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m28s\u001b[0m 802ms/step - accuracy: 0.9085 - loss: 0.5278max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 2/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 784ms/step - accuracy: 0.8999 - loss: 0.5477max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 3/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 775ms/step - accuracy: 0.8967 - loss: 0.5570max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 4/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 777ms/step - accuracy: 0.8945 - loss: 0.5634max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 5/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 776ms/step - accuracy: 0.8932 - loss: 0.5684max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 6/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 777ms/step - accuracy: 0.8925 - loss: 0.5710max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 7/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 780ms/step - accuracy: 0.8921 - loss: 0.5729max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 8/36\u001b[0m \u001b[32m━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 780ms/step - accuracy: 0.8920 - loss: 0.5738max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 9/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m20s\u001b[0m 777ms/step - accuracy: 0.8920 - loss: 0.5742max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m10/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m20s\u001b[0m 777ms/step - accuracy: 0.8919 - loss: 0.5749max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m11/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 778ms/step - accuracy: 0.8919 - loss: 0.5753max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m12/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 778ms/step - accuracy: 0.8919 - loss: 0.5754max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m13/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m17s\u001b[0m 779ms/step - accuracy: 0.8920 - loss: 0.5753max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m14/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m17s\u001b[0m 779ms/step - accuracy: 0.8922 - loss: 0.5749max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m15/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m16s\u001b[0m 780ms/step - accuracy: 0.8924 - loss: 0.5744max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m16/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 779ms/step - accuracy: 0.8926 - loss: 0.5739max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m17/36\u001b[0m \u001b[32m━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 780ms/step - accuracy: 0.8927 - loss: 0.5735max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m18/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 780ms/step - accuracy: 0.8928 - loss: 0.5731max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m19/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m13s\u001b[0m 780ms/step - accuracy: 0.8929 - loss: 0.5729max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m20/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m12s\u001b[0m 780ms/step - accuracy: 0.8929 - loss: 0.5728max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m21/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 781ms/step - accuracy: 0.8930 - loss: 0.5726max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m22/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m10s\u001b[0m 780ms/step - accuracy: 0.8931 - loss: 0.5724max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m23/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m10s\u001b[0m 780ms/step - accuracy: 0.8932 - loss: 0.5723max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m24/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m9s\u001b[0m 781ms/step - accuracy: 0.8932 - loss: 0.5721 max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m25/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m8s\u001b[0m 781ms/step - accuracy: 0.8933 - loss: 0.5718max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m26/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━\u001b[0m \u001b[1m7s\u001b[0m 781ms/step - accuracy: 0.8933 - loss: 0.5717max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m27/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m7s\u001b[0m 781ms/step - accuracy: 0.8934 - loss: 0.5715max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m28/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m6s\u001b[0m 781ms/step - accuracy: 0.8935 - loss: 0.5713max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m29/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m5s\u001b[0m 781ms/step - accuracy: 0.8935 - loss: 0.5711max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m30/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m4s\u001b[0m 781ms/step - accuracy: 0.8936 - loss: 0.5708max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m31/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 781ms/step - accuracy: 0.8937 - loss: 0.5705max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m32/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 781ms/step - accuracy: 0.8938 - loss: 0.5702max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m33/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m2s\u001b[0m 781ms/step - accuracy: 0.8939 - loss: 0.5698max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m34/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m1s\u001b[0m 782ms/step - accuracy: 0.8940 - loss: 0.5695max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m35/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 782ms/step - accuracy: 0.8941 - loss: 0.5691max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 774ms/step - accuracy: 0.8942 - loss: 0.5687max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 805ms/step - accuracy: 0.8943 - loss: 0.5684 - val_accuracy: 0.8616 - val_loss: 0.6638 - learning_rate: 1.0000e-04\n",
      "Epoch 28/200\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 1/36\u001b[0m \u001b[37m━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m27s\u001b[0m 784ms/step - accuracy: 0.9140 - loss: 0.5008max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 2/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 783ms/step - accuracy: 0.9069 - loss: 0.5194max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 3/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 786ms/step - accuracy: 0.9060 - loss: 0.5228max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 4/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 785ms/step - accuracy: 0.9036 - loss: 0.5288max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 5/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 785ms/step - accuracy: 0.9024 - loss: 0.5316max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 6/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 786ms/step - accuracy: 0.9018 - loss: 0.5330max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 7/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 787ms/step - accuracy: 0.9018 - loss: 0.5336max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 8/36\u001b[0m \u001b[32m━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 786ms/step - accuracy: 0.9017 - loss: 0.5339max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 9/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 785ms/step - accuracy: 0.9018 - loss: 0.5339max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m10/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m20s\u001b[0m 784ms/step - accuracy: 0.9019 - loss: 0.5338max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m11/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 784ms/step - accuracy: 0.9020 - loss: 0.5334max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m12/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 785ms/step - accuracy: 0.9023 - loss: 0.5328max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m13/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 786ms/step - accuracy: 0.9026 - loss: 0.5321max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m14/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m17s\u001b[0m 786ms/step - accuracy: 0.9030 - loss: 0.5314max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m15/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m16s\u001b[0m 786ms/step - accuracy: 0.9031 - loss: 0.5311max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m16/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 787ms/step - accuracy: 0.9032 - loss: 0.5308max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m17/36\u001b[0m \u001b[32m━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 787ms/step - accuracy: 0.9034 - loss: 0.5305max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m18/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 787ms/step - accuracy: 0.9035 - loss: 0.5301max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m19/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m13s\u001b[0m 787ms/step - accuracy: 0.9036 - loss: 0.5297max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m20/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m12s\u001b[0m 787ms/step - accuracy: 0.9037 - loss: 0.5294max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m21/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 787ms/step - accuracy: 0.9039 - loss: 0.5291max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m22/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 786ms/step - accuracy: 0.9040 - loss: 0.5288max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m23/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m10s\u001b[0m 786ms/step - accuracy: 0.9040 - loss: 0.5284max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m24/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m9s\u001b[0m 786ms/step - accuracy: 0.9042 - loss: 0.5281 max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m25/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m8s\u001b[0m 786ms/step - accuracy: 0.9043 - loss: 0.5277max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m26/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━\u001b[0m \u001b[1m7s\u001b[0m 786ms/step - accuracy: 0.9044 - loss: 0.5273max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m27/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m7s\u001b[0m 787ms/step - accuracy: 0.9045 - loss: 0.5270max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m28/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m6s\u001b[0m 787ms/step - accuracy: 0.9046 - loss: 0.5267max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m29/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m5s\u001b[0m 787ms/step - accuracy: 0.9047 - loss: 0.5264max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m30/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m4s\u001b[0m 787ms/step - accuracy: 0.9048 - loss: 0.5261max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m31/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 787ms/step - accuracy: 0.9049 - loss: 0.5258max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m32/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 787ms/step - accuracy: 0.9050 - loss: 0.5255max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m33/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m2s\u001b[0m 787ms/step - accuracy: 0.9051 - loss: 0.5252max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m34/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m1s\u001b[0m 787ms/step - accuracy: 0.9052 - loss: 0.5249max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m35/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 787ms/step - accuracy: 0.9053 - loss: 0.5246max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 779ms/step - accuracy: 0.9054 - loss: 0.5243max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 810ms/step - accuracy: 0.9054 - loss: 0.5240 - val_accuracy: 0.8733 - val_loss: 0.6374 - learning_rate: 1.0000e-04\n",
      "Epoch 29/200\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 1/36\u001b[0m \u001b[37m━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m27s\u001b[0m 799ms/step - accuracy: 0.9186 - loss: 0.4781max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 2/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 779ms/step - accuracy: 0.9185 - loss: 0.4877max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 3/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 782ms/step - accuracy: 0.9165 - loss: 0.4948max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 4/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 785ms/step - accuracy: 0.9158 - loss: 0.4975max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 5/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 785ms/step - accuracy: 0.9146 - loss: 0.4996max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 6/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 784ms/step - accuracy: 0.9139 - loss: 0.5012max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 7/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 786ms/step - accuracy: 0.9134 - loss: 0.5020max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 8/36\u001b[0m \u001b[32m━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 788ms/step - accuracy: 0.9127 - loss: 0.5030max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 9/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 789ms/step - accuracy: 0.9124 - loss: 0.5036max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m10/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m20s\u001b[0m 789ms/step - accuracy: 0.9120 - loss: 0.5042max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m11/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 789ms/step - accuracy: 0.9115 - loss: 0.5051max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m12/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 789ms/step - accuracy: 0.9111 - loss: 0.5057max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m13/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 790ms/step - accuracy: 0.9108 - loss: 0.5062max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m14/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m17s\u001b[0m 789ms/step - accuracy: 0.9105 - loss: 0.5065max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m15/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m16s\u001b[0m 790ms/step - accuracy: 0.9103 - loss: 0.5068max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m16/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 790ms/step - accuracy: 0.9101 - loss: 0.5071max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m17/36\u001b[0m \u001b[32m━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 790ms/step - accuracy: 0.9099 - loss: 0.5073max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m18/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 790ms/step - accuracy: 0.9097 - loss: 0.5074max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m19/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m13s\u001b[0m 790ms/step - accuracy: 0.9096 - loss: 0.5075max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m20/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m12s\u001b[0m 790ms/step - accuracy: 0.9095 - loss: 0.5075max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m21/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 790ms/step - accuracy: 0.9094 - loss: 0.5075max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m22/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 790ms/step - accuracy: 0.9094 - loss: 0.5075max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m23/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m10s\u001b[0m 790ms/step - accuracy: 0.9094 - loss: 0.5074max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m24/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m9s\u001b[0m 791ms/step - accuracy: 0.9093 - loss: 0.5073 max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m25/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m8s\u001b[0m 791ms/step - accuracy: 0.9093 - loss: 0.5073max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m26/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━\u001b[0m \u001b[1m7s\u001b[0m 791ms/step - accuracy: 0.9093 - loss: 0.5072max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m27/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m7s\u001b[0m 792ms/step - accuracy: 0.9093 - loss: 0.5072max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m28/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m6s\u001b[0m 791ms/step - accuracy: 0.9093 - loss: 0.5071max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m29/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m5s\u001b[0m 792ms/step - accuracy: 0.9093 - loss: 0.5070max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m30/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m4s\u001b[0m 793ms/step - accuracy: 0.9093 - loss: 0.5069max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m31/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 793ms/step - accuracy: 0.9094 - loss: 0.5068max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m32/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 793ms/step - accuracy: 0.9094 - loss: 0.5066max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m33/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m2s\u001b[0m 794ms/step - accuracy: 0.9094 - loss: 0.5065max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m34/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m1s\u001b[0m 794ms/step - accuracy: 0.9095 - loss: 0.5063max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m35/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 794ms/step - accuracy: 0.9095 - loss: 0.5062max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 786ms/step - accuracy: 0.9095 - loss: 0.5061max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 817ms/step - accuracy: 0.9096 - loss: 0.5059 - val_accuracy: 0.8598 - val_loss: 0.6865 - learning_rate: 1.0000e-04\n",
      "Epoch 30/200\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 1/36\u001b[0m \u001b[37m━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m28s\u001b[0m 808ms/step - accuracy: 0.9147 - loss: 0.5012max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 2/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 794ms/step - accuracy: 0.9174 - loss: 0.4915max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 3/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 792ms/step - accuracy: 0.9158 - loss: 0.4928max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 4/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 794ms/step - accuracy: 0.9156 - loss: 0.4918max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 5/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 794ms/step - accuracy: 0.9150 - loss: 0.4919max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 6/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 794ms/step - accuracy: 0.9145 - loss: 0.4919max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 7/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 794ms/step - accuracy: 0.9145 - loss: 0.4912max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 8/36\u001b[0m \u001b[32m━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 794ms/step - accuracy: 0.9146 - loss: 0.4904max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 9/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 793ms/step - accuracy: 0.9147 - loss: 0.4895max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m10/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m20s\u001b[0m 794ms/step - accuracy: 0.9147 - loss: 0.4891max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m11/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 795ms/step - accuracy: 0.9146 - loss: 0.4888max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m12/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 796ms/step - accuracy: 0.9146 - loss: 0.4884max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m13/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 797ms/step - accuracy: 0.9146 - loss: 0.4879max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m14/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m17s\u001b[0m 797ms/step - accuracy: 0.9147 - loss: 0.4873max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m15/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m16s\u001b[0m 797ms/step - accuracy: 0.9148 - loss: 0.4866max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m16/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 798ms/step - accuracy: 0.9149 - loss: 0.4860max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m17/36\u001b[0m \u001b[32m━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 798ms/step - accuracy: 0.9149 - loss: 0.4854max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m18/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 798ms/step - accuracy: 0.9149 - loss: 0.4850max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m19/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m13s\u001b[0m 798ms/step - accuracy: 0.9149 - loss: 0.4846max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m20/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m12s\u001b[0m 798ms/step - accuracy: 0.9149 - loss: 0.4843max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m21/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 797ms/step - accuracy: 0.9149 - loss: 0.4840max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m22/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 797ms/step - accuracy: 0.9149 - loss: 0.4839max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m23/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m10s\u001b[0m 796ms/step - accuracy: 0.9148 - loss: 0.4838max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m24/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m9s\u001b[0m 796ms/step - accuracy: 0.9148 - loss: 0.4836 max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m25/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m8s\u001b[0m 796ms/step - accuracy: 0.9147 - loss: 0.4836max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m26/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━\u001b[0m \u001b[1m7s\u001b[0m 796ms/step - accuracy: 0.9147 - loss: 0.4835max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m27/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m7s\u001b[0m 796ms/step - accuracy: 0.9147 - loss: 0.4834max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m28/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m6s\u001b[0m 796ms/step - accuracy: 0.9147 - loss: 0.4833max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m29/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m5s\u001b[0m 797ms/step - accuracy: 0.9146 - loss: 0.4833max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m30/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m4s\u001b[0m 797ms/step - accuracy: 0.9146 - loss: 0.4833max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m31/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 797ms/step - accuracy: 0.9145 - loss: 0.4833max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m32/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 797ms/step - accuracy: 0.9145 - loss: 0.4833max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m33/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m2s\u001b[0m 797ms/step - accuracy: 0.9145 - loss: 0.4832max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m34/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m1s\u001b[0m 796ms/step - accuracy: 0.9145 - loss: 0.4832max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m35/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 797ms/step - accuracy: 0.9145 - loss: 0.4831max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 788ms/step - accuracy: 0.9145 - loss: 0.4830max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      " Saved checkpoint: checkpoints/segnet_epoch_030_vloss_0.6075.h5\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m30s\u001b[0m 837ms/step - accuracy: 0.9145 - loss: 0.4830 - val_accuracy: 0.8773 - val_loss: 0.6075 - learning_rate: 1.0000e-04\n",
      "Epoch 31/200\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 1/36\u001b[0m \u001b[37m━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m28s\u001b[0m 807ms/step - accuracy: 0.9147 - loss: 0.4618max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 2/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m27s\u001b[0m 806ms/step - accuracy: 0.9131 - loss: 0.4712max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 3/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 795ms/step - accuracy: 0.9126 - loss: 0.4739max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 4/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 796ms/step - accuracy: 0.9109 - loss: 0.4791max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 5/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 794ms/step - accuracy: 0.9106 - loss: 0.4805max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 6/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 797ms/step - accuracy: 0.9106 - loss: 0.4808max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 7/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 796ms/step - accuracy: 0.9107 - loss: 0.4810max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 8/36\u001b[0m \u001b[32m━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 795ms/step - accuracy: 0.9109 - loss: 0.4810max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 9/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 794ms/step - accuracy: 0.9111 - loss: 0.4806max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m10/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m20s\u001b[0m 794ms/step - accuracy: 0.9114 - loss: 0.4802max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m11/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 793ms/step - accuracy: 0.9117 - loss: 0.4796max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m12/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 794ms/step - accuracy: 0.9119 - loss: 0.4790max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m13/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 795ms/step - accuracy: 0.9121 - loss: 0.4785max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m14/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m17s\u001b[0m 794ms/step - accuracy: 0.9124 - loss: 0.4780max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m15/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m16s\u001b[0m 793ms/step - accuracy: 0.9125 - loss: 0.4777max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m16/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 793ms/step - accuracy: 0.9127 - loss: 0.4774max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m17/36\u001b[0m \u001b[32m━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 793ms/step - accuracy: 0.9128 - loss: 0.4770max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m18/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 793ms/step - accuracy: 0.9129 - loss: 0.4769max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m19/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m13s\u001b[0m 795ms/step - accuracy: 0.9131 - loss: 0.4767max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m20/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m12s\u001b[0m 794ms/step - accuracy: 0.9132 - loss: 0.4766max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m21/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 795ms/step - accuracy: 0.9133 - loss: 0.4764max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m22/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 795ms/step - accuracy: 0.9133 - loss: 0.4763max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m23/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m10s\u001b[0m 796ms/step - accuracy: 0.9134 - loss: 0.4761max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m24/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m9s\u001b[0m 796ms/step - accuracy: 0.9135 - loss: 0.4759 max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m25/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m8s\u001b[0m 796ms/step - accuracy: 0.9136 - loss: 0.4758max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m26/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━\u001b[0m \u001b[1m7s\u001b[0m 796ms/step - accuracy: 0.9137 - loss: 0.4756max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m27/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m7s\u001b[0m 796ms/step - accuracy: 0.9137 - loss: 0.4755max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m28/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m6s\u001b[0m 796ms/step - accuracy: 0.9138 - loss: 0.4754max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m29/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m5s\u001b[0m 796ms/step - accuracy: 0.9138 - loss: 0.4754max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m30/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m4s\u001b[0m 795ms/step - accuracy: 0.9139 - loss: 0.4753max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m31/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 795ms/step - accuracy: 0.9139 - loss: 0.4752max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m32/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 795ms/step - accuracy: 0.9140 - loss: 0.4751max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m33/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m2s\u001b[0m 795ms/step - accuracy: 0.9140 - loss: 0.4749max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m34/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m1s\u001b[0m 796ms/step - accuracy: 0.9141 - loss: 0.4748max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m35/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 797ms/step - accuracy: 0.9141 - loss: 0.4746max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 789ms/step - accuracy: 0.9142 - loss: 0.4745max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 819ms/step - accuracy: 0.9142 - loss: 0.4744 - val_accuracy: 0.8740 - val_loss: 0.6251 - learning_rate: 1.0000e-04\n",
      "Epoch 32/200\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 1/36\u001b[0m \u001b[37m━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m28s\u001b[0m 804ms/step - accuracy: 0.9003 - loss: 0.4990max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 2/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 793ms/step - accuracy: 0.8983 - loss: 0.5022max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 3/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 793ms/step - accuracy: 0.8998 - loss: 0.4982max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 4/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 792ms/step - accuracy: 0.9013 - loss: 0.4957max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 5/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 789ms/step - accuracy: 0.9018 - loss: 0.4947max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 6/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 788ms/step - accuracy: 0.9028 - loss: 0.4932max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 7/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 787ms/step - accuracy: 0.9037 - loss: 0.4916max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 8/36\u001b[0m \u001b[32m━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 786ms/step - accuracy: 0.9045 - loss: 0.4904max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 9/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 787ms/step - accuracy: 0.9052 - loss: 0.4892max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m10/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m20s\u001b[0m 787ms/step - accuracy: 0.9059 - loss: 0.4878max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m11/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 787ms/step - accuracy: 0.9066 - loss: 0.4863max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m12/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 785ms/step - accuracy: 0.9071 - loss: 0.4850max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m13/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 785ms/step - accuracy: 0.9076 - loss: 0.4839max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m14/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m17s\u001b[0m 785ms/step - accuracy: 0.9079 - loss: 0.4830max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m15/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m16s\u001b[0m 785ms/step - accuracy: 0.9083 - loss: 0.4822max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m16/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 785ms/step - accuracy: 0.9087 - loss: 0.4812max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m17/36\u001b[0m \u001b[32m━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 786ms/step - accuracy: 0.9090 - loss: 0.4805max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m18/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 786ms/step - accuracy: 0.9092 - loss: 0.4797max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m19/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m13s\u001b[0m 786ms/step - accuracy: 0.9095 - loss: 0.4790max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m20/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m12s\u001b[0m 786ms/step - accuracy: 0.9098 - loss: 0.4783max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m21/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 786ms/step - accuracy: 0.9100 - loss: 0.4776max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m22/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 786ms/step - accuracy: 0.9103 - loss: 0.4770max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m23/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m10s\u001b[0m 785ms/step - accuracy: 0.9105 - loss: 0.4763max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m24/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m9s\u001b[0m 785ms/step - accuracy: 0.9108 - loss: 0.4756 max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m25/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m8s\u001b[0m 785ms/step - accuracy: 0.9110 - loss: 0.4750max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m26/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━\u001b[0m \u001b[1m7s\u001b[0m 785ms/step - accuracy: 0.9112 - loss: 0.4744max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m27/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m7s\u001b[0m 785ms/step - accuracy: 0.9114 - loss: 0.4738max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m28/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m6s\u001b[0m 785ms/step - accuracy: 0.9116 - loss: 0.4732max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m29/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m5s\u001b[0m 786ms/step - accuracy: 0.9119 - loss: 0.4725max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m30/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m4s\u001b[0m 786ms/step - accuracy: 0.9121 - loss: 0.4719max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m31/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 787ms/step - accuracy: 0.9123 - loss: 0.4713max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m32/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 787ms/step - accuracy: 0.9125 - loss: 0.4708max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m33/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m2s\u001b[0m 787ms/step - accuracy: 0.9127 - loss: 0.4702max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m34/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m1s\u001b[0m 788ms/step - accuracy: 0.9129 - loss: 0.4696max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m35/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 788ms/step - accuracy: 0.9131 - loss: 0.4691max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 780ms/step - accuracy: 0.9132 - loss: 0.4686max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 813ms/step - accuracy: 0.9134 - loss: 0.4682 - val_accuracy: 0.8792 - val_loss: 0.5828 - learning_rate: 1.0000e-04\n",
      "Epoch 33/200\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 1/36\u001b[0m \u001b[37m━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m28s\u001b[0m 806ms/step - accuracy: 0.9221 - loss: 0.4433max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 2/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 793ms/step - accuracy: 0.9247 - loss: 0.4384max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 3/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 796ms/step - accuracy: 0.9262 - loss: 0.4340max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 4/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 796ms/step - accuracy: 0.9267 - loss: 0.4315max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 5/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 799ms/step - accuracy: 0.9268 - loss: 0.4309max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 6/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 799ms/step - accuracy: 0.9258 - loss: 0.4332max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 7/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 799ms/step - accuracy: 0.9250 - loss: 0.4348max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 8/36\u001b[0m \u001b[32m━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 801ms/step - accuracy: 0.9246 - loss: 0.4357max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 9/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 800ms/step - accuracy: 0.9243 - loss: 0.4365max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m10/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m20s\u001b[0m 798ms/step - accuracy: 0.9240 - loss: 0.4374max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m11/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 799ms/step - accuracy: 0.9238 - loss: 0.4382max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m12/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 799ms/step - accuracy: 0.9235 - loss: 0.4390max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m13/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 799ms/step - accuracy: 0.9233 - loss: 0.4396max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m14/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m17s\u001b[0m 798ms/step - accuracy: 0.9231 - loss: 0.4402max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m15/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m16s\u001b[0m 798ms/step - accuracy: 0.9228 - loss: 0.4407max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m16/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 797ms/step - accuracy: 0.9227 - loss: 0.4410max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m17/36\u001b[0m \u001b[32m━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 797ms/step - accuracy: 0.9225 - loss: 0.4413max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m18/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 797ms/step - accuracy: 0.9224 - loss: 0.4415max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m19/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m13s\u001b[0m 797ms/step - accuracy: 0.9223 - loss: 0.4417max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m20/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m12s\u001b[0m 797ms/step - accuracy: 0.9222 - loss: 0.4420max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m21/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 797ms/step - accuracy: 0.9221 - loss: 0.4423max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m22/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 797ms/step - accuracy: 0.9219 - loss: 0.4425max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m23/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m10s\u001b[0m 796ms/step - accuracy: 0.9218 - loss: 0.4427max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m24/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m9s\u001b[0m 796ms/step - accuracy: 0.9217 - loss: 0.4429 max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m25/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m8s\u001b[0m 796ms/step - accuracy: 0.9216 - loss: 0.4431max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m26/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━\u001b[0m \u001b[1m7s\u001b[0m 795ms/step - accuracy: 0.9215 - loss: 0.4432max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m27/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m7s\u001b[0m 796ms/step - accuracy: 0.9214 - loss: 0.4433max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m28/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m6s\u001b[0m 796ms/step - accuracy: 0.9213 - loss: 0.4434max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m29/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m5s\u001b[0m 796ms/step - accuracy: 0.9212 - loss: 0.4436max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m30/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m4s\u001b[0m 796ms/step - accuracy: 0.9211 - loss: 0.4437max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m31/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 796ms/step - accuracy: 0.9211 - loss: 0.4438max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m32/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 796ms/step - accuracy: 0.9210 - loss: 0.4440max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m33/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m2s\u001b[0m 795ms/step - accuracy: 0.9209 - loss: 0.4441max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m34/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m1s\u001b[0m 795ms/step - accuracy: 0.9208 - loss: 0.4442max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m35/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 796ms/step - accuracy: 0.9207 - loss: 0.4443max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 787ms/step - accuracy: 0.9207 - loss: 0.4444max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 818ms/step - accuracy: 0.9206 - loss: 0.4444 - val_accuracy: 0.8734 - val_loss: 0.6065 - learning_rate: 1.0000e-04\n",
      "Epoch 34/200\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 1/36\u001b[0m \u001b[37m━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m28s\u001b[0m 809ms/step - accuracy: 0.9007 - loss: 0.4756max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 2/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m27s\u001b[0m 801ms/step - accuracy: 0.9062 - loss: 0.4644max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 3/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 798ms/step - accuracy: 0.9106 - loss: 0.4539max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 4/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 800ms/step - accuracy: 0.9127 - loss: 0.4486max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 5/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 800ms/step - accuracy: 0.9142 - loss: 0.4453max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 6/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 801ms/step - accuracy: 0.9154 - loss: 0.4425max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 7/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 801ms/step - accuracy: 0.9158 - loss: 0.4419max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 8/36\u001b[0m \u001b[32m━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 800ms/step - accuracy: 0.9161 - loss: 0.4415max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 9/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 801ms/step - accuracy: 0.9160 - loss: 0.4419max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m10/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m20s\u001b[0m 802ms/step - accuracy: 0.9159 - loss: 0.4423max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m11/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m20s\u001b[0m 802ms/step - accuracy: 0.9160 - loss: 0.4424max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m12/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 802ms/step - accuracy: 0.9160 - loss: 0.4427max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m13/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 803ms/step - accuracy: 0.9160 - loss: 0.4428max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m14/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m17s\u001b[0m 803ms/step - accuracy: 0.9161 - loss: 0.4427max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m15/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m16s\u001b[0m 803ms/step - accuracy: 0.9162 - loss: 0.4428max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m16/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m16s\u001b[0m 804ms/step - accuracy: 0.9163 - loss: 0.4428max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m17/36\u001b[0m \u001b[32m━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 804ms/step - accuracy: 0.9164 - loss: 0.4428max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m18/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 804ms/step - accuracy: 0.9164 - loss: 0.4430max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m19/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m13s\u001b[0m 803ms/step - accuracy: 0.9164 - loss: 0.4431max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m20/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m12s\u001b[0m 803ms/step - accuracy: 0.9165 - loss: 0.4432max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m21/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m12s\u001b[0m 802ms/step - accuracy: 0.9166 - loss: 0.4432max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m22/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 802ms/step - accuracy: 0.9166 - loss: 0.4432max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m23/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m10s\u001b[0m 802ms/step - accuracy: 0.9167 - loss: 0.4431max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m24/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m9s\u001b[0m 802ms/step - accuracy: 0.9168 - loss: 0.4430 max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m25/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m8s\u001b[0m 802ms/step - accuracy: 0.9169 - loss: 0.4430max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m26/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━\u001b[0m \u001b[1m8s\u001b[0m 801ms/step - accuracy: 0.9170 - loss: 0.4428max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m27/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m7s\u001b[0m 800ms/step - accuracy: 0.9171 - loss: 0.4427max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m28/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m6s\u001b[0m 801ms/step - accuracy: 0.9171 - loss: 0.4426max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m29/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m5s\u001b[0m 800ms/step - accuracy: 0.9172 - loss: 0.4425max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m30/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m4s\u001b[0m 801ms/step - accuracy: 0.9173 - loss: 0.4424max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m31/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m4s\u001b[0m 800ms/step - accuracy: 0.9173 - loss: 0.4423max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m32/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 801ms/step - accuracy: 0.9174 - loss: 0.4422max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m33/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m2s\u001b[0m 801ms/step - accuracy: 0.9175 - loss: 0.4421max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m34/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m1s\u001b[0m 800ms/step - accuracy: 0.9176 - loss: 0.4420max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m35/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 800ms/step - accuracy: 0.9176 - loss: 0.4419max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 792ms/step - accuracy: 0.9176 - loss: 0.4419max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m30s\u001b[0m 823ms/step - accuracy: 0.9177 - loss: 0.4418 - val_accuracy: 0.8820 - val_loss: 0.5708 - learning_rate: 1.0000e-04\n",
      "Epoch 35/200\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 1/36\u001b[0m \u001b[37m━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m28s\u001b[0m 803ms/step - accuracy: 0.9313 - loss: 0.4166max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 2/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 792ms/step - accuracy: 0.9199 - loss: 0.4447max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 3/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 791ms/step - accuracy: 0.9175 - loss: 0.4491max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 4/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 791ms/step - accuracy: 0.9164 - loss: 0.4498max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 5/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 791ms/step - accuracy: 0.9159 - loss: 0.4500max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 6/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 790ms/step - accuracy: 0.9159 - loss: 0.4491max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 7/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 788ms/step - accuracy: 0.9162 - loss: 0.4475max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 8/36\u001b[0m \u001b[32m━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 789ms/step - accuracy: 0.9164 - loss: 0.4465max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 9/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 789ms/step - accuracy: 0.9165 - loss: 0.4459max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m10/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m20s\u001b[0m 789ms/step - accuracy: 0.9166 - loss: 0.4452max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m11/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 789ms/step - accuracy: 0.9167 - loss: 0.4448max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m12/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 789ms/step - accuracy: 0.9168 - loss: 0.4441max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m13/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 788ms/step - accuracy: 0.9170 - loss: 0.4434max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m14/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m17s\u001b[0m 788ms/step - accuracy: 0.9171 - loss: 0.4429max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m15/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m16s\u001b[0m 787ms/step - accuracy: 0.9173 - loss: 0.4423max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m16/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 787ms/step - accuracy: 0.9174 - loss: 0.4417max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m17/36\u001b[0m \u001b[32m━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 786ms/step - accuracy: 0.9176 - loss: 0.4411max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m18/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 786ms/step - accuracy: 0.9178 - loss: 0.4406max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m19/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m13s\u001b[0m 786ms/step - accuracy: 0.9179 - loss: 0.4400max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m20/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m12s\u001b[0m 785ms/step - accuracy: 0.9181 - loss: 0.4396max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m21/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 785ms/step - accuracy: 0.9182 - loss: 0.4391max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m22/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m10s\u001b[0m 785ms/step - accuracy: 0.9183 - loss: 0.4387max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m23/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m10s\u001b[0m 785ms/step - accuracy: 0.9184 - loss: 0.4384max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m24/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m9s\u001b[0m 785ms/step - accuracy: 0.9185 - loss: 0.4380 max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m25/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m8s\u001b[0m 785ms/step - accuracy: 0.9186 - loss: 0.4377max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m26/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━\u001b[0m \u001b[1m7s\u001b[0m 785ms/step - accuracy: 0.9186 - loss: 0.4374max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m27/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m7s\u001b[0m 785ms/step - accuracy: 0.9187 - loss: 0.4372max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m28/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m6s\u001b[0m 785ms/step - accuracy: 0.9188 - loss: 0.4370max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m29/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m5s\u001b[0m 784ms/step - accuracy: 0.9188 - loss: 0.4368max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m30/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m4s\u001b[0m 784ms/step - accuracy: 0.9189 - loss: 0.4365max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m31/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 784ms/step - accuracy: 0.9189 - loss: 0.4364max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m32/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 784ms/step - accuracy: 0.9190 - loss: 0.4362max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m33/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m2s\u001b[0m 784ms/step - accuracy: 0.9190 - loss: 0.4360max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m34/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m1s\u001b[0m 784ms/step - accuracy: 0.9191 - loss: 0.4358max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m35/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 784ms/step - accuracy: 0.9191 - loss: 0.4356max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 775ms/step - accuracy: 0.9192 - loss: 0.4355max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 805ms/step - accuracy: 0.9192 - loss: 0.4353 - val_accuracy: 0.8732 - val_loss: 0.6040 - learning_rate: 1.0000e-04\n",
      "Epoch 36/200\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 1/36\u001b[0m \u001b[37m━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m28s\u001b[0m 807ms/step - accuracy: 0.9254 - loss: 0.4028max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 2/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 793ms/step - accuracy: 0.9273 - loss: 0.3995max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 3/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 794ms/step - accuracy: 0.9265 - loss: 0.4035max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 4/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 792ms/step - accuracy: 0.9259 - loss: 0.4058max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 5/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 794ms/step - accuracy: 0.9248 - loss: 0.4095max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 6/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 794ms/step - accuracy: 0.9240 - loss: 0.4123max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 7/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 795ms/step - accuracy: 0.9234 - loss: 0.4144max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 8/36\u001b[0m \u001b[32m━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 796ms/step - accuracy: 0.9232 - loss: 0.4155max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 9/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 796ms/step - accuracy: 0.9229 - loss: 0.4164max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m10/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m20s\u001b[0m 796ms/step - accuracy: 0.9226 - loss: 0.4173max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m11/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 796ms/step - accuracy: 0.9224 - loss: 0.4181max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m12/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 795ms/step - accuracy: 0.9223 - loss: 0.4186max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m13/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 794ms/step - accuracy: 0.9221 - loss: 0.4190max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m14/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m17s\u001b[0m 794ms/step - accuracy: 0.9219 - loss: 0.4195max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m15/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m16s\u001b[0m 794ms/step - accuracy: 0.9218 - loss: 0.4199max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m16/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 794ms/step - accuracy: 0.9216 - loss: 0.4203max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m17/36\u001b[0m \u001b[32m━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 794ms/step - accuracy: 0.9215 - loss: 0.4207max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m18/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 795ms/step - accuracy: 0.9213 - loss: 0.4211max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m19/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m13s\u001b[0m 795ms/step - accuracy: 0.9212 - loss: 0.4214max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m20/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m12s\u001b[0m 795ms/step - accuracy: 0.9211 - loss: 0.4218max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m21/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 795ms/step - accuracy: 0.9209 - loss: 0.4223max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m22/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 795ms/step - accuracy: 0.9208 - loss: 0.4226max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m23/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m10s\u001b[0m 795ms/step - accuracy: 0.9207 - loss: 0.4228max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m24/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m9s\u001b[0m 795ms/step - accuracy: 0.9206 - loss: 0.4230 max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m25/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m8s\u001b[0m 794ms/step - accuracy: 0.9206 - loss: 0.4231max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m26/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━\u001b[0m \u001b[1m7s\u001b[0m 794ms/step - accuracy: 0.9206 - loss: 0.4232max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m27/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m7s\u001b[0m 794ms/step - accuracy: 0.9205 - loss: 0.4233max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m28/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m6s\u001b[0m 794ms/step - accuracy: 0.9205 - loss: 0.4233max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m29/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m5s\u001b[0m 793ms/step - accuracy: 0.9205 - loss: 0.4234max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m30/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m4s\u001b[0m 793ms/step - accuracy: 0.9205 - loss: 0.4235max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m31/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 793ms/step - accuracy: 0.9205 - loss: 0.4235max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m32/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 793ms/step - accuracy: 0.9205 - loss: 0.4234max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m33/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m2s\u001b[0m 793ms/step - accuracy: 0.9205 - loss: 0.4234max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m34/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m1s\u001b[0m 793ms/step - accuracy: 0.9205 - loss: 0.4233max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m35/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 793ms/step - accuracy: 0.9206 - loss: 0.4233max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 785ms/step - accuracy: 0.9206 - loss: 0.4233max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 816ms/step - accuracy: 0.9206 - loss: 0.4232 - val_accuracy: 0.8782 - val_loss: 0.5713 - learning_rate: 1.0000e-04\n",
      "Epoch 37/200\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 1/36\u001b[0m \u001b[37m━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m28s\u001b[0m 805ms/step - accuracy: 0.9252 - loss: 0.4121max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 2/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 790ms/step - accuracy: 0.9213 - loss: 0.4208max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 3/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 794ms/step - accuracy: 0.9201 - loss: 0.4228max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 4/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 794ms/step - accuracy: 0.9187 - loss: 0.4256max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 5/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 796ms/step - accuracy: 0.9182 - loss: 0.4266max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 6/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 791ms/step - accuracy: 0.9182 - loss: 0.4264max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 7/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 790ms/step - accuracy: 0.9183 - loss: 0.4261max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 8/36\u001b[0m \u001b[32m━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 790ms/step - accuracy: 0.9182 - loss: 0.4263max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 9/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 791ms/step - accuracy: 0.9179 - loss: 0.4268max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m10/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m20s\u001b[0m 791ms/step - accuracy: 0.9177 - loss: 0.4272max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m11/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 791ms/step - accuracy: 0.9175 - loss: 0.4273max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m12/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 791ms/step - accuracy: 0.9174 - loss: 0.4276max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m13/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 791ms/step - accuracy: 0.9174 - loss: 0.4276max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m14/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m17s\u001b[0m 791ms/step - accuracy: 0.9174 - loss: 0.4275max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m15/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m16s\u001b[0m 791ms/step - accuracy: 0.9174 - loss: 0.4276max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m16/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 791ms/step - accuracy: 0.9174 - loss: 0.4276max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m17/36\u001b[0m \u001b[32m━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 790ms/step - accuracy: 0.9174 - loss: 0.4275max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m18/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 790ms/step - accuracy: 0.9174 - loss: 0.4276max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m19/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m13s\u001b[0m 790ms/step - accuracy: 0.9174 - loss: 0.4276max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m20/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m12s\u001b[0m 789ms/step - accuracy: 0.9174 - loss: 0.4276max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m21/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 788ms/step - accuracy: 0.9174 - loss: 0.4276max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m22/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 788ms/step - accuracy: 0.9174 - loss: 0.4276max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m23/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m10s\u001b[0m 788ms/step - accuracy: 0.9174 - loss: 0.4276max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m24/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m9s\u001b[0m 788ms/step - accuracy: 0.9174 - loss: 0.4275 max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m25/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m8s\u001b[0m 787ms/step - accuracy: 0.9175 - loss: 0.4274max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m26/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━\u001b[0m \u001b[1m7s\u001b[0m 787ms/step - accuracy: 0.9175 - loss: 0.4273max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m27/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m7s\u001b[0m 787ms/step - accuracy: 0.9175 - loss: 0.4273max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m28/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m6s\u001b[0m 787ms/step - accuracy: 0.9176 - loss: 0.4272max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m29/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m5s\u001b[0m 787ms/step - accuracy: 0.9176 - loss: 0.4271max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m30/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m4s\u001b[0m 787ms/step - accuracy: 0.9176 - loss: 0.4269max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m31/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 787ms/step - accuracy: 0.9177 - loss: 0.4269max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m32/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 787ms/step - accuracy: 0.9177 - loss: 0.4267max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m33/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m2s\u001b[0m 787ms/step - accuracy: 0.9177 - loss: 0.4266max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m34/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m1s\u001b[0m 787ms/step - accuracy: 0.9178 - loss: 0.4265max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m35/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 787ms/step - accuracy: 0.9178 - loss: 0.4264max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 779ms/step - accuracy: 0.9178 - loss: 0.4262max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 809ms/step - accuracy: 0.9179 - loss: 0.4261 - val_accuracy: 0.8644 - val_loss: 0.6413 - learning_rate: 1.0000e-04\n",
      "Epoch 38/200\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 1/36\u001b[0m \u001b[37m━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m28s\u001b[0m 809ms/step - accuracy: 0.9278 - loss: 0.3961max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 2/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 789ms/step - accuracy: 0.9290 - loss: 0.3921max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 3/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 791ms/step - accuracy: 0.9292 - loss: 0.3916max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 4/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 799ms/step - accuracy: 0.9300 - loss: 0.3898max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 5/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 800ms/step - accuracy: 0.9307 - loss: 0.3883max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 6/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 800ms/step - accuracy: 0.9310 - loss: 0.3877max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 7/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 800ms/step - accuracy: 0.9306 - loss: 0.3886max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 8/36\u001b[0m \u001b[32m━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 800ms/step - accuracy: 0.9301 - loss: 0.3897max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 9/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 799ms/step - accuracy: 0.9296 - loss: 0.3905max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m10/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m20s\u001b[0m 799ms/step - accuracy: 0.9292 - loss: 0.3914max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m11/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 799ms/step - accuracy: 0.9287 - loss: 0.3923max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m12/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 799ms/step - accuracy: 0.9284 - loss: 0.3928max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m13/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 798ms/step - accuracy: 0.9282 - loss: 0.3931max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m14/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m17s\u001b[0m 798ms/step - accuracy: 0.9281 - loss: 0.3933max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m15/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m16s\u001b[0m 799ms/step - accuracy: 0.9279 - loss: 0.3934max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m16/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 799ms/step - accuracy: 0.9278 - loss: 0.3936max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m17/36\u001b[0m \u001b[32m━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 800ms/step - accuracy: 0.9277 - loss: 0.3938max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m18/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 800ms/step - accuracy: 0.9276 - loss: 0.3941max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m19/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m13s\u001b[0m 800ms/step - accuracy: 0.9275 - loss: 0.3943max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m20/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m12s\u001b[0m 800ms/step - accuracy: 0.9274 - loss: 0.3945max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m21/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m12s\u001b[0m 801ms/step - accuracy: 0.9274 - loss: 0.3946max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m22/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 800ms/step - accuracy: 0.9273 - loss: 0.3947max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m23/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m10s\u001b[0m 799ms/step - accuracy: 0.9273 - loss: 0.3948max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m24/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m9s\u001b[0m 799ms/step - accuracy: 0.9272 - loss: 0.3949 max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m25/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m8s\u001b[0m 799ms/step - accuracy: 0.9271 - loss: 0.3950max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m26/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━\u001b[0m \u001b[1m7s\u001b[0m 799ms/step - accuracy: 0.9271 - loss: 0.3952max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m27/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m7s\u001b[0m 799ms/step - accuracy: 0.9270 - loss: 0.3953max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m28/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m6s\u001b[0m 799ms/step - accuracy: 0.9269 - loss: 0.3955max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m29/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m5s\u001b[0m 798ms/step - accuracy: 0.9269 - loss: 0.3956max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m30/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m4s\u001b[0m 798ms/step - accuracy: 0.9268 - loss: 0.3958max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m31/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 797ms/step - accuracy: 0.9267 - loss: 0.3960max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m32/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 797ms/step - accuracy: 0.9266 - loss: 0.3963max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m33/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m2s\u001b[0m 797ms/step - accuracy: 0.9265 - loss: 0.3965max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m34/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m1s\u001b[0m 797ms/step - accuracy: 0.9264 - loss: 0.3968max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m35/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 797ms/step - accuracy: 0.9263 - loss: 0.3970max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 789ms/step - accuracy: 0.9262 - loss: 0.3973max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m30s\u001b[0m 820ms/step - accuracy: 0.9261 - loss: 0.3975 - val_accuracy: 0.8809 - val_loss: 0.5602 - learning_rate: 5.0000e-05\n",
      "Epoch 39/200\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 1/36\u001b[0m \u001b[37m━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m28s\u001b[0m 813ms/step - accuracy: 0.9198 - loss: 0.4129max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 2/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m27s\u001b[0m 798ms/step - accuracy: 0.9203 - loss: 0.4108max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 3/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 800ms/step - accuracy: 0.9223 - loss: 0.4058max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 4/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 797ms/step - accuracy: 0.9235 - loss: 0.4030max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 5/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 796ms/step - accuracy: 0.9237 - loss: 0.4027max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 6/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 797ms/step - accuracy: 0.9240 - loss: 0.4029max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 7/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 796ms/step - accuracy: 0.9241 - loss: 0.4032max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 8/36\u001b[0m \u001b[32m━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 794ms/step - accuracy: 0.9244 - loss: 0.4028max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 9/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 793ms/step - accuracy: 0.9248 - loss: 0.4021max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m10/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m20s\u001b[0m 793ms/step - accuracy: 0.9250 - loss: 0.4016max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m11/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 793ms/step - accuracy: 0.9251 - loss: 0.4014max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m12/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 793ms/step - accuracy: 0.9251 - loss: 0.4012max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m13/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 793ms/step - accuracy: 0.9252 - loss: 0.4010max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m14/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m17s\u001b[0m 793ms/step - accuracy: 0.9253 - loss: 0.4008max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m15/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m16s\u001b[0m 793ms/step - accuracy: 0.9254 - loss: 0.4005max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m16/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 793ms/step - accuracy: 0.9254 - loss: 0.4004max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m17/36\u001b[0m \u001b[32m━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 793ms/step - accuracy: 0.9254 - loss: 0.4003max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m18/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 792ms/step - accuracy: 0.9254 - loss: 0.4001max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m19/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m13s\u001b[0m 792ms/step - accuracy: 0.9255 - loss: 0.3999max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m20/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m12s\u001b[0m 792ms/step - accuracy: 0.9255 - loss: 0.3998max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m21/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 791ms/step - accuracy: 0.9255 - loss: 0.3997max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m22/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 791ms/step - accuracy: 0.9255 - loss: 0.3997max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m23/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m10s\u001b[0m 789ms/step - accuracy: 0.9255 - loss: 0.3996max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m24/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m9s\u001b[0m 789ms/step - accuracy: 0.9255 - loss: 0.3996 max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m25/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m8s\u001b[0m 789ms/step - accuracy: 0.9254 - loss: 0.3995max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m26/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━\u001b[0m \u001b[1m7s\u001b[0m 788ms/step - accuracy: 0.9254 - loss: 0.3995max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m27/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m7s\u001b[0m 789ms/step - accuracy: 0.9254 - loss: 0.3995max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m28/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m6s\u001b[0m 788ms/step - accuracy: 0.9254 - loss: 0.3995max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m29/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m5s\u001b[0m 788ms/step - accuracy: 0.9253 - loss: 0.3995max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m30/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m4s\u001b[0m 788ms/step - accuracy: 0.9253 - loss: 0.3995max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m31/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 788ms/step - accuracy: 0.9253 - loss: 0.3995max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m32/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 788ms/step - accuracy: 0.9253 - loss: 0.3994max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m33/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m2s\u001b[0m 788ms/step - accuracy: 0.9253 - loss: 0.3993max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m34/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m1s\u001b[0m 789ms/step - accuracy: 0.9253 - loss: 0.3993max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m35/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 789ms/step - accuracy: 0.9253 - loss: 0.3993max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 781ms/step - accuracy: 0.9253 - loss: 0.3993max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 812ms/step - accuracy: 0.9253 - loss: 0.3993 - val_accuracy: 0.8840 - val_loss: 0.5378 - learning_rate: 5.0000e-05\n",
      "Epoch 40/200\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 1/36\u001b[0m \u001b[37m━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m28s\u001b[0m 807ms/step - accuracy: 0.9302 - loss: 0.3898max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 2/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m31s\u001b[0m 930ms/step - accuracy: 0.9256 - loss: 0.3976max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 3/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m28s\u001b[0m 861ms/step - accuracy: 0.9221 - loss: 0.4047max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 4/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 839ms/step - accuracy: 0.9204 - loss: 0.4084max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 5/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 827ms/step - accuracy: 0.9204 - loss: 0.4093max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 6/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 820ms/step - accuracy: 0.9203 - loss: 0.4103max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 7/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 816ms/step - accuracy: 0.9205 - loss: 0.4103max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 8/36\u001b[0m \u001b[32m━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 813ms/step - accuracy: 0.9208 - loss: 0.4100max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 9/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 811ms/step - accuracy: 0.9210 - loss: 0.4097max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m10/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 808ms/step - accuracy: 0.9211 - loss: 0.4096max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m11/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m20s\u001b[0m 806ms/step - accuracy: 0.9214 - loss: 0.4093max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m12/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 805ms/step - accuracy: 0.9215 - loss: 0.4091max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m13/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 804ms/step - accuracy: 0.9217 - loss: 0.4087max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m14/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m17s\u001b[0m 803ms/step - accuracy: 0.9219 - loss: 0.4083max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m15/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m16s\u001b[0m 802ms/step - accuracy: 0.9222 - loss: 0.4078max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m16/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m16s\u001b[0m 802ms/step - accuracy: 0.9224 - loss: 0.4073max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m17/36\u001b[0m \u001b[32m━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 801ms/step - accuracy: 0.9226 - loss: 0.4069max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m18/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 800ms/step - accuracy: 0.9227 - loss: 0.4066max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m19/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m13s\u001b[0m 800ms/step - accuracy: 0.9228 - loss: 0.4062max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m20/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m12s\u001b[0m 799ms/step - accuracy: 0.9229 - loss: 0.4060max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m21/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 799ms/step - accuracy: 0.9230 - loss: 0.4058max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m22/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 798ms/step - accuracy: 0.9231 - loss: 0.4056max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m23/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m10s\u001b[0m 798ms/step - accuracy: 0.9231 - loss: 0.4054max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m24/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m9s\u001b[0m 797ms/step - accuracy: 0.9232 - loss: 0.4053 max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m25/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m8s\u001b[0m 797ms/step - accuracy: 0.9232 - loss: 0.4051max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m26/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━\u001b[0m \u001b[1m7s\u001b[0m 797ms/step - accuracy: 0.9233 - loss: 0.4049max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m27/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m7s\u001b[0m 796ms/step - accuracy: 0.9233 - loss: 0.4047max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m28/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m6s\u001b[0m 797ms/step - accuracy: 0.9233 - loss: 0.4046max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m29/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m5s\u001b[0m 797ms/step - accuracy: 0.9233 - loss: 0.4045max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m30/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m4s\u001b[0m 797ms/step - accuracy: 0.9233 - loss: 0.4044max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m31/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 796ms/step - accuracy: 0.9234 - loss: 0.4043max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m32/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 796ms/step - accuracy: 0.9234 - loss: 0.4042max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m33/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m2s\u001b[0m 796ms/step - accuracy: 0.9234 - loss: 0.4040max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m34/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m1s\u001b[0m 796ms/step - accuracy: 0.9234 - loss: 0.4039max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m35/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 796ms/step - accuracy: 0.9234 - loss: 0.4038max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 787ms/step - accuracy: 0.9234 - loss: 0.4037max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      " Saved checkpoint: checkpoints/segnet_epoch_040_vloss_0.5532.h5\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m30s\u001b[0m 834ms/step - accuracy: 0.9234 - loss: 0.4036 - val_accuracy: 0.8796 - val_loss: 0.5532 - learning_rate: 5.0000e-05\n",
      "Epoch 41/200\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 1/36\u001b[0m \u001b[37m━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m28s\u001b[0m 820ms/step - accuracy: 0.9369 - loss: 0.3700max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 2/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 786ms/step - accuracy: 0.9329 - loss: 0.3814max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 3/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 784ms/step - accuracy: 0.9316 - loss: 0.3832max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 4/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 783ms/step - accuracy: 0.9303 - loss: 0.3863max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 5/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 782ms/step - accuracy: 0.9291 - loss: 0.3891max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 6/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 782ms/step - accuracy: 0.9280 - loss: 0.3922max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 7/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 786ms/step - accuracy: 0.9271 - loss: 0.3946max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 8/36\u001b[0m \u001b[32m━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 786ms/step - accuracy: 0.9260 - loss: 0.3974max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 9/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 786ms/step - accuracy: 0.9252 - loss: 0.3996max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m10/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m20s\u001b[0m 785ms/step - accuracy: 0.9246 - loss: 0.4011max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m11/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 785ms/step - accuracy: 0.9240 - loss: 0.4027max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m12/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 785ms/step - accuracy: 0.9235 - loss: 0.4038max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m13/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 785ms/step - accuracy: 0.9232 - loss: 0.4045max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m14/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m17s\u001b[0m 786ms/step - accuracy: 0.9230 - loss: 0.4050max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m15/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m16s\u001b[0m 789ms/step - accuracy: 0.9228 - loss: 0.4054max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m16/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 790ms/step - accuracy: 0.9226 - loss: 0.4059max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m17/36\u001b[0m \u001b[32m━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 791ms/step - accuracy: 0.9225 - loss: 0.4062max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m18/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 791ms/step - accuracy: 0.9224 - loss: 0.4064max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m19/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m13s\u001b[0m 791ms/step - accuracy: 0.9223 - loss: 0.4066max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m20/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m12s\u001b[0m 790ms/step - accuracy: 0.9222 - loss: 0.4066max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m21/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 789ms/step - accuracy: 0.9222 - loss: 0.4066max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m22/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 789ms/step - accuracy: 0.9222 - loss: 0.4066max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m23/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m10s\u001b[0m 789ms/step - accuracy: 0.9222 - loss: 0.4065max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m24/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m9s\u001b[0m 789ms/step - accuracy: 0.9222 - loss: 0.4065 max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m25/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m8s\u001b[0m 789ms/step - accuracy: 0.9221 - loss: 0.4065max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m26/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━\u001b[0m \u001b[1m7s\u001b[0m 789ms/step - accuracy: 0.9221 - loss: 0.4066max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m27/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m7s\u001b[0m 790ms/step - accuracy: 0.9221 - loss: 0.4066max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m28/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m6s\u001b[0m 790ms/step - accuracy: 0.9220 - loss: 0.4067max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m29/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m5s\u001b[0m 791ms/step - accuracy: 0.9220 - loss: 0.4067max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m30/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m4s\u001b[0m 791ms/step - accuracy: 0.9220 - loss: 0.4068max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m31/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 791ms/step - accuracy: 0.9220 - loss: 0.4068max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m32/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 791ms/step - accuracy: 0.9219 - loss: 0.4067max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m33/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m2s\u001b[0m 792ms/step - accuracy: 0.9219 - loss: 0.4067max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m34/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m1s\u001b[0m 792ms/step - accuracy: 0.9219 - loss: 0.4067max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m35/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 793ms/step - accuracy: 0.9219 - loss: 0.4066max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 784ms/step - accuracy: 0.9219 - loss: 0.4066max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 815ms/step - accuracy: 0.9219 - loss: 0.4066 - val_accuracy: 0.8791 - val_loss: 0.5587 - learning_rate: 5.0000e-05\n",
      "Epoch 42/200\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 1/36\u001b[0m \u001b[37m━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m28s\u001b[0m 817ms/step - accuracy: 0.9242 - loss: 0.3954max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 2/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m27s\u001b[0m 809ms/step - accuracy: 0.9258 - loss: 0.3931max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 3/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 803ms/step - accuracy: 0.9248 - loss: 0.3979max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 4/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 800ms/step - accuracy: 0.9232 - loss: 0.4027max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 5/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 799ms/step - accuracy: 0.9225 - loss: 0.4055max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 6/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 797ms/step - accuracy: 0.9223 - loss: 0.4063max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 7/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 795ms/step - accuracy: 0.9223 - loss: 0.4065max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 8/36\u001b[0m \u001b[32m━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 794ms/step - accuracy: 0.9224 - loss: 0.4065max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 9/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 794ms/step - accuracy: 0.9223 - loss: 0.4068max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m10/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m20s\u001b[0m 793ms/step - accuracy: 0.9221 - loss: 0.4071max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m11/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 793ms/step - accuracy: 0.9220 - loss: 0.4074max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m12/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 792ms/step - accuracy: 0.9219 - loss: 0.4076max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m13/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 792ms/step - accuracy: 0.9218 - loss: 0.4077max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m14/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m17s\u001b[0m 791ms/step - accuracy: 0.9217 - loss: 0.4079max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m15/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m16s\u001b[0m 790ms/step - accuracy: 0.9216 - loss: 0.4081max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m16/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 790ms/step - accuracy: 0.9215 - loss: 0.4084max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m17/36\u001b[0m \u001b[32m━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 790ms/step - accuracy: 0.9213 - loss: 0.4086max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m18/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 789ms/step - accuracy: 0.9212 - loss: 0.4089max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m19/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m13s\u001b[0m 788ms/step - accuracy: 0.9211 - loss: 0.4090max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m20/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m12s\u001b[0m 788ms/step - accuracy: 0.9210 - loss: 0.4090max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m21/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 788ms/step - accuracy: 0.9210 - loss: 0.4090max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m22/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 789ms/step - accuracy: 0.9209 - loss: 0.4090max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m23/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m10s\u001b[0m 789ms/step - accuracy: 0.9208 - loss: 0.4090max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m24/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m9s\u001b[0m 789ms/step - accuracy: 0.9207 - loss: 0.4090 max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m25/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m8s\u001b[0m 789ms/step - accuracy: 0.9207 - loss: 0.4089max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m26/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━\u001b[0m \u001b[1m7s\u001b[0m 789ms/step - accuracy: 0.9207 - loss: 0.4088max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m27/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m7s\u001b[0m 789ms/step - accuracy: 0.9207 - loss: 0.4087max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m28/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m6s\u001b[0m 789ms/step - accuracy: 0.9207 - loss: 0.4086max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m29/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m5s\u001b[0m 789ms/step - accuracy: 0.9207 - loss: 0.4085max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m30/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m4s\u001b[0m 789ms/step - accuracy: 0.9207 - loss: 0.4083max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m31/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 789ms/step - accuracy: 0.9207 - loss: 0.4082max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m32/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 789ms/step - accuracy: 0.9207 - loss: 0.4081max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m33/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m2s\u001b[0m 789ms/step - accuracy: 0.9207 - loss: 0.4080max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m34/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m1s\u001b[0m 788ms/step - accuracy: 0.9207 - loss: 0.4079max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m35/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 788ms/step - accuracy: 0.9207 - loss: 0.4078max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 780ms/step - accuracy: 0.9208 - loss: 0.4077max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 809ms/step - accuracy: 0.9208 - loss: 0.4076 - val_accuracy: 0.8834 - val_loss: 0.5291 - learning_rate: 5.0000e-05\n",
      "Epoch 43/200\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 1/36\u001b[0m \u001b[37m━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m27s\u001b[0m 797ms/step - accuracy: 0.9340 - loss: 0.3626max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 2/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 786ms/step - accuracy: 0.9246 - loss: 0.3901max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 3/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 787ms/step - accuracy: 0.9214 - loss: 0.3989max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 4/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 787ms/step - accuracy: 0.9211 - loss: 0.3996max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 5/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 786ms/step - accuracy: 0.9215 - loss: 0.3988max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 6/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 786ms/step - accuracy: 0.9220 - loss: 0.3976max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 7/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 786ms/step - accuracy: 0.9222 - loss: 0.3969max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 8/36\u001b[0m \u001b[32m━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 785ms/step - accuracy: 0.9225 - loss: 0.3961max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 9/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 785ms/step - accuracy: 0.9227 - loss: 0.3957max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m10/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m20s\u001b[0m 785ms/step - accuracy: 0.9228 - loss: 0.3953max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m11/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 785ms/step - accuracy: 0.9230 - loss: 0.3947max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m12/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 786ms/step - accuracy: 0.9232 - loss: 0.3942max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m13/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 786ms/step - accuracy: 0.9234 - loss: 0.3938max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m14/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m17s\u001b[0m 786ms/step - accuracy: 0.9235 - loss: 0.3933max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m15/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m16s\u001b[0m 786ms/step - accuracy: 0.9236 - loss: 0.3929max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m16/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 786ms/step - accuracy: 0.9237 - loss: 0.3927max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m17/36\u001b[0m \u001b[32m━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 786ms/step - accuracy: 0.9238 - loss: 0.3924max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m18/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 786ms/step - accuracy: 0.9239 - loss: 0.3922max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m19/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m13s\u001b[0m 786ms/step - accuracy: 0.9240 - loss: 0.3919max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m20/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m12s\u001b[0m 786ms/step - accuracy: 0.9241 - loss: 0.3917max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m21/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 786ms/step - accuracy: 0.9242 - loss: 0.3915max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m22/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 786ms/step - accuracy: 0.9243 - loss: 0.3914max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m23/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m10s\u001b[0m 787ms/step - accuracy: 0.9243 - loss: 0.3912max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m24/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m9s\u001b[0m 787ms/step - accuracy: 0.9244 - loss: 0.3910 max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m25/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m8s\u001b[0m 787ms/step - accuracy: 0.9244 - loss: 0.3909max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m26/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━\u001b[0m \u001b[1m7s\u001b[0m 787ms/step - accuracy: 0.9245 - loss: 0.3908max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m27/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m7s\u001b[0m 787ms/step - accuracy: 0.9245 - loss: 0.3908max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m28/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m6s\u001b[0m 787ms/step - accuracy: 0.9245 - loss: 0.3907max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m29/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m5s\u001b[0m 787ms/step - accuracy: 0.9245 - loss: 0.3907max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m30/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m4s\u001b[0m 787ms/step - accuracy: 0.9246 - loss: 0.3906max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m31/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 788ms/step - accuracy: 0.9246 - loss: 0.3905max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m32/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 788ms/step - accuracy: 0.9247 - loss: 0.3904max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m33/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m2s\u001b[0m 788ms/step - accuracy: 0.9247 - loss: 0.3903max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m34/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m1s\u001b[0m 788ms/step - accuracy: 0.9247 - loss: 0.3903max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m35/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 787ms/step - accuracy: 0.9248 - loss: 0.3902max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 779ms/step - accuracy: 0.9248 - loss: 0.3901max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 809ms/step - accuracy: 0.9248 - loss: 0.3901 - val_accuracy: 0.8790 - val_loss: 0.5497 - learning_rate: 5.0000e-05\n",
      "Epoch 44/200\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 1/36\u001b[0m \u001b[37m━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m28s\u001b[0m 811ms/step - accuracy: 0.9376 - loss: 0.3519max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 2/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 788ms/step - accuracy: 0.9359 - loss: 0.3572max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 3/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 786ms/step - accuracy: 0.9355 - loss: 0.3577max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 4/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 785ms/step - accuracy: 0.9346 - loss: 0.3605max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 5/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 785ms/step - accuracy: 0.9342 - loss: 0.3616max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 6/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 785ms/step - accuracy: 0.9337 - loss: 0.3632max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 7/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 786ms/step - accuracy: 0.9332 - loss: 0.3648max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 8/36\u001b[0m \u001b[32m━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 787ms/step - accuracy: 0.9328 - loss: 0.3664max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 9/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 787ms/step - accuracy: 0.9326 - loss: 0.3673max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m10/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m20s\u001b[0m 787ms/step - accuracy: 0.9324 - loss: 0.3681max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m11/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 786ms/step - accuracy: 0.9320 - loss: 0.3692max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m12/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 787ms/step - accuracy: 0.9317 - loss: 0.3702max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m13/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 786ms/step - accuracy: 0.9315 - loss: 0.3711max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m14/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m17s\u001b[0m 787ms/step - accuracy: 0.9313 - loss: 0.3717max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m15/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m16s\u001b[0m 787ms/step - accuracy: 0.9310 - loss: 0.3724max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m16/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 788ms/step - accuracy: 0.9309 - loss: 0.3729max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m17/36\u001b[0m \u001b[32m━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 788ms/step - accuracy: 0.9307 - loss: 0.3733max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m18/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 788ms/step - accuracy: 0.9306 - loss: 0.3738max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m19/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m13s\u001b[0m 788ms/step - accuracy: 0.9304 - loss: 0.3742max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m20/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m12s\u001b[0m 789ms/step - accuracy: 0.9303 - loss: 0.3746max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m21/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 789ms/step - accuracy: 0.9302 - loss: 0.3748max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m22/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 789ms/step - accuracy: 0.9302 - loss: 0.3750max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m23/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m10s\u001b[0m 789ms/step - accuracy: 0.9301 - loss: 0.3752max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m24/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m9s\u001b[0m 789ms/step - accuracy: 0.9300 - loss: 0.3754 max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m25/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m8s\u001b[0m 789ms/step - accuracy: 0.9299 - loss: 0.3757max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m26/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━\u001b[0m \u001b[1m7s\u001b[0m 790ms/step - accuracy: 0.9298 - loss: 0.3760max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m27/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m7s\u001b[0m 790ms/step - accuracy: 0.9297 - loss: 0.3763max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m28/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m6s\u001b[0m 790ms/step - accuracy: 0.9296 - loss: 0.3765max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m29/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m5s\u001b[0m 790ms/step - accuracy: 0.9295 - loss: 0.3767max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m30/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m4s\u001b[0m 789ms/step - accuracy: 0.9295 - loss: 0.3768max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m31/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 789ms/step - accuracy: 0.9294 - loss: 0.3769max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m32/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 789ms/step - accuracy: 0.9294 - loss: 0.3770max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m33/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m2s\u001b[0m 789ms/step - accuracy: 0.9293 - loss: 0.3771max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m34/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m1s\u001b[0m 789ms/step - accuracy: 0.9293 - loss: 0.3772max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m35/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 789ms/step - accuracy: 0.9292 - loss: 0.3773max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 781ms/step - accuracy: 0.9292 - loss: 0.3775max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 811ms/step - accuracy: 0.9292 - loss: 0.3776 - val_accuracy: 0.8819 - val_loss: 0.5360 - learning_rate: 5.0000e-05\n",
      "Epoch 45/200\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 1/36\u001b[0m \u001b[37m━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m28s\u001b[0m 804ms/step - accuracy: 0.9370 - loss: 0.3482max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 2/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 788ms/step - accuracy: 0.9362 - loss: 0.3515max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 3/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 788ms/step - accuracy: 0.9337 - loss: 0.3601max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 4/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 790ms/step - accuracy: 0.9322 - loss: 0.3646max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 5/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 790ms/step - accuracy: 0.9317 - loss: 0.3663max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 6/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 788ms/step - accuracy: 0.9314 - loss: 0.3675max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 7/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 786ms/step - accuracy: 0.9311 - loss: 0.3686max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 8/36\u001b[0m \u001b[32m━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 786ms/step - accuracy: 0.9309 - loss: 0.3695max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 9/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 786ms/step - accuracy: 0.9307 - loss: 0.3703max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m10/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m20s\u001b[0m 786ms/step - accuracy: 0.9304 - loss: 0.3711max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m11/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 787ms/step - accuracy: 0.9301 - loss: 0.3718max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m12/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 787ms/step - accuracy: 0.9299 - loss: 0.3723max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m13/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 787ms/step - accuracy: 0.9298 - loss: 0.3728max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m14/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m17s\u001b[0m 787ms/step - accuracy: 0.9297 - loss: 0.3731max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m15/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m16s\u001b[0m 787ms/step - accuracy: 0.9295 - loss: 0.3736max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m16/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 787ms/step - accuracy: 0.9294 - loss: 0.3739max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m17/36\u001b[0m \u001b[32m━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 787ms/step - accuracy: 0.9293 - loss: 0.3741max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m18/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 787ms/step - accuracy: 0.9293 - loss: 0.3743max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m19/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m13s\u001b[0m 787ms/step - accuracy: 0.9292 - loss: 0.3744max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m20/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m12s\u001b[0m 787ms/step - accuracy: 0.9292 - loss: 0.3744max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m21/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 787ms/step - accuracy: 0.9292 - loss: 0.3745max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m22/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 786ms/step - accuracy: 0.9291 - loss: 0.3745max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m23/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m10s\u001b[0m 786ms/step - accuracy: 0.9291 - loss: 0.3747max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m24/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m9s\u001b[0m 786ms/step - accuracy: 0.9290 - loss: 0.3747 max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m25/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m8s\u001b[0m 786ms/step - accuracy: 0.9290 - loss: 0.3749max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m26/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━\u001b[0m \u001b[1m7s\u001b[0m 786ms/step - accuracy: 0.9290 - loss: 0.3749max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m27/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m7s\u001b[0m 786ms/step - accuracy: 0.9289 - loss: 0.3750max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m28/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m6s\u001b[0m 786ms/step - accuracy: 0.9289 - loss: 0.3750max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m29/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m5s\u001b[0m 786ms/step - accuracy: 0.9289 - loss: 0.3750max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m30/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m4s\u001b[0m 786ms/step - accuracy: 0.9289 - loss: 0.3750max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m31/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 786ms/step - accuracy: 0.9289 - loss: 0.3751max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m32/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 786ms/step - accuracy: 0.9289 - loss: 0.3751max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m33/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m2s\u001b[0m 786ms/step - accuracy: 0.9289 - loss: 0.3751max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m34/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m1s\u001b[0m 787ms/step - accuracy: 0.9289 - loss: 0.3751max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m35/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 787ms/step - accuracy: 0.9289 - loss: 0.3751max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 778ms/step - accuracy: 0.9289 - loss: 0.3751max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 808ms/step - accuracy: 0.9289 - loss: 0.3752 - val_accuracy: 0.8821 - val_loss: 0.5474 - learning_rate: 5.0000e-05\n",
      "Epoch 46/200\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 1/36\u001b[0m \u001b[37m━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m28s\u001b[0m 804ms/step - accuracy: 0.9174 - loss: 0.4008max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 2/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 787ms/step - accuracy: 0.9237 - loss: 0.3844max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 3/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 794ms/step - accuracy: 0.9257 - loss: 0.3797max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 4/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 795ms/step - accuracy: 0.9260 - loss: 0.3790max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 5/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 796ms/step - accuracy: 0.9265 - loss: 0.3777max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 6/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 797ms/step - accuracy: 0.9271 - loss: 0.3763max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 7/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 795ms/step - accuracy: 0.9275 - loss: 0.3753max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 8/36\u001b[0m \u001b[32m━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 794ms/step - accuracy: 0.9277 - loss: 0.3748max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 9/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 794ms/step - accuracy: 0.9280 - loss: 0.3741max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m10/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m20s\u001b[0m 796ms/step - accuracy: 0.9283 - loss: 0.3733max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m11/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 796ms/step - accuracy: 0.9285 - loss: 0.3726max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m12/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 796ms/step - accuracy: 0.9287 - loss: 0.3722max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m13/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 796ms/step - accuracy: 0.9288 - loss: 0.3719max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m14/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m17s\u001b[0m 796ms/step - accuracy: 0.9288 - loss: 0.3720max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m15/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m16s\u001b[0m 796ms/step - accuracy: 0.9288 - loss: 0.3720max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m16/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 797ms/step - accuracy: 0.9288 - loss: 0.3720max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m17/36\u001b[0m \u001b[32m━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 799ms/step - accuracy: 0.9289 - loss: 0.3719max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m18/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 800ms/step - accuracy: 0.9290 - loss: 0.3718max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m19/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m13s\u001b[0m 800ms/step - accuracy: 0.9290 - loss: 0.3717max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m20/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m12s\u001b[0m 800ms/step - accuracy: 0.9291 - loss: 0.3715max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m21/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 800ms/step - accuracy: 0.9292 - loss: 0.3715max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m22/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 799ms/step - accuracy: 0.9292 - loss: 0.3714max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m23/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m10s\u001b[0m 799ms/step - accuracy: 0.9292 - loss: 0.3713max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m24/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m9s\u001b[0m 799ms/step - accuracy: 0.9293 - loss: 0.3713 max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m25/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m8s\u001b[0m 798ms/step - accuracy: 0.9293 - loss: 0.3712max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m26/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━\u001b[0m \u001b[1m7s\u001b[0m 798ms/step - accuracy: 0.9294 - loss: 0.3711max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m27/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m7s\u001b[0m 797ms/step - accuracy: 0.9294 - loss: 0.3710max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m28/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m6s\u001b[0m 797ms/step - accuracy: 0.9294 - loss: 0.3710max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m29/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m5s\u001b[0m 797ms/step - accuracy: 0.9295 - loss: 0.3710max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m30/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m4s\u001b[0m 797ms/step - accuracy: 0.9295 - loss: 0.3710max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m31/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 796ms/step - accuracy: 0.9295 - loss: 0.3710max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m32/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 796ms/step - accuracy: 0.9295 - loss: 0.3710max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m33/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m2s\u001b[0m 796ms/step - accuracy: 0.9295 - loss: 0.3710max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m34/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m1s\u001b[0m 795ms/step - accuracy: 0.9295 - loss: 0.3711max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m35/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 795ms/step - accuracy: 0.9295 - loss: 0.3711max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 787ms/step - accuracy: 0.9295 - loss: 0.3712max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 817ms/step - accuracy: 0.9295 - loss: 0.3712 - val_accuracy: 0.8809 - val_loss: 0.5420 - learning_rate: 2.5000e-05\n",
      "Epoch 47/200\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 1/36\u001b[0m \u001b[37m━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m28s\u001b[0m 806ms/step - accuracy: 0.9271 - loss: 0.3798max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 2/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 793ms/step - accuracy: 0.9280 - loss: 0.3789max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 3/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 792ms/step - accuracy: 0.9288 - loss: 0.3773max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 4/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 791ms/step - accuracy: 0.9289 - loss: 0.3769max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 5/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 790ms/step - accuracy: 0.9290 - loss: 0.3765max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 6/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 789ms/step - accuracy: 0.9290 - loss: 0.3763max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 7/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 789ms/step - accuracy: 0.9288 - loss: 0.3767max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 8/36\u001b[0m \u001b[32m━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 789ms/step - accuracy: 0.9286 - loss: 0.3773max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 9/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 789ms/step - accuracy: 0.9283 - loss: 0.3779max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m10/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m20s\u001b[0m 789ms/step - accuracy: 0.9282 - loss: 0.3782max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m11/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 788ms/step - accuracy: 0.9281 - loss: 0.3784max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m12/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 789ms/step - accuracy: 0.9280 - loss: 0.3786max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m13/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 790ms/step - accuracy: 0.9280 - loss: 0.3787max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m14/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m17s\u001b[0m 790ms/step - accuracy: 0.9280 - loss: 0.3787max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m15/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m16s\u001b[0m 791ms/step - accuracy: 0.9280 - loss: 0.3787max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m16/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 791ms/step - accuracy: 0.9280 - loss: 0.3787max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m17/36\u001b[0m \u001b[32m━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 792ms/step - accuracy: 0.9280 - loss: 0.3787max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m18/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 791ms/step - accuracy: 0.9280 - loss: 0.3787max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m19/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m13s\u001b[0m 791ms/step - accuracy: 0.9280 - loss: 0.3785max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m20/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m12s\u001b[0m 791ms/step - accuracy: 0.9280 - loss: 0.3783max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m21/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 792ms/step - accuracy: 0.9281 - loss: 0.3781max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m22/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 792ms/step - accuracy: 0.9281 - loss: 0.3780max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m23/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m10s\u001b[0m 792ms/step - accuracy: 0.9282 - loss: 0.3779max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m24/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m9s\u001b[0m 792ms/step - accuracy: 0.9282 - loss: 0.3778 max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m25/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m8s\u001b[0m 792ms/step - accuracy: 0.9282 - loss: 0.3777max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m26/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━\u001b[0m \u001b[1m7s\u001b[0m 793ms/step - accuracy: 0.9283 - loss: 0.3776max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m27/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m7s\u001b[0m 793ms/step - accuracy: 0.9283 - loss: 0.3776max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m28/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m6s\u001b[0m 793ms/step - accuracy: 0.9283 - loss: 0.3775max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m29/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m5s\u001b[0m 793ms/step - accuracy: 0.9283 - loss: 0.3775max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m30/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m4s\u001b[0m 793ms/step - accuracy: 0.9283 - loss: 0.3774max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m31/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 793ms/step - accuracy: 0.9283 - loss: 0.3774max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m32/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 793ms/step - accuracy: 0.9282 - loss: 0.3774max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m33/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m2s\u001b[0m 793ms/step - accuracy: 0.9282 - loss: 0.3775max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m34/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m1s\u001b[0m 793ms/step - accuracy: 0.9282 - loss: 0.3775max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m35/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 793ms/step - accuracy: 0.9281 - loss: 0.3776max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 785ms/step - accuracy: 0.9281 - loss: 0.3777max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 815ms/step - accuracy: 0.9281 - loss: 0.3778 - val_accuracy: 0.8835 - val_loss: 0.5344 - learning_rate: 2.5000e-05\n",
      "Epoch 48/200\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 1/36\u001b[0m \u001b[37m━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m28s\u001b[0m 805ms/step - accuracy: 0.9230 - loss: 0.3855max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 2/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m27s\u001b[0m 798ms/step - accuracy: 0.9273 - loss: 0.3756max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 3/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 792ms/step - accuracy: 0.9288 - loss: 0.3721max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 4/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 791ms/step - accuracy: 0.9297 - loss: 0.3695max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 5/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 792ms/step - accuracy: 0.9302 - loss: 0.3680max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 6/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 792ms/step - accuracy: 0.9305 - loss: 0.3672max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 7/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 791ms/step - accuracy: 0.9301 - loss: 0.3690max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 8/36\u001b[0m \u001b[32m━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 791ms/step - accuracy: 0.9298 - loss: 0.3701max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 9/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 790ms/step - accuracy: 0.9293 - loss: 0.3718max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m10/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m20s\u001b[0m 789ms/step - accuracy: 0.9290 - loss: 0.3729max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m11/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 789ms/step - accuracy: 0.9288 - loss: 0.3738max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m12/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 788ms/step - accuracy: 0.9288 - loss: 0.3742max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m13/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 788ms/step - accuracy: 0.9287 - loss: 0.3746max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m14/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m17s\u001b[0m 787ms/step - accuracy: 0.9287 - loss: 0.3750max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m15/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m16s\u001b[0m 788ms/step - accuracy: 0.9286 - loss: 0.3752max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m16/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 788ms/step - accuracy: 0.9286 - loss: 0.3753max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m17/36\u001b[0m \u001b[32m━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 788ms/step - accuracy: 0.9286 - loss: 0.3755max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m18/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 789ms/step - accuracy: 0.9286 - loss: 0.3756max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m19/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m13s\u001b[0m 789ms/step - accuracy: 0.9285 - loss: 0.3758max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m20/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m12s\u001b[0m 789ms/step - accuracy: 0.9285 - loss: 0.3759max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m21/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 789ms/step - accuracy: 0.9284 - loss: 0.3761max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m22/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 789ms/step - accuracy: 0.9284 - loss: 0.3762max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m23/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m10s\u001b[0m 789ms/step - accuracy: 0.9283 - loss: 0.3764max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m24/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m9s\u001b[0m 789ms/step - accuracy: 0.9283 - loss: 0.3765 max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m25/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m8s\u001b[0m 788ms/step - accuracy: 0.9282 - loss: 0.3767max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m26/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━\u001b[0m \u001b[1m7s\u001b[0m 788ms/step - accuracy: 0.9282 - loss: 0.3768max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m27/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m7s\u001b[0m 788ms/step - accuracy: 0.9281 - loss: 0.3770max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m28/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m6s\u001b[0m 789ms/step - accuracy: 0.9281 - loss: 0.3771max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m29/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m5s\u001b[0m 789ms/step - accuracy: 0.9280 - loss: 0.3772max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m30/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m4s\u001b[0m 789ms/step - accuracy: 0.9280 - loss: 0.3773max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m31/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 788ms/step - accuracy: 0.9279 - loss: 0.3774max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m32/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 788ms/step - accuracy: 0.9279 - loss: 0.3775max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m33/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m2s\u001b[0m 788ms/step - accuracy: 0.9279 - loss: 0.3775max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m34/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m1s\u001b[0m 788ms/step - accuracy: 0.9279 - loss: 0.3775max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m35/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 788ms/step - accuracy: 0.9279 - loss: 0.3775max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 780ms/step - accuracy: 0.9279 - loss: 0.3775max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 811ms/step - accuracy: 0.9279 - loss: 0.3776 - val_accuracy: 0.8853 - val_loss: 0.5232 - learning_rate: 2.5000e-05\n",
      "Epoch 49/200\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 1/36\u001b[0m \u001b[37m━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m28s\u001b[0m 803ms/step - accuracy: 0.9278 - loss: 0.3700max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 2/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 787ms/step - accuracy: 0.9239 - loss: 0.3815max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 3/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 787ms/step - accuracy: 0.9230 - loss: 0.3861max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 4/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 787ms/step - accuracy: 0.9235 - loss: 0.3855max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 5/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 787ms/step - accuracy: 0.9241 - loss: 0.3836max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 6/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 786ms/step - accuracy: 0.9245 - loss: 0.3823max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 7/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 787ms/step - accuracy: 0.9249 - loss: 0.3812max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 8/36\u001b[0m \u001b[32m━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 787ms/step - accuracy: 0.9253 - loss: 0.3802max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 9/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 788ms/step - accuracy: 0.9254 - loss: 0.3800max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m10/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m20s\u001b[0m 790ms/step - accuracy: 0.9255 - loss: 0.3797max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m11/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 790ms/step - accuracy: 0.9256 - loss: 0.3793max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m12/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 791ms/step - accuracy: 0.9256 - loss: 0.3792max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m13/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 791ms/step - accuracy: 0.9257 - loss: 0.3791max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m14/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m17s\u001b[0m 790ms/step - accuracy: 0.9258 - loss: 0.3789max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m15/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m16s\u001b[0m 790ms/step - accuracy: 0.9259 - loss: 0.3787max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m16/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 791ms/step - accuracy: 0.9260 - loss: 0.3785max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m17/36\u001b[0m \u001b[32m━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 791ms/step - accuracy: 0.9261 - loss: 0.3783max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m18/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 791ms/step - accuracy: 0.9261 - loss: 0.3781max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m19/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m13s\u001b[0m 791ms/step - accuracy: 0.9263 - loss: 0.3778max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m20/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m12s\u001b[0m 791ms/step - accuracy: 0.9264 - loss: 0.3775max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m21/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 791ms/step - accuracy: 0.9265 - loss: 0.3773max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m22/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 791ms/step - accuracy: 0.9266 - loss: 0.3770max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m23/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m10s\u001b[0m 792ms/step - accuracy: 0.9267 - loss: 0.3768max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m24/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m9s\u001b[0m 792ms/step - accuracy: 0.9268 - loss: 0.3765 max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m25/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m8s\u001b[0m 792ms/step - accuracy: 0.9269 - loss: 0.3763max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m26/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━\u001b[0m \u001b[1m7s\u001b[0m 792ms/step - accuracy: 0.9270 - loss: 0.3761max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m27/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m7s\u001b[0m 791ms/step - accuracy: 0.9270 - loss: 0.3759max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m28/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m6s\u001b[0m 791ms/step - accuracy: 0.9271 - loss: 0.3757max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m29/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m5s\u001b[0m 791ms/step - accuracy: 0.9272 - loss: 0.3755max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m30/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m4s\u001b[0m 791ms/step - accuracy: 0.9273 - loss: 0.3753max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m31/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 791ms/step - accuracy: 0.9274 - loss: 0.3751max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m32/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 791ms/step - accuracy: 0.9275 - loss: 0.3749max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m33/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m2s\u001b[0m 790ms/step - accuracy: 0.9276 - loss: 0.3747max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m34/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m1s\u001b[0m 790ms/step - accuracy: 0.9277 - loss: 0.3745max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m35/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 790ms/step - accuracy: 0.9278 - loss: 0.3743max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 782ms/step - accuracy: 0.9278 - loss: 0.3741max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 813ms/step - accuracy: 0.9279 - loss: 0.3739 - val_accuracy: 0.8862 - val_loss: 0.5168 - learning_rate: 2.5000e-05\n",
      "Epoch 50/200\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 1/36\u001b[0m \u001b[37m━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m28s\u001b[0m 805ms/step - accuracy: 0.9339 - loss: 0.3568max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 2/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 788ms/step - accuracy: 0.9344 - loss: 0.3568max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 3/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 787ms/step - accuracy: 0.9335 - loss: 0.3589max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 4/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 788ms/step - accuracy: 0.9334 - loss: 0.3591max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 5/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 789ms/step - accuracy: 0.9332 - loss: 0.3596max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 6/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 790ms/step - accuracy: 0.9330 - loss: 0.3600max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 7/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 789ms/step - accuracy: 0.9327 - loss: 0.3604max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 8/36\u001b[0m \u001b[32m━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 790ms/step - accuracy: 0.9326 - loss: 0.3607max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 9/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 790ms/step - accuracy: 0.9322 - loss: 0.3615max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m10/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m20s\u001b[0m 789ms/step - accuracy: 0.9319 - loss: 0.3623max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m11/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 789ms/step - accuracy: 0.9317 - loss: 0.3630max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m12/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 789ms/step - accuracy: 0.9315 - loss: 0.3635max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m13/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 789ms/step - accuracy: 0.9314 - loss: 0.3638max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m14/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m17s\u001b[0m 789ms/step - accuracy: 0.9313 - loss: 0.3638max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m15/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m16s\u001b[0m 789ms/step - accuracy: 0.9313 - loss: 0.3637max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m16/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 789ms/step - accuracy: 0.9314 - loss: 0.3636max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m17/36\u001b[0m \u001b[32m━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 789ms/step - accuracy: 0.9314 - loss: 0.3635max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m18/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 789ms/step - accuracy: 0.9315 - loss: 0.3633max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m19/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m13s\u001b[0m 789ms/step - accuracy: 0.9315 - loss: 0.3632max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m20/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m12s\u001b[0m 788ms/step - accuracy: 0.9316 - loss: 0.3630max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m21/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 788ms/step - accuracy: 0.9317 - loss: 0.3629max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m22/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 789ms/step - accuracy: 0.9317 - loss: 0.3629max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m23/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m10s\u001b[0m 789ms/step - accuracy: 0.9317 - loss: 0.3629max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m24/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m9s\u001b[0m 789ms/step - accuracy: 0.9317 - loss: 0.3628 max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m25/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m8s\u001b[0m 789ms/step - accuracy: 0.9318 - loss: 0.3627max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m26/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━\u001b[0m \u001b[1m7s\u001b[0m 790ms/step - accuracy: 0.9318 - loss: 0.3626max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m27/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m7s\u001b[0m 790ms/step - accuracy: 0.9318 - loss: 0.3625max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m28/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m6s\u001b[0m 790ms/step - accuracy: 0.9318 - loss: 0.3624max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m29/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m5s\u001b[0m 789ms/step - accuracy: 0.9318 - loss: 0.3624max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m30/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m4s\u001b[0m 789ms/step - accuracy: 0.9318 - loss: 0.3624max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m31/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 790ms/step - accuracy: 0.9318 - loss: 0.3624max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m32/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 790ms/step - accuracy: 0.9318 - loss: 0.3625max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m33/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m2s\u001b[0m 790ms/step - accuracy: 0.9318 - loss: 0.3625max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m34/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m1s\u001b[0m 790ms/step - accuracy: 0.9317 - loss: 0.3625max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m35/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 790ms/step - accuracy: 0.9317 - loss: 0.3625max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 781ms/step - accuracy: 0.9317 - loss: 0.3625max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      " Saved checkpoint: checkpoints/segnet_epoch_050_vloss_0.5198.h5\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m30s\u001b[0m 828ms/step - accuracy: 0.9317 - loss: 0.3626 - val_accuracy: 0.8851 - val_loss: 0.5198 - learning_rate: 2.5000e-05\n",
      "Epoch 51/200\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 1/36\u001b[0m \u001b[37m━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m28s\u001b[0m 808ms/step - accuracy: 0.9311 - loss: 0.3681max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 2/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 791ms/step - accuracy: 0.9294 - loss: 0.3723max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 3/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 790ms/step - accuracy: 0.9290 - loss: 0.3731max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 4/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 792ms/step - accuracy: 0.9290 - loss: 0.3722max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 5/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 789ms/step - accuracy: 0.9294 - loss: 0.3706max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 6/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 789ms/step - accuracy: 0.9296 - loss: 0.3695max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 7/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 788ms/step - accuracy: 0.9302 - loss: 0.3682max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 8/36\u001b[0m \u001b[32m━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 788ms/step - accuracy: 0.9304 - loss: 0.3674max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 9/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 787ms/step - accuracy: 0.9308 - loss: 0.3665max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m10/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m20s\u001b[0m 789ms/step - accuracy: 0.9310 - loss: 0.3658max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m11/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 789ms/step - accuracy: 0.9312 - loss: 0.3652max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m12/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 788ms/step - accuracy: 0.9314 - loss: 0.3647max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m13/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 789ms/step - accuracy: 0.9315 - loss: 0.3643max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m14/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m17s\u001b[0m 788ms/step - accuracy: 0.9316 - loss: 0.3641max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m15/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m16s\u001b[0m 788ms/step - accuracy: 0.9316 - loss: 0.3638max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m16/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 788ms/step - accuracy: 0.9317 - loss: 0.3638max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m17/36\u001b[0m \u001b[32m━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 791ms/step - accuracy: 0.9317 - loss: 0.3637max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m18/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 793ms/step - accuracy: 0.9317 - loss: 0.3636max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m19/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m13s\u001b[0m 794ms/step - accuracy: 0.9317 - loss: 0.3636max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m20/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m12s\u001b[0m 795ms/step - accuracy: 0.9317 - loss: 0.3635max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m21/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 795ms/step - accuracy: 0.9317 - loss: 0.3635max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m22/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 795ms/step - accuracy: 0.9317 - loss: 0.3634max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m23/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m10s\u001b[0m 795ms/step - accuracy: 0.9317 - loss: 0.3633max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m24/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m9s\u001b[0m 795ms/step - accuracy: 0.9317 - loss: 0.3633 max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m25/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m8s\u001b[0m 795ms/step - accuracy: 0.9317 - loss: 0.3633max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m26/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━\u001b[0m \u001b[1m7s\u001b[0m 795ms/step - accuracy: 0.9318 - loss: 0.3632max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m27/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m7s\u001b[0m 795ms/step - accuracy: 0.9318 - loss: 0.3632max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m28/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m6s\u001b[0m 795ms/step - accuracy: 0.9318 - loss: 0.3631max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m29/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m5s\u001b[0m 795ms/step - accuracy: 0.9318 - loss: 0.3631max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m30/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m4s\u001b[0m 795ms/step - accuracy: 0.9318 - loss: 0.3630max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m31/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 795ms/step - accuracy: 0.9318 - loss: 0.3629max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m32/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 794ms/step - accuracy: 0.9318 - loss: 0.3629max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m33/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m2s\u001b[0m 794ms/step - accuracy: 0.9319 - loss: 0.3628max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m34/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m1s\u001b[0m 794ms/step - accuracy: 0.9319 - loss: 0.3628max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m35/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 794ms/step - accuracy: 0.9319 - loss: 0.3627max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 786ms/step - accuracy: 0.9319 - loss: 0.3626max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 815ms/step - accuracy: 0.9319 - loss: 0.3626 - val_accuracy: 0.8829 - val_loss: 0.5267 - learning_rate: 2.5000e-05\n",
      "Epoch 52/200\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 1/36\u001b[0m \u001b[37m━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m28s\u001b[0m 808ms/step - accuracy: 0.9383 - loss: 0.3400max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 2/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 786ms/step - accuracy: 0.9352 - loss: 0.3470max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 3/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 788ms/step - accuracy: 0.9353 - loss: 0.3466max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 4/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 788ms/step - accuracy: 0.9344 - loss: 0.3493max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 5/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 787ms/step - accuracy: 0.9345 - loss: 0.3499max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 6/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 788ms/step - accuracy: 0.9347 - loss: 0.3497max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 7/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 786ms/step - accuracy: 0.9346 - loss: 0.3502max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 8/36\u001b[0m \u001b[32m━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 787ms/step - accuracy: 0.9345 - loss: 0.3508max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 9/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 789ms/step - accuracy: 0.9343 - loss: 0.3515max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m10/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m20s\u001b[0m 790ms/step - accuracy: 0.9342 - loss: 0.3519max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m11/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 789ms/step - accuracy: 0.9342 - loss: 0.3524max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m12/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 790ms/step - accuracy: 0.9341 - loss: 0.3528max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m13/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 791ms/step - accuracy: 0.9340 - loss: 0.3532max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m14/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m17s\u001b[0m 792ms/step - accuracy: 0.9339 - loss: 0.3537max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m15/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m16s\u001b[0m 792ms/step - accuracy: 0.9338 - loss: 0.3540max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m16/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 792ms/step - accuracy: 0.9338 - loss: 0.3542max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m17/36\u001b[0m \u001b[32m━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 792ms/step - accuracy: 0.9337 - loss: 0.3544max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m18/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 791ms/step - accuracy: 0.9337 - loss: 0.3545max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m19/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m13s\u001b[0m 791ms/step - accuracy: 0.9337 - loss: 0.3547max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m20/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m12s\u001b[0m 791ms/step - accuracy: 0.9336 - loss: 0.3548max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m21/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 791ms/step - accuracy: 0.9336 - loss: 0.3550max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m22/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 791ms/step - accuracy: 0.9335 - loss: 0.3552max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m23/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m10s\u001b[0m 791ms/step - accuracy: 0.9335 - loss: 0.3554max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m24/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m9s\u001b[0m 791ms/step - accuracy: 0.9334 - loss: 0.3556 max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m25/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m8s\u001b[0m 791ms/step - accuracy: 0.9333 - loss: 0.3558max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m26/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━\u001b[0m \u001b[1m7s\u001b[0m 791ms/step - accuracy: 0.9333 - loss: 0.3560max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m27/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m7s\u001b[0m 791ms/step - accuracy: 0.9332 - loss: 0.3562max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m28/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m6s\u001b[0m 791ms/step - accuracy: 0.9332 - loss: 0.3563max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m29/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m5s\u001b[0m 792ms/step - accuracy: 0.9332 - loss: 0.3563max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m30/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m4s\u001b[0m 792ms/step - accuracy: 0.9332 - loss: 0.3564max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m31/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 792ms/step - accuracy: 0.9332 - loss: 0.3564max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m32/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 792ms/step - accuracy: 0.9332 - loss: 0.3565max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m33/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m2s\u001b[0m 792ms/step - accuracy: 0.9331 - loss: 0.3565max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m34/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m1s\u001b[0m 793ms/step - accuracy: 0.9331 - loss: 0.3566max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m35/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 793ms/step - accuracy: 0.9331 - loss: 0.3566max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 785ms/step - accuracy: 0.9331 - loss: 0.3567max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 815ms/step - accuracy: 0.9331 - loss: 0.3567 - val_accuracy: 0.8842 - val_loss: 0.5213 - learning_rate: 2.5000e-05\n",
      "Epoch 53/200\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 1/36\u001b[0m \u001b[37m━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m28s\u001b[0m 812ms/step - accuracy: 0.9345 - loss: 0.3455max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 2/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m27s\u001b[0m 805ms/step - accuracy: 0.9326 - loss: 0.3541max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 3/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 798ms/step - accuracy: 0.9310 - loss: 0.3597max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 4/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 798ms/step - accuracy: 0.9312 - loss: 0.3602max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 5/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 801ms/step - accuracy: 0.9316 - loss: 0.3596max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 6/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 804ms/step - accuracy: 0.9314 - loss: 0.3607max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 7/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 803ms/step - accuracy: 0.9313 - loss: 0.3612max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 8/36\u001b[0m \u001b[32m━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 803ms/step - accuracy: 0.9313 - loss: 0.3614max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 9/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 804ms/step - accuracy: 0.9314 - loss: 0.3612max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m10/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m20s\u001b[0m 805ms/step - accuracy: 0.9315 - loss: 0.3610max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m11/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m20s\u001b[0m 804ms/step - accuracy: 0.9315 - loss: 0.3609max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m12/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 803ms/step - accuracy: 0.9316 - loss: 0.3607max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m13/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 803ms/step - accuracy: 0.9317 - loss: 0.3606max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m14/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m17s\u001b[0m 803ms/step - accuracy: 0.9317 - loss: 0.3608max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m15/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m16s\u001b[0m 804ms/step - accuracy: 0.9317 - loss: 0.3608max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m16/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m16s\u001b[0m 804ms/step - accuracy: 0.9316 - loss: 0.3610max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m17/36\u001b[0m \u001b[32m━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 804ms/step - accuracy: 0.9316 - loss: 0.3610max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m18/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 804ms/step - accuracy: 0.9317 - loss: 0.3609max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m19/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m13s\u001b[0m 804ms/step - accuracy: 0.9316 - loss: 0.3610max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m20/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m12s\u001b[0m 804ms/step - accuracy: 0.9317 - loss: 0.3610max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m21/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m12s\u001b[0m 804ms/step - accuracy: 0.9317 - loss: 0.3610max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m22/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 803ms/step - accuracy: 0.9317 - loss: 0.3610max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m23/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m10s\u001b[0m 803ms/step - accuracy: 0.9317 - loss: 0.3609max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m24/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m9s\u001b[0m 802ms/step - accuracy: 0.9318 - loss: 0.3608 max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m25/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m8s\u001b[0m 802ms/step - accuracy: 0.9318 - loss: 0.3607max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m26/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━\u001b[0m \u001b[1m8s\u001b[0m 801ms/step - accuracy: 0.9319 - loss: 0.3607max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m27/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m7s\u001b[0m 801ms/step - accuracy: 0.9319 - loss: 0.3606max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m28/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m6s\u001b[0m 800ms/step - accuracy: 0.9319 - loss: 0.3605max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m29/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m5s\u001b[0m 800ms/step - accuracy: 0.9320 - loss: 0.3604max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m30/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m4s\u001b[0m 800ms/step - accuracy: 0.9320 - loss: 0.3603max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m31/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m4s\u001b[0m 800ms/step - accuracy: 0.9320 - loss: 0.3602max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m32/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 800ms/step - accuracy: 0.9321 - loss: 0.3601max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m33/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m2s\u001b[0m 799ms/step - accuracy: 0.9321 - loss: 0.3601max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m34/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m1s\u001b[0m 800ms/step - accuracy: 0.9321 - loss: 0.3600max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m35/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 800ms/step - accuracy: 0.9321 - loss: 0.3599max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 791ms/step - accuracy: 0.9322 - loss: 0.3599max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m30s\u001b[0m 821ms/step - accuracy: 0.9322 - loss: 0.3598 - val_accuracy: 0.8818 - val_loss: 0.5309 - learning_rate: 1.2500e-05\n",
      "Epoch 54/200\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 1/36\u001b[0m \u001b[37m━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m28s\u001b[0m 803ms/step - accuracy: 0.9307 - loss: 0.3648max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 2/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m27s\u001b[0m 795ms/step - accuracy: 0.9318 - loss: 0.3643max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 3/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 794ms/step - accuracy: 0.9304 - loss: 0.3698max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 4/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 787ms/step - accuracy: 0.9302 - loss: 0.3707max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 5/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 786ms/step - accuracy: 0.9299 - loss: 0.3714max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 6/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 787ms/step - accuracy: 0.9298 - loss: 0.3712max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 7/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 787ms/step - accuracy: 0.9300 - loss: 0.3705max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 8/36\u001b[0m \u001b[32m━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 786ms/step - accuracy: 0.9300 - loss: 0.3702max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 9/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 784ms/step - accuracy: 0.9301 - loss: 0.3695max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m10/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m20s\u001b[0m 784ms/step - accuracy: 0.9302 - loss: 0.3688max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m11/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 783ms/step - accuracy: 0.9304 - loss: 0.3681max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m12/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 783ms/step - accuracy: 0.9305 - loss: 0.3675max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m13/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 783ms/step - accuracy: 0.9306 - loss: 0.3669max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m14/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m17s\u001b[0m 783ms/step - accuracy: 0.9307 - loss: 0.3662max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m15/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m16s\u001b[0m 784ms/step - accuracy: 0.9308 - loss: 0.3658max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m16/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 785ms/step - accuracy: 0.9308 - loss: 0.3654max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m17/36\u001b[0m \u001b[32m━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 785ms/step - accuracy: 0.9309 - loss: 0.3651max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m18/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 786ms/step - accuracy: 0.9310 - loss: 0.3647max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m19/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m13s\u001b[0m 786ms/step - accuracy: 0.9311 - loss: 0.3643max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m20/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m12s\u001b[0m 786ms/step - accuracy: 0.9312 - loss: 0.3640max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m21/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 786ms/step - accuracy: 0.9313 - loss: 0.3637max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m22/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 786ms/step - accuracy: 0.9313 - loss: 0.3633max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m23/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m10s\u001b[0m 786ms/step - accuracy: 0.9314 - loss: 0.3630max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m24/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m9s\u001b[0m 786ms/step - accuracy: 0.9315 - loss: 0.3627 max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m25/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m8s\u001b[0m 786ms/step - accuracy: 0.9315 - loss: 0.3625max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m26/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━\u001b[0m \u001b[1m7s\u001b[0m 785ms/step - accuracy: 0.9316 - loss: 0.3622max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m27/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m7s\u001b[0m 785ms/step - accuracy: 0.9316 - loss: 0.3620max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m28/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m6s\u001b[0m 786ms/step - accuracy: 0.9317 - loss: 0.3618max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m29/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m5s\u001b[0m 786ms/step - accuracy: 0.9318 - loss: 0.3616max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m30/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m4s\u001b[0m 786ms/step - accuracy: 0.9318 - loss: 0.3614max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m31/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 786ms/step - accuracy: 0.9318 - loss: 0.3612max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m32/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 786ms/step - accuracy: 0.9319 - loss: 0.3611max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m33/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m2s\u001b[0m 786ms/step - accuracy: 0.9319 - loss: 0.3609max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m34/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m1s\u001b[0m 786ms/step - accuracy: 0.9320 - loss: 0.3607max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m35/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 787ms/step - accuracy: 0.9320 - loss: 0.3605max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 779ms/step - accuracy: 0.9321 - loss: 0.3604max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 809ms/step - accuracy: 0.9321 - loss: 0.3602 - val_accuracy: 0.8825 - val_loss: 0.5265 - learning_rate: 1.2500e-05\n",
      "Epoch 55/200\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 1/36\u001b[0m \u001b[37m━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m28s\u001b[0m 803ms/step - accuracy: 0.9230 - loss: 0.3853max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 2/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 793ms/step - accuracy: 0.9263 - loss: 0.3738max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 3/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m28s\u001b[0m 866ms/step - accuracy: 0.9278 - loss: 0.3695max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 4/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 842ms/step - accuracy: 0.9290 - loss: 0.3668max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 5/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 830ms/step - accuracy: 0.9296 - loss: 0.3650max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 6/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 823ms/step - accuracy: 0.9301 - loss: 0.3636max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 7/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 818ms/step - accuracy: 0.9306 - loss: 0.3624max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 8/36\u001b[0m \u001b[32m━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 813ms/step - accuracy: 0.9308 - loss: 0.3617max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 9/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 810ms/step - accuracy: 0.9309 - loss: 0.3616max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m10/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 808ms/step - accuracy: 0.9310 - loss: 0.3616max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m11/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m20s\u001b[0m 805ms/step - accuracy: 0.9311 - loss: 0.3615max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m12/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 803ms/step - accuracy: 0.9312 - loss: 0.3614max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m13/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 802ms/step - accuracy: 0.9314 - loss: 0.3611max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m14/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m17s\u001b[0m 801ms/step - accuracy: 0.9315 - loss: 0.3608max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m15/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m16s\u001b[0m 800ms/step - accuracy: 0.9315 - loss: 0.3609max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m16/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 800ms/step - accuracy: 0.9315 - loss: 0.3609max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m17/36\u001b[0m \u001b[32m━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 799ms/step - accuracy: 0.9315 - loss: 0.3609max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m18/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 799ms/step - accuracy: 0.9315 - loss: 0.3609max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m19/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m13s\u001b[0m 798ms/step - accuracy: 0.9315 - loss: 0.3610max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m20/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m12s\u001b[0m 797ms/step - accuracy: 0.9315 - loss: 0.3610max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m21/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 797ms/step - accuracy: 0.9315 - loss: 0.3609max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m22/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 797ms/step - accuracy: 0.9315 - loss: 0.3609max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m23/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m10s\u001b[0m 797ms/step - accuracy: 0.9315 - loss: 0.3609max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m24/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m9s\u001b[0m 796ms/step - accuracy: 0.9316 - loss: 0.3608 max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m25/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m8s\u001b[0m 797ms/step - accuracy: 0.9316 - loss: 0.3606max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m26/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━\u001b[0m \u001b[1m7s\u001b[0m 797ms/step - accuracy: 0.9317 - loss: 0.3605max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m27/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m7s\u001b[0m 797ms/step - accuracy: 0.9318 - loss: 0.3603max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m28/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m6s\u001b[0m 798ms/step - accuracy: 0.9318 - loss: 0.3601max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m29/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m5s\u001b[0m 798ms/step - accuracy: 0.9319 - loss: 0.3599max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m30/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m4s\u001b[0m 798ms/step - accuracy: 0.9319 - loss: 0.3597max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m31/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 799ms/step - accuracy: 0.9320 - loss: 0.3595max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m32/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 798ms/step - accuracy: 0.9320 - loss: 0.3593max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m33/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m2s\u001b[0m 799ms/step - accuracy: 0.9321 - loss: 0.3592max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m34/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m1s\u001b[0m 799ms/step - accuracy: 0.9321 - loss: 0.3591max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m35/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 799ms/step - accuracy: 0.9321 - loss: 0.3589max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 791ms/step - accuracy: 0.9322 - loss: 0.3588max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m30s\u001b[0m 820ms/step - accuracy: 0.9322 - loss: 0.3587 - val_accuracy: 0.8846 - val_loss: 0.5192 - learning_rate: 1.2500e-05\n",
      "Epoch 56/200\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 1/36\u001b[0m \u001b[37m━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m28s\u001b[0m 802ms/step - accuracy: 0.9238 - loss: 0.3911max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 2/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 788ms/step - accuracy: 0.9258 - loss: 0.3832max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 3/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 790ms/step - accuracy: 0.9275 - loss: 0.3790max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 4/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 792ms/step - accuracy: 0.9295 - loss: 0.3734max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 5/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 791ms/step - accuracy: 0.9305 - loss: 0.3699max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 6/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 790ms/step - accuracy: 0.9309 - loss: 0.3680max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 7/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 790ms/step - accuracy: 0.9314 - loss: 0.3662max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 8/36\u001b[0m \u001b[32m━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 791ms/step - accuracy: 0.9318 - loss: 0.3646max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 9/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 791ms/step - accuracy: 0.9323 - loss: 0.3633max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m10/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m20s\u001b[0m 792ms/step - accuracy: 0.9326 - loss: 0.3620max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m11/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 792ms/step - accuracy: 0.9329 - loss: 0.3610max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m12/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 792ms/step - accuracy: 0.9330 - loss: 0.3604max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m13/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 792ms/step - accuracy: 0.9332 - loss: 0.3597max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m14/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m17s\u001b[0m 791ms/step - accuracy: 0.9333 - loss: 0.3591max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m15/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m16s\u001b[0m 792ms/step - accuracy: 0.9335 - loss: 0.3585max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m16/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 793ms/step - accuracy: 0.9336 - loss: 0.3580max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m17/36\u001b[0m \u001b[32m━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 793ms/step - accuracy: 0.9336 - loss: 0.3575max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m18/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 793ms/step - accuracy: 0.9337 - loss: 0.3573max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m19/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m13s\u001b[0m 793ms/step - accuracy: 0.9337 - loss: 0.3570max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m20/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m12s\u001b[0m 793ms/step - accuracy: 0.9337 - loss: 0.3568max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m21/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 793ms/step - accuracy: 0.9337 - loss: 0.3567max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m22/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 793ms/step - accuracy: 0.9337 - loss: 0.3565max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m23/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m10s\u001b[0m 792ms/step - accuracy: 0.9338 - loss: 0.3563max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m24/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m9s\u001b[0m 793ms/step - accuracy: 0.9338 - loss: 0.3561 max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m25/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m8s\u001b[0m 793ms/step - accuracy: 0.9338 - loss: 0.3559max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m26/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━\u001b[0m \u001b[1m7s\u001b[0m 793ms/step - accuracy: 0.9338 - loss: 0.3557max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m27/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m7s\u001b[0m 793ms/step - accuracy: 0.9339 - loss: 0.3555max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m28/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m6s\u001b[0m 793ms/step - accuracy: 0.9339 - loss: 0.3554max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m29/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m5s\u001b[0m 793ms/step - accuracy: 0.9339 - loss: 0.3553max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m30/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m4s\u001b[0m 793ms/step - accuracy: 0.9339 - loss: 0.3552max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m31/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 793ms/step - accuracy: 0.9339 - loss: 0.3551max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m32/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 794ms/step - accuracy: 0.9339 - loss: 0.3550max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m33/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m2s\u001b[0m 794ms/step - accuracy: 0.9339 - loss: 0.3549max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m34/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m1s\u001b[0m 794ms/step - accuracy: 0.9339 - loss: 0.3549max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m35/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 794ms/step - accuracy: 0.9339 - loss: 0.3549max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 786ms/step - accuracy: 0.9339 - loss: 0.3549max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 817ms/step - accuracy: 0.9339 - loss: 0.3548 - val_accuracy: 0.8856 - val_loss: 0.5150 - learning_rate: 6.2500e-06\n",
      "Epoch 57/200\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 1/36\u001b[0m \u001b[37m━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m28s\u001b[0m 801ms/step - accuracy: 0.9385 - loss: 0.3460max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 2/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 789ms/step - accuracy: 0.9353 - loss: 0.3524max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 3/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 790ms/step - accuracy: 0.9330 - loss: 0.3581max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 4/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 790ms/step - accuracy: 0.9320 - loss: 0.3604max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 5/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 788ms/step - accuracy: 0.9311 - loss: 0.3625max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 6/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 789ms/step - accuracy: 0.9307 - loss: 0.3634max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 7/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 788ms/step - accuracy: 0.9305 - loss: 0.3638max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 8/36\u001b[0m \u001b[32m━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 789ms/step - accuracy: 0.9305 - loss: 0.3637max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 9/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 788ms/step - accuracy: 0.9306 - loss: 0.3633max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m10/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m20s\u001b[0m 788ms/step - accuracy: 0.9308 - loss: 0.3626max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m11/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 788ms/step - accuracy: 0.9309 - loss: 0.3620max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m12/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 788ms/step - accuracy: 0.9310 - loss: 0.3616max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m13/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 787ms/step - accuracy: 0.9311 - loss: 0.3612max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m14/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m17s\u001b[0m 787ms/step - accuracy: 0.9312 - loss: 0.3607max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m15/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m16s\u001b[0m 786ms/step - accuracy: 0.9313 - loss: 0.3603max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m16/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 786ms/step - accuracy: 0.9314 - loss: 0.3601max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m17/36\u001b[0m \u001b[32m━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 786ms/step - accuracy: 0.9315 - loss: 0.3598max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m18/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 786ms/step - accuracy: 0.9316 - loss: 0.3595max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m19/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m13s\u001b[0m 786ms/step - accuracy: 0.9317 - loss: 0.3591max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m20/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m12s\u001b[0m 786ms/step - accuracy: 0.9318 - loss: 0.3588max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m21/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 787ms/step - accuracy: 0.9319 - loss: 0.3585max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m22/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 787ms/step - accuracy: 0.9320 - loss: 0.3582max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m23/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m10s\u001b[0m 787ms/step - accuracy: 0.9320 - loss: 0.3580max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m24/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m9s\u001b[0m 787ms/step - accuracy: 0.9321 - loss: 0.3578 max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m25/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m8s\u001b[0m 787ms/step - accuracy: 0.9322 - loss: 0.3575max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m26/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━\u001b[0m \u001b[1m7s\u001b[0m 786ms/step - accuracy: 0.9323 - loss: 0.3574max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m27/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m7s\u001b[0m 786ms/step - accuracy: 0.9323 - loss: 0.3572max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m28/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m6s\u001b[0m 786ms/step - accuracy: 0.9324 - loss: 0.3570max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m29/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m5s\u001b[0m 786ms/step - accuracy: 0.9324 - loss: 0.3569max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m30/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m4s\u001b[0m 787ms/step - accuracy: 0.9325 - loss: 0.3567max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m31/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 787ms/step - accuracy: 0.9326 - loss: 0.3564max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m32/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 787ms/step - accuracy: 0.9326 - loss: 0.3562max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m33/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m2s\u001b[0m 787ms/step - accuracy: 0.9327 - loss: 0.3560max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m34/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m1s\u001b[0m 787ms/step - accuracy: 0.9327 - loss: 0.3559max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m35/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 787ms/step - accuracy: 0.9328 - loss: 0.3557max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 779ms/step - accuracy: 0.9328 - loss: 0.3555max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 809ms/step - accuracy: 0.9329 - loss: 0.3554 - val_accuracy: 0.8856 - val_loss: 0.5147 - learning_rate: 6.2500e-06\n",
      "Epoch 58/200\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 1/36\u001b[0m \u001b[37m━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m28s\u001b[0m 803ms/step - accuracy: 0.9269 - loss: 0.3666max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 2/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 788ms/step - accuracy: 0.9280 - loss: 0.3637max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 3/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 785ms/step - accuracy: 0.9290 - loss: 0.3620max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 4/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 786ms/step - accuracy: 0.9293 - loss: 0.3617max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 5/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 787ms/step - accuracy: 0.9299 - loss: 0.3602max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 6/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 787ms/step - accuracy: 0.9305 - loss: 0.3588max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 7/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 788ms/step - accuracy: 0.9307 - loss: 0.3583max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 8/36\u001b[0m \u001b[32m━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 789ms/step - accuracy: 0.9309 - loss: 0.3580max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 9/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 790ms/step - accuracy: 0.9311 - loss: 0.3577max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m10/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m20s\u001b[0m 791ms/step - accuracy: 0.9312 - loss: 0.3575max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m11/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 791ms/step - accuracy: 0.9313 - loss: 0.3574max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m12/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 791ms/step - accuracy: 0.9313 - loss: 0.3575max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m13/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 791ms/step - accuracy: 0.9313 - loss: 0.3576max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m14/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m17s\u001b[0m 791ms/step - accuracy: 0.9314 - loss: 0.3574max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m15/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m16s\u001b[0m 792ms/step - accuracy: 0.9316 - loss: 0.3571max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m16/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 791ms/step - accuracy: 0.9317 - loss: 0.3569max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m17/36\u001b[0m \u001b[32m━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 791ms/step - accuracy: 0.9317 - loss: 0.3568max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m18/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 791ms/step - accuracy: 0.9318 - loss: 0.3566max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m19/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m13s\u001b[0m 791ms/step - accuracy: 0.9319 - loss: 0.3565max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m20/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m12s\u001b[0m 791ms/step - accuracy: 0.9319 - loss: 0.3563max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m21/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 791ms/step - accuracy: 0.9320 - loss: 0.3561max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m22/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 791ms/step - accuracy: 0.9321 - loss: 0.3559max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m23/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m10s\u001b[0m 791ms/step - accuracy: 0.9321 - loss: 0.3558max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m24/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m9s\u001b[0m 791ms/step - accuracy: 0.9322 - loss: 0.3556 max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m25/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m8s\u001b[0m 791ms/step - accuracy: 0.9322 - loss: 0.3555max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m26/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━\u001b[0m \u001b[1m7s\u001b[0m 791ms/step - accuracy: 0.9323 - loss: 0.3555max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m27/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m7s\u001b[0m 791ms/step - accuracy: 0.9323 - loss: 0.3554max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m28/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m6s\u001b[0m 791ms/step - accuracy: 0.9324 - loss: 0.3553max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m29/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m5s\u001b[0m 791ms/step - accuracy: 0.9324 - loss: 0.3552max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m30/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m4s\u001b[0m 790ms/step - accuracy: 0.9325 - loss: 0.3551max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m31/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 790ms/step - accuracy: 0.9325 - loss: 0.3550max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m32/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 790ms/step - accuracy: 0.9326 - loss: 0.3549max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m33/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m2s\u001b[0m 790ms/step - accuracy: 0.9326 - loss: 0.3548max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m34/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m1s\u001b[0m 790ms/step - accuracy: 0.9327 - loss: 0.3547max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m35/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 790ms/step - accuracy: 0.9327 - loss: 0.3546max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 782ms/step - accuracy: 0.9328 - loss: 0.3545max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 813ms/step - accuracy: 0.9328 - loss: 0.3544 - val_accuracy: 0.8865 - val_loss: 0.5119 - learning_rate: 6.2500e-06\n",
      "Epoch 59/200\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 1/36\u001b[0m \u001b[37m━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m28s\u001b[0m 803ms/step - accuracy: 0.9453 - loss: 0.3183max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 2/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 782ms/step - accuracy: 0.9434 - loss: 0.3230max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 3/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 786ms/step - accuracy: 0.9402 - loss: 0.3320max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 4/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 787ms/step - accuracy: 0.9386 - loss: 0.3364max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 5/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 787ms/step - accuracy: 0.9377 - loss: 0.3396max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 6/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 788ms/step - accuracy: 0.9369 - loss: 0.3423max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 7/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 787ms/step - accuracy: 0.9365 - loss: 0.3438max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 8/36\u001b[0m \u001b[32m━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 788ms/step - accuracy: 0.9362 - loss: 0.3448max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 9/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 788ms/step - accuracy: 0.9358 - loss: 0.3458max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m10/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m20s\u001b[0m 788ms/step - accuracy: 0.9355 - loss: 0.3466max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m11/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 789ms/step - accuracy: 0.9353 - loss: 0.3471max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m12/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 788ms/step - accuracy: 0.9351 - loss: 0.3477max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m13/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 789ms/step - accuracy: 0.9349 - loss: 0.3482max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m14/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m17s\u001b[0m 788ms/step - accuracy: 0.9348 - loss: 0.3485max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m15/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m16s\u001b[0m 788ms/step - accuracy: 0.9346 - loss: 0.3488max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m16/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 787ms/step - accuracy: 0.9346 - loss: 0.3488max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m17/36\u001b[0m \u001b[32m━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 787ms/step - accuracy: 0.9346 - loss: 0.3489max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m18/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 787ms/step - accuracy: 0.9345 - loss: 0.3489max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m19/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m13s\u001b[0m 787ms/step - accuracy: 0.9345 - loss: 0.3489max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m20/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m12s\u001b[0m 787ms/step - accuracy: 0.9345 - loss: 0.3488max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m21/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 787ms/step - accuracy: 0.9345 - loss: 0.3488max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m22/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 787ms/step - accuracy: 0.9345 - loss: 0.3488max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m23/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m10s\u001b[0m 787ms/step - accuracy: 0.9345 - loss: 0.3489max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m24/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m9s\u001b[0m 787ms/step - accuracy: 0.9344 - loss: 0.3489 max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m25/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m8s\u001b[0m 787ms/step - accuracy: 0.9344 - loss: 0.3490max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m26/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━\u001b[0m \u001b[1m7s\u001b[0m 787ms/step - accuracy: 0.9344 - loss: 0.3490max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m27/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m7s\u001b[0m 788ms/step - accuracy: 0.9344 - loss: 0.3491max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m28/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m6s\u001b[0m 788ms/step - accuracy: 0.9343 - loss: 0.3491max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m29/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m5s\u001b[0m 788ms/step - accuracy: 0.9344 - loss: 0.3491max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m30/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m4s\u001b[0m 788ms/step - accuracy: 0.9344 - loss: 0.3491max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m31/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 789ms/step - accuracy: 0.9344 - loss: 0.3491max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m32/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 789ms/step - accuracy: 0.9344 - loss: 0.3491max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m33/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m2s\u001b[0m 789ms/step - accuracy: 0.9344 - loss: 0.3491max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m34/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m1s\u001b[0m 789ms/step - accuracy: 0.9344 - loss: 0.3491max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m35/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 789ms/step - accuracy: 0.9344 - loss: 0.3491max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 781ms/step - accuracy: 0.9344 - loss: 0.3492max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 810ms/step - accuracy: 0.9344 - loss: 0.3492 - val_accuracy: 0.8856 - val_loss: 0.5158 - learning_rate: 6.2500e-06\n",
      "Epoch 60/200\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 1/36\u001b[0m \u001b[37m━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m28s\u001b[0m 801ms/step - accuracy: 0.9388 - loss: 0.3433max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 2/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 786ms/step - accuracy: 0.9413 - loss: 0.3396max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 3/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 787ms/step - accuracy: 0.9411 - loss: 0.3399max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 4/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 790ms/step - accuracy: 0.9407 - loss: 0.3402max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 5/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 791ms/step - accuracy: 0.9403 - loss: 0.3404max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 6/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 789ms/step - accuracy: 0.9401 - loss: 0.3405max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 7/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 791ms/step - accuracy: 0.9399 - loss: 0.3405max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 8/36\u001b[0m \u001b[32m━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 791ms/step - accuracy: 0.9394 - loss: 0.3414max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 9/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 791ms/step - accuracy: 0.9388 - loss: 0.3424max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m10/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m20s\u001b[0m 791ms/step - accuracy: 0.9384 - loss: 0.3432max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m11/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 792ms/step - accuracy: 0.9380 - loss: 0.3440max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m12/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 792ms/step - accuracy: 0.9376 - loss: 0.3447max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m13/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 791ms/step - accuracy: 0.9373 - loss: 0.3451max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m14/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m17s\u001b[0m 792ms/step - accuracy: 0.9371 - loss: 0.3455max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m15/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m16s\u001b[0m 792ms/step - accuracy: 0.9370 - loss: 0.3458max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m16/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 792ms/step - accuracy: 0.9369 - loss: 0.3459max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m17/36\u001b[0m \u001b[32m━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 792ms/step - accuracy: 0.9369 - loss: 0.3460max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m18/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 792ms/step - accuracy: 0.9368 - loss: 0.3461max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m19/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m13s\u001b[0m 792ms/step - accuracy: 0.9367 - loss: 0.3462max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m20/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m12s\u001b[0m 792ms/step - accuracy: 0.9367 - loss: 0.3463max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m21/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 792ms/step - accuracy: 0.9366 - loss: 0.3464max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m22/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 793ms/step - accuracy: 0.9365 - loss: 0.3465max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m23/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m10s\u001b[0m 793ms/step - accuracy: 0.9365 - loss: 0.3465max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m24/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m9s\u001b[0m 793ms/step - accuracy: 0.9365 - loss: 0.3465 max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m25/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m8s\u001b[0m 793ms/step - accuracy: 0.9365 - loss: 0.3465max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m26/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━\u001b[0m \u001b[1m7s\u001b[0m 793ms/step - accuracy: 0.9364 - loss: 0.3466max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m27/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m7s\u001b[0m 794ms/step - accuracy: 0.9364 - loss: 0.3467max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m28/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m6s\u001b[0m 794ms/step - accuracy: 0.9363 - loss: 0.3468max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m29/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m5s\u001b[0m 794ms/step - accuracy: 0.9362 - loss: 0.3470max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m30/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m4s\u001b[0m 793ms/step - accuracy: 0.9362 - loss: 0.3471max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m31/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 793ms/step - accuracy: 0.9361 - loss: 0.3471max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m32/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 793ms/step - accuracy: 0.9361 - loss: 0.3472max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m33/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m2s\u001b[0m 793ms/step - accuracy: 0.9360 - loss: 0.3473max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m34/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m1s\u001b[0m 792ms/step - accuracy: 0.9360 - loss: 0.3474max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m35/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 792ms/step - accuracy: 0.9359 - loss: 0.3475max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 784ms/step - accuracy: 0.9359 - loss: 0.3476max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      " Saved checkpoint: checkpoints/segnet_epoch_060_vloss_0.5203.h5\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m30s\u001b[0m 831ms/step - accuracy: 0.9358 - loss: 0.3476 - val_accuracy: 0.8844 - val_loss: 0.5203 - learning_rate: 6.2500e-06\n",
      "Epoch 61/200\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 1/36\u001b[0m \u001b[37m━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m27s\u001b[0m 799ms/step - accuracy: 0.9181 - loss: 0.4056max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 2/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 781ms/step - accuracy: 0.9227 - loss: 0.3894max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 3/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 784ms/step - accuracy: 0.9260 - loss: 0.3783max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 4/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 785ms/step - accuracy: 0.9283 - loss: 0.3717max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 5/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 786ms/step - accuracy: 0.9297 - loss: 0.3674max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 6/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 789ms/step - accuracy: 0.9305 - loss: 0.3647max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 7/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 789ms/step - accuracy: 0.9308 - loss: 0.3636max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 8/36\u001b[0m \u001b[32m━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 789ms/step - accuracy: 0.9312 - loss: 0.3622max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 9/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 789ms/step - accuracy: 0.9316 - loss: 0.3608max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m10/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m20s\u001b[0m 789ms/step - accuracy: 0.9319 - loss: 0.3595max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m11/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 788ms/step - accuracy: 0.9322 - loss: 0.3585max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m12/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 790ms/step - accuracy: 0.9325 - loss: 0.3576max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m13/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 791ms/step - accuracy: 0.9327 - loss: 0.3568max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m14/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m17s\u001b[0m 791ms/step - accuracy: 0.9330 - loss: 0.3560max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m15/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m16s\u001b[0m 792ms/step - accuracy: 0.9332 - loss: 0.3552max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m16/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 793ms/step - accuracy: 0.9334 - loss: 0.3545max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m17/36\u001b[0m \u001b[32m━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 793ms/step - accuracy: 0.9335 - loss: 0.3540max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m18/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 794ms/step - accuracy: 0.9336 - loss: 0.3535max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m19/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m13s\u001b[0m 794ms/step - accuracy: 0.9338 - loss: 0.3529max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m20/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m12s\u001b[0m 794ms/step - accuracy: 0.9339 - loss: 0.3525max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m21/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 794ms/step - accuracy: 0.9340 - loss: 0.3521max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m22/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 794ms/step - accuracy: 0.9340 - loss: 0.3518max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m23/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m10s\u001b[0m 794ms/step - accuracy: 0.9341 - loss: 0.3516max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m24/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m9s\u001b[0m 793ms/step - accuracy: 0.9341 - loss: 0.3513 max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m25/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m8s\u001b[0m 793ms/step - accuracy: 0.9342 - loss: 0.3510max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m26/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━\u001b[0m \u001b[1m7s\u001b[0m 793ms/step - accuracy: 0.9342 - loss: 0.3508max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m27/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m7s\u001b[0m 793ms/step - accuracy: 0.9343 - loss: 0.3507max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m28/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m6s\u001b[0m 793ms/step - accuracy: 0.9343 - loss: 0.3505max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m29/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m5s\u001b[0m 793ms/step - accuracy: 0.9343 - loss: 0.3504max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m30/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m4s\u001b[0m 793ms/step - accuracy: 0.9344 - loss: 0.3502max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m31/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 793ms/step - accuracy: 0.9344 - loss: 0.3500max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m32/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 793ms/step - accuracy: 0.9345 - loss: 0.3499max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m33/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m2s\u001b[0m 793ms/step - accuracy: 0.9345 - loss: 0.3498max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m34/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m1s\u001b[0m 793ms/step - accuracy: 0.9345 - loss: 0.3497max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m35/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 793ms/step - accuracy: 0.9345 - loss: 0.3496max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 784ms/step - accuracy: 0.9345 - loss: 0.3496max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 814ms/step - accuracy: 0.9346 - loss: 0.3496 - val_accuracy: 0.8860 - val_loss: 0.5128 - learning_rate: 6.2500e-06\n",
      "Epoch 62/200\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 1/36\u001b[0m \u001b[37m━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m28s\u001b[0m 804ms/step - accuracy: 0.9441 - loss: 0.3230max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 2/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 782ms/step - accuracy: 0.9380 - loss: 0.3377max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 3/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 782ms/step - accuracy: 0.9361 - loss: 0.3427max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 4/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 784ms/step - accuracy: 0.9356 - loss: 0.3434max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 5/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 785ms/step - accuracy: 0.9355 - loss: 0.3434max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 6/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 786ms/step - accuracy: 0.9349 - loss: 0.3447max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 7/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 786ms/step - accuracy: 0.9348 - loss: 0.3449max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 8/36\u001b[0m \u001b[32m━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 787ms/step - accuracy: 0.9348 - loss: 0.3448max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 9/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 787ms/step - accuracy: 0.9348 - loss: 0.3447max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m10/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m20s\u001b[0m 788ms/step - accuracy: 0.9348 - loss: 0.3447max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m11/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 788ms/step - accuracy: 0.9348 - loss: 0.3446max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m12/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 788ms/step - accuracy: 0.9349 - loss: 0.3446max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m13/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 788ms/step - accuracy: 0.9349 - loss: 0.3446max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m14/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m17s\u001b[0m 788ms/step - accuracy: 0.9349 - loss: 0.3447max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m15/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m16s\u001b[0m 788ms/step - accuracy: 0.9349 - loss: 0.3447max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m16/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 789ms/step - accuracy: 0.9349 - loss: 0.3449max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m17/36\u001b[0m \u001b[32m━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 789ms/step - accuracy: 0.9349 - loss: 0.3451max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m18/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 789ms/step - accuracy: 0.9348 - loss: 0.3453max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m19/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m13s\u001b[0m 790ms/step - accuracy: 0.9348 - loss: 0.3455max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m20/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m12s\u001b[0m 790ms/step - accuracy: 0.9348 - loss: 0.3456max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m21/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 790ms/step - accuracy: 0.9348 - loss: 0.3457max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m22/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 791ms/step - accuracy: 0.9348 - loss: 0.3457max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m23/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m10s\u001b[0m 791ms/step - accuracy: 0.9348 - loss: 0.3456max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m24/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m9s\u001b[0m 791ms/step - accuracy: 0.9348 - loss: 0.3456 max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m25/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m8s\u001b[0m 791ms/step - accuracy: 0.9348 - loss: 0.3456max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m26/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━\u001b[0m \u001b[1m7s\u001b[0m 791ms/step - accuracy: 0.9348 - loss: 0.3456max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m27/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m7s\u001b[0m 791ms/step - accuracy: 0.9349 - loss: 0.3456max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m28/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m6s\u001b[0m 792ms/step - accuracy: 0.9349 - loss: 0.3456max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m29/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m5s\u001b[0m 792ms/step - accuracy: 0.9349 - loss: 0.3456max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m30/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m4s\u001b[0m 792ms/step - accuracy: 0.9349 - loss: 0.3456max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m31/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 792ms/step - accuracy: 0.9349 - loss: 0.3456max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m32/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 792ms/step - accuracy: 0.9349 - loss: 0.3457max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m33/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m2s\u001b[0m 792ms/step - accuracy: 0.9349 - loss: 0.3457max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m34/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m1s\u001b[0m 792ms/step - accuracy: 0.9349 - loss: 0.3457max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m35/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 793ms/step - accuracy: 0.9349 - loss: 0.3458max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 785ms/step - accuracy: 0.9350 - loss: 0.3458max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 814ms/step - accuracy: 0.9350 - loss: 0.3459 - val_accuracy: 0.8862 - val_loss: 0.5131 - learning_rate: 3.1250e-06\n",
      "Epoch 63/200\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 1/36\u001b[0m \u001b[37m━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m28s\u001b[0m 821ms/step - accuracy: 0.9337 - loss: 0.3485max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 2/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m27s\u001b[0m 795ms/step - accuracy: 0.9345 - loss: 0.3458max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 3/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 791ms/step - accuracy: 0.9347 - loss: 0.3449max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 4/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 789ms/step - accuracy: 0.9348 - loss: 0.3449max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 5/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 791ms/step - accuracy: 0.9351 - loss: 0.3446max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 6/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 792ms/step - accuracy: 0.9354 - loss: 0.3438max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 7/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 792ms/step - accuracy: 0.9355 - loss: 0.3439max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 8/36\u001b[0m \u001b[32m━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 792ms/step - accuracy: 0.9356 - loss: 0.3439max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 9/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 791ms/step - accuracy: 0.9357 - loss: 0.3438max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m10/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m20s\u001b[0m 791ms/step - accuracy: 0.9359 - loss: 0.3437max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m11/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 791ms/step - accuracy: 0.9361 - loss: 0.3435max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m12/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 792ms/step - accuracy: 0.9360 - loss: 0.3438max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m13/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 792ms/step - accuracy: 0.9360 - loss: 0.3440max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m14/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m17s\u001b[0m 792ms/step - accuracy: 0.9359 - loss: 0.3443max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m15/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m16s\u001b[0m 792ms/step - accuracy: 0.9358 - loss: 0.3448max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m16/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 793ms/step - accuracy: 0.9357 - loss: 0.3451max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m17/36\u001b[0m \u001b[32m━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 793ms/step - accuracy: 0.9357 - loss: 0.3453max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m18/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 792ms/step - accuracy: 0.9356 - loss: 0.3456max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m19/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m13s\u001b[0m 791ms/step - accuracy: 0.9356 - loss: 0.3457max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m20/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m12s\u001b[0m 791ms/step - accuracy: 0.9355 - loss: 0.3458max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m21/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 790ms/step - accuracy: 0.9355 - loss: 0.3459max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m22/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 790ms/step - accuracy: 0.9355 - loss: 0.3459max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m23/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m10s\u001b[0m 790ms/step - accuracy: 0.9355 - loss: 0.3459max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m24/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m9s\u001b[0m 791ms/step - accuracy: 0.9355 - loss: 0.3460 max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m25/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m8s\u001b[0m 791ms/step - accuracy: 0.9354 - loss: 0.3461max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m26/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━\u001b[0m \u001b[1m7s\u001b[0m 791ms/step - accuracy: 0.9354 - loss: 0.3462max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m27/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m7s\u001b[0m 791ms/step - accuracy: 0.9354 - loss: 0.3462max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m28/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m6s\u001b[0m 791ms/step - accuracy: 0.9354 - loss: 0.3462max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m29/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m5s\u001b[0m 792ms/step - accuracy: 0.9354 - loss: 0.3462max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m30/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m4s\u001b[0m 792ms/step - accuracy: 0.9354 - loss: 0.3462max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m31/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 792ms/step - accuracy: 0.9354 - loss: 0.3462max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m32/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 792ms/step - accuracy: 0.9354 - loss: 0.3462max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m33/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m2s\u001b[0m 792ms/step - accuracy: 0.9354 - loss: 0.3462max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m34/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m1s\u001b[0m 792ms/step - accuracy: 0.9354 - loss: 0.3462max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m35/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 792ms/step - accuracy: 0.9354 - loss: 0.3463max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 784ms/step - accuracy: 0.9354 - loss: 0.3463max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 814ms/step - accuracy: 0.9354 - loss: 0.3464 - val_accuracy: 0.8857 - val_loss: 0.5145 - learning_rate: 3.1250e-06\n",
      "Epoch 64/200\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 1/36\u001b[0m \u001b[37m━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m28s\u001b[0m 809ms/step - accuracy: 0.9342 - loss: 0.3489max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 2/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 785ms/step - accuracy: 0.9348 - loss: 0.3480max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 3/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 788ms/step - accuracy: 0.9338 - loss: 0.3507max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 4/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 790ms/step - accuracy: 0.9340 - loss: 0.3513max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 5/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 792ms/step - accuracy: 0.9343 - loss: 0.3508max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 6/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 792ms/step - accuracy: 0.9347 - loss: 0.3500max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 7/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 793ms/step - accuracy: 0.9349 - loss: 0.3494max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 8/36\u001b[0m \u001b[32m━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 793ms/step - accuracy: 0.9352 - loss: 0.3487max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 9/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 792ms/step - accuracy: 0.9353 - loss: 0.3482max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m10/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m20s\u001b[0m 792ms/step - accuracy: 0.9354 - loss: 0.3478max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m11/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 791ms/step - accuracy: 0.9355 - loss: 0.3476max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m12/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 791ms/step - accuracy: 0.9356 - loss: 0.3475max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m13/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 791ms/step - accuracy: 0.9356 - loss: 0.3474max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m14/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m17s\u001b[0m 790ms/step - accuracy: 0.9357 - loss: 0.3472max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m15/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m16s\u001b[0m 790ms/step - accuracy: 0.9357 - loss: 0.3472max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m16/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 790ms/step - accuracy: 0.9357 - loss: 0.3472max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m17/36\u001b[0m \u001b[32m━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 790ms/step - accuracy: 0.9358 - loss: 0.3470max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m18/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 790ms/step - accuracy: 0.9359 - loss: 0.3468max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m19/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m13s\u001b[0m 790ms/step - accuracy: 0.9359 - loss: 0.3466max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m20/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m12s\u001b[0m 790ms/step - accuracy: 0.9359 - loss: 0.3466max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m21/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 790ms/step - accuracy: 0.9359 - loss: 0.3466max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m22/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 789ms/step - accuracy: 0.9359 - loss: 0.3466max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m23/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m10s\u001b[0m 790ms/step - accuracy: 0.9359 - loss: 0.3467max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m24/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m9s\u001b[0m 790ms/step - accuracy: 0.9358 - loss: 0.3467 max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m25/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m8s\u001b[0m 790ms/step - accuracy: 0.9358 - loss: 0.3468max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m26/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━\u001b[0m \u001b[1m7s\u001b[0m 789ms/step - accuracy: 0.9357 - loss: 0.3470max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m27/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m7s\u001b[0m 789ms/step - accuracy: 0.9357 - loss: 0.3471max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m28/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m6s\u001b[0m 789ms/step - accuracy: 0.9357 - loss: 0.3471max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m29/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m5s\u001b[0m 789ms/step - accuracy: 0.9356 - loss: 0.3472max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m30/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m4s\u001b[0m 789ms/step - accuracy: 0.9356 - loss: 0.3472max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m31/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 789ms/step - accuracy: 0.9356 - loss: 0.3473max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m32/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 789ms/step - accuracy: 0.9356 - loss: 0.3473max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m33/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m2s\u001b[0m 789ms/step - accuracy: 0.9356 - loss: 0.3473max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m34/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m1s\u001b[0m 789ms/step - accuracy: 0.9356 - loss: 0.3473max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m35/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 789ms/step - accuracy: 0.9355 - loss: 0.3473max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 781ms/step - accuracy: 0.9355 - loss: 0.3473max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 810ms/step - accuracy: 0.9355 - loss: 0.3473 - val_accuracy: 0.8856 - val_loss: 0.5144 - learning_rate: 3.1250e-06\n",
      "Epoch 65/200\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 1/36\u001b[0m \u001b[37m━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m27s\u001b[0m 776ms/step - accuracy: 0.9345 - loss: 0.3509max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 2/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 785ms/step - accuracy: 0.9348 - loss: 0.3482max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 3/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 782ms/step - accuracy: 0.9354 - loss: 0.3460max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 4/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 785ms/step - accuracy: 0.9350 - loss: 0.3477max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 5/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 787ms/step - accuracy: 0.9350 - loss: 0.3481max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 6/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 789ms/step - accuracy: 0.9345 - loss: 0.3498max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 7/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 788ms/step - accuracy: 0.9343 - loss: 0.3505max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 8/36\u001b[0m \u001b[32m━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 787ms/step - accuracy: 0.9342 - loss: 0.3509max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 9/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 787ms/step - accuracy: 0.9342 - loss: 0.3509max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m10/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m20s\u001b[0m 788ms/step - accuracy: 0.9342 - loss: 0.3510max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m11/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 788ms/step - accuracy: 0.9343 - loss: 0.3506max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m12/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 787ms/step - accuracy: 0.9344 - loss: 0.3503max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m13/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 788ms/step - accuracy: 0.9345 - loss: 0.3499max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m14/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m17s\u001b[0m 788ms/step - accuracy: 0.9346 - loss: 0.3497max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m15/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m16s\u001b[0m 787ms/step - accuracy: 0.9347 - loss: 0.3494max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m16/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 788ms/step - accuracy: 0.9347 - loss: 0.3493max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m17/36\u001b[0m \u001b[32m━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 788ms/step - accuracy: 0.9347 - loss: 0.3493max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m18/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 788ms/step - accuracy: 0.9348 - loss: 0.3492max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m19/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m13s\u001b[0m 789ms/step - accuracy: 0.9348 - loss: 0.3491max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m20/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m12s\u001b[0m 789ms/step - accuracy: 0.9348 - loss: 0.3491max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m21/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 789ms/step - accuracy: 0.9348 - loss: 0.3490max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m22/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 789ms/step - accuracy: 0.9348 - loss: 0.3490max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m23/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m10s\u001b[0m 789ms/step - accuracy: 0.9347 - loss: 0.3490max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m24/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m9s\u001b[0m 789ms/step - accuracy: 0.9347 - loss: 0.3489 max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m25/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m8s\u001b[0m 789ms/step - accuracy: 0.9347 - loss: 0.3489max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m26/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━\u001b[0m \u001b[1m7s\u001b[0m 789ms/step - accuracy: 0.9347 - loss: 0.3488max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m27/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m7s\u001b[0m 789ms/step - accuracy: 0.9348 - loss: 0.3487max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m28/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m6s\u001b[0m 789ms/step - accuracy: 0.9348 - loss: 0.3486max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m29/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m5s\u001b[0m 789ms/step - accuracy: 0.9348 - loss: 0.3486max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m30/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m4s\u001b[0m 789ms/step - accuracy: 0.9348 - loss: 0.3485max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m31/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 789ms/step - accuracy: 0.9348 - loss: 0.3484max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m32/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 789ms/step - accuracy: 0.9348 - loss: 0.3483max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m33/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m2s\u001b[0m 789ms/step - accuracy: 0.9349 - loss: 0.3483max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m34/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m1s\u001b[0m 789ms/step - accuracy: 0.9349 - loss: 0.3482max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m35/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 789ms/step - accuracy: 0.9349 - loss: 0.3482max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 781ms/step - accuracy: 0.9349 - loss: 0.3481max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 810ms/step - accuracy: 0.9349 - loss: 0.3481 - val_accuracy: 0.8860 - val_loss: 0.5129 - learning_rate: 1.5625e-06\n",
      "Epoch 66/200\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 1/36\u001b[0m \u001b[37m━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m28s\u001b[0m 808ms/step - accuracy: 0.9430 - loss: 0.3182max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 2/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 786ms/step - accuracy: 0.9448 - loss: 0.3149max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 3/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 787ms/step - accuracy: 0.9437 - loss: 0.3187max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 4/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 786ms/step - accuracy: 0.9426 - loss: 0.3219max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 5/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 787ms/step - accuracy: 0.9419 - loss: 0.3239max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 6/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 787ms/step - accuracy: 0.9413 - loss: 0.3260max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 7/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 789ms/step - accuracy: 0.9408 - loss: 0.3276max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 8/36\u001b[0m \u001b[32m━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 790ms/step - accuracy: 0.9404 - loss: 0.3286max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 9/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 791ms/step - accuracy: 0.9402 - loss: 0.3294max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m10/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m20s\u001b[0m 790ms/step - accuracy: 0.9399 - loss: 0.3303max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m11/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 789ms/step - accuracy: 0.9397 - loss: 0.3312max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m12/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 789ms/step - accuracy: 0.9395 - loss: 0.3317max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m13/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 789ms/step - accuracy: 0.9394 - loss: 0.3322max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m14/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m17s\u001b[0m 790ms/step - accuracy: 0.9393 - loss: 0.3326max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m15/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m16s\u001b[0m 790ms/step - accuracy: 0.9392 - loss: 0.3329max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m16/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 789ms/step - accuracy: 0.9391 - loss: 0.3333max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m17/36\u001b[0m \u001b[32m━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 789ms/step - accuracy: 0.9389 - loss: 0.3338max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m18/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 789ms/step - accuracy: 0.9388 - loss: 0.3344max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m19/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m13s\u001b[0m 789ms/step - accuracy: 0.9386 - loss: 0.3350max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m20/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m12s\u001b[0m 789ms/step - accuracy: 0.9384 - loss: 0.3355max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m21/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 789ms/step - accuracy: 0.9382 - loss: 0.3361max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m22/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 788ms/step - accuracy: 0.9380 - loss: 0.3366max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m23/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m10s\u001b[0m 788ms/step - accuracy: 0.9379 - loss: 0.3371max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m24/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m9s\u001b[0m 788ms/step - accuracy: 0.9378 - loss: 0.3375 max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m25/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m8s\u001b[0m 788ms/step - accuracy: 0.9376 - loss: 0.3379max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m26/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━\u001b[0m \u001b[1m7s\u001b[0m 788ms/step - accuracy: 0.9375 - loss: 0.3383max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m27/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m7s\u001b[0m 788ms/step - accuracy: 0.9375 - loss: 0.3385max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m28/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m6s\u001b[0m 788ms/step - accuracy: 0.9374 - loss: 0.3388max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m29/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m5s\u001b[0m 787ms/step - accuracy: 0.9373 - loss: 0.3390max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m30/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m4s\u001b[0m 787ms/step - accuracy: 0.9373 - loss: 0.3393max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m31/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 787ms/step - accuracy: 0.9372 - loss: 0.3395max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m32/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 787ms/step - accuracy: 0.9371 - loss: 0.3398max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m33/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m2s\u001b[0m 787ms/step - accuracy: 0.9371 - loss: 0.3400max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m34/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m1s\u001b[0m 787ms/step - accuracy: 0.9370 - loss: 0.3402max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m35/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 787ms/step - accuracy: 0.9370 - loss: 0.3404max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 779ms/step - accuracy: 0.9369 - loss: 0.3406max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 808ms/step - accuracy: 0.9369 - loss: 0.3408 - val_accuracy: 0.8860 - val_loss: 0.5121 - learning_rate: 1.5625e-06\n",
      "Epoch 67/200\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 1/36\u001b[0m \u001b[37m━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m28s\u001b[0m 801ms/step - accuracy: 0.9198 - loss: 0.3922max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 2/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 793ms/step - accuracy: 0.9189 - loss: 0.3960max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 3/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 792ms/step - accuracy: 0.9216 - loss: 0.3877max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 4/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 793ms/step - accuracy: 0.9237 - loss: 0.3812max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 5/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 791ms/step - accuracy: 0.9256 - loss: 0.3752max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 6/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 790ms/step - accuracy: 0.9268 - loss: 0.3713max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 7/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 789ms/step - accuracy: 0.9276 - loss: 0.3691max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 8/36\u001b[0m \u001b[32m━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 789ms/step - accuracy: 0.9282 - loss: 0.3674max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 9/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 789ms/step - accuracy: 0.9287 - loss: 0.3661max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m10/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m20s\u001b[0m 789ms/step - accuracy: 0.9292 - loss: 0.3649max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m11/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 790ms/step - accuracy: 0.9296 - loss: 0.3637max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m12/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 790ms/step - accuracy: 0.9300 - loss: 0.3625max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m13/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 789ms/step - accuracy: 0.9304 - loss: 0.3614max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m14/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m17s\u001b[0m 789ms/step - accuracy: 0.9307 - loss: 0.3607max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m15/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m16s\u001b[0m 789ms/step - accuracy: 0.9309 - loss: 0.3601max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m16/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 789ms/step - accuracy: 0.9310 - loss: 0.3597max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m17/36\u001b[0m \u001b[32m━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 789ms/step - accuracy: 0.9312 - loss: 0.3593max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m18/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 789ms/step - accuracy: 0.9313 - loss: 0.3589max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m19/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m13s\u001b[0m 790ms/step - accuracy: 0.9314 - loss: 0.3586max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m20/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m12s\u001b[0m 790ms/step - accuracy: 0.9315 - loss: 0.3583max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m21/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 790ms/step - accuracy: 0.9317 - loss: 0.3579max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m22/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 790ms/step - accuracy: 0.9318 - loss: 0.3576max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m23/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m10s\u001b[0m 791ms/step - accuracy: 0.9319 - loss: 0.3573max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m24/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m9s\u001b[0m 791ms/step - accuracy: 0.9320 - loss: 0.3570 max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m25/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m8s\u001b[0m 791ms/step - accuracy: 0.9321 - loss: 0.3568max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m26/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━\u001b[0m \u001b[1m7s\u001b[0m 791ms/step - accuracy: 0.9322 - loss: 0.3565max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m27/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m7s\u001b[0m 791ms/step - accuracy: 0.9322 - loss: 0.3563max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m28/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m6s\u001b[0m 791ms/step - accuracy: 0.9323 - loss: 0.3561max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m29/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m5s\u001b[0m 791ms/step - accuracy: 0.9324 - loss: 0.3559max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m30/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m4s\u001b[0m 791ms/step - accuracy: 0.9325 - loss: 0.3557max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m31/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 792ms/step - accuracy: 0.9325 - loss: 0.3555max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m32/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 792ms/step - accuracy: 0.9326 - loss: 0.3553max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m33/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m2s\u001b[0m 792ms/step - accuracy: 0.9327 - loss: 0.3551max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m34/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m1s\u001b[0m 792ms/step - accuracy: 0.9328 - loss: 0.3549max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m35/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 793ms/step - accuracy: 0.9328 - loss: 0.3547max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 784ms/step - accuracy: 0.9329 - loss: 0.3545max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 815ms/step - accuracy: 0.9329 - loss: 0.3543 - val_accuracy: 0.8865 - val_loss: 0.5112 - learning_rate: 1.5625e-06\n",
      "Epoch 68/200\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 1/36\u001b[0m \u001b[37m━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m28s\u001b[0m 803ms/step - accuracy: 0.9378 - loss: 0.3478max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 2/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 789ms/step - accuracy: 0.9374 - loss: 0.3468max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 3/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 790ms/step - accuracy: 0.9375 - loss: 0.3454max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 4/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 791ms/step - accuracy: 0.9367 - loss: 0.3470max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 5/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 790ms/step - accuracy: 0.9360 - loss: 0.3488max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 6/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 789ms/step - accuracy: 0.9359 - loss: 0.3491max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 7/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 791ms/step - accuracy: 0.9358 - loss: 0.3492max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 8/36\u001b[0m \u001b[32m━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 791ms/step - accuracy: 0.9358 - loss: 0.3491max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 9/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 791ms/step - accuracy: 0.9355 - loss: 0.3496max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m10/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m20s\u001b[0m 792ms/step - accuracy: 0.9353 - loss: 0.3500max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m11/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 791ms/step - accuracy: 0.9350 - loss: 0.3507max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m12/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 791ms/step - accuracy: 0.9347 - loss: 0.3513max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m13/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 790ms/step - accuracy: 0.9346 - loss: 0.3515max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m14/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m17s\u001b[0m 790ms/step - accuracy: 0.9345 - loss: 0.3516max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m15/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m16s\u001b[0m 789ms/step - accuracy: 0.9345 - loss: 0.3516max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m16/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 789ms/step - accuracy: 0.9345 - loss: 0.3516max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m17/36\u001b[0m \u001b[32m━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 789ms/step - accuracy: 0.9345 - loss: 0.3514max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m18/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 789ms/step - accuracy: 0.9345 - loss: 0.3513max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m19/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m13s\u001b[0m 789ms/step - accuracy: 0.9345 - loss: 0.3511max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m20/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m12s\u001b[0m 789ms/step - accuracy: 0.9346 - loss: 0.3509max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m21/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 789ms/step - accuracy: 0.9346 - loss: 0.3507max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m22/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 789ms/step - accuracy: 0.9346 - loss: 0.3506max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m23/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m10s\u001b[0m 789ms/step - accuracy: 0.9346 - loss: 0.3504max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m24/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m9s\u001b[0m 789ms/step - accuracy: 0.9346 - loss: 0.3503 max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m25/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m8s\u001b[0m 789ms/step - accuracy: 0.9347 - loss: 0.3502max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m26/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━\u001b[0m \u001b[1m7s\u001b[0m 789ms/step - accuracy: 0.9347 - loss: 0.3500max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m27/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m7s\u001b[0m 789ms/step - accuracy: 0.9348 - loss: 0.3498max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m28/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m6s\u001b[0m 789ms/step - accuracy: 0.9348 - loss: 0.3497max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m29/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m5s\u001b[0m 789ms/step - accuracy: 0.9348 - loss: 0.3496max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m30/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m4s\u001b[0m 789ms/step - accuracy: 0.9348 - loss: 0.3495max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m31/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 789ms/step - accuracy: 0.9348 - loss: 0.3494max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m32/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 789ms/step - accuracy: 0.9348 - loss: 0.3494max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m33/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m2s\u001b[0m 789ms/step - accuracy: 0.9348 - loss: 0.3494max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m34/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m1s\u001b[0m 789ms/step - accuracy: 0.9348 - loss: 0.3494max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m35/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 789ms/step - accuracy: 0.9348 - loss: 0.3494max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 780ms/step - accuracy: 0.9348 - loss: 0.3493max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 810ms/step - accuracy: 0.9348 - loss: 0.3493 - val_accuracy: 0.8860 - val_loss: 0.5132 - learning_rate: 1.5625e-06\n",
      "Epoch 69/200\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 1/36\u001b[0m \u001b[37m━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m27s\u001b[0m 788ms/step - accuracy: 0.9331 - loss: 0.3462max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 2/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 789ms/step - accuracy: 0.9358 - loss: 0.3388max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 3/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 788ms/step - accuracy: 0.9361 - loss: 0.3377max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 4/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 788ms/step - accuracy: 0.9361 - loss: 0.3380max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 5/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 790ms/step - accuracy: 0.9360 - loss: 0.3383max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 6/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 789ms/step - accuracy: 0.9361 - loss: 0.3381max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 7/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 790ms/step - accuracy: 0.9363 - loss: 0.3380max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 8/36\u001b[0m \u001b[32m━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 789ms/step - accuracy: 0.9364 - loss: 0.3379max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 9/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 789ms/step - accuracy: 0.9364 - loss: 0.3380max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m10/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m20s\u001b[0m 788ms/step - accuracy: 0.9364 - loss: 0.3382max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m11/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 789ms/step - accuracy: 0.9365 - loss: 0.3385max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m12/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 789ms/step - accuracy: 0.9366 - loss: 0.3386max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m13/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 789ms/step - accuracy: 0.9367 - loss: 0.3386max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m14/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m17s\u001b[0m 788ms/step - accuracy: 0.9367 - loss: 0.3387max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m15/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m16s\u001b[0m 789ms/step - accuracy: 0.9367 - loss: 0.3389max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m16/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 789ms/step - accuracy: 0.9367 - loss: 0.3391max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m17/36\u001b[0m \u001b[32m━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 789ms/step - accuracy: 0.9367 - loss: 0.3392max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m18/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 790ms/step - accuracy: 0.9367 - loss: 0.3394max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m19/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m13s\u001b[0m 790ms/step - accuracy: 0.9367 - loss: 0.3395max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m20/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m12s\u001b[0m 791ms/step - accuracy: 0.9367 - loss: 0.3396max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m21/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 791ms/step - accuracy: 0.9367 - loss: 0.3398max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m22/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 791ms/step - accuracy: 0.9367 - loss: 0.3398max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m23/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m10s\u001b[0m 791ms/step - accuracy: 0.9367 - loss: 0.3400max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m24/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m9s\u001b[0m 791ms/step - accuracy: 0.9367 - loss: 0.3401 max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m25/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m8s\u001b[0m 791ms/step - accuracy: 0.9366 - loss: 0.3403max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m26/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━\u001b[0m \u001b[1m7s\u001b[0m 790ms/step - accuracy: 0.9366 - loss: 0.3405max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m27/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m7s\u001b[0m 790ms/step - accuracy: 0.9366 - loss: 0.3406max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m28/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m6s\u001b[0m 790ms/step - accuracy: 0.9366 - loss: 0.3407max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m29/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m5s\u001b[0m 790ms/step - accuracy: 0.9365 - loss: 0.3408max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m30/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m4s\u001b[0m 790ms/step - accuracy: 0.9365 - loss: 0.3410max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m31/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 790ms/step - accuracy: 0.9365 - loss: 0.3411max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m32/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 790ms/step - accuracy: 0.9365 - loss: 0.3413max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m33/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m2s\u001b[0m 791ms/step - accuracy: 0.9364 - loss: 0.3414max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m34/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m1s\u001b[0m 791ms/step - accuracy: 0.9364 - loss: 0.3416max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m35/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 791ms/step - accuracy: 0.9364 - loss: 0.3417max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 783ms/step - accuracy: 0.9363 - loss: 0.3418max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 813ms/step - accuracy: 0.9363 - loss: 0.3419 - val_accuracy: 0.8851 - val_loss: 0.5155 - learning_rate: 1.5625e-06\n",
      "Epoch 70/200\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 1/36\u001b[0m \u001b[37m━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m27s\u001b[0m 799ms/step - accuracy: 0.9433 - loss: 0.3217max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 2/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 785ms/step - accuracy: 0.9429 - loss: 0.3220max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 3/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 786ms/step - accuracy: 0.9412 - loss: 0.3267max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 4/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 791ms/step - accuracy: 0.9402 - loss: 0.3302max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 5/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 792ms/step - accuracy: 0.9394 - loss: 0.3327max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 6/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 792ms/step - accuracy: 0.9389 - loss: 0.3341max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 7/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 791ms/step - accuracy: 0.9388 - loss: 0.3345max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 8/36\u001b[0m \u001b[32m━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 791ms/step - accuracy: 0.9386 - loss: 0.3351max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 9/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 792ms/step - accuracy: 0.9384 - loss: 0.3358max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m10/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m20s\u001b[0m 792ms/step - accuracy: 0.9384 - loss: 0.3361max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m11/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 791ms/step - accuracy: 0.9383 - loss: 0.3364max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m12/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 791ms/step - accuracy: 0.9383 - loss: 0.3365max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m13/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 792ms/step - accuracy: 0.9383 - loss: 0.3366max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m14/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m17s\u001b[0m 792ms/step - accuracy: 0.9383 - loss: 0.3368max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m15/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m16s\u001b[0m 792ms/step - accuracy: 0.9383 - loss: 0.3369max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m16/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 792ms/step - accuracy: 0.9382 - loss: 0.3370max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m17/36\u001b[0m \u001b[32m━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 792ms/step - accuracy: 0.9382 - loss: 0.3371max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m18/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 792ms/step - accuracy: 0.9382 - loss: 0.3373max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m19/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m13s\u001b[0m 792ms/step - accuracy: 0.9381 - loss: 0.3375max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m20/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m12s\u001b[0m 792ms/step - accuracy: 0.9381 - loss: 0.3377max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m21/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 792ms/step - accuracy: 0.9380 - loss: 0.3380max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m22/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 792ms/step - accuracy: 0.9379 - loss: 0.3384max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m23/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m10s\u001b[0m 792ms/step - accuracy: 0.9377 - loss: 0.3387max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m24/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m9s\u001b[0m 792ms/step - accuracy: 0.9376 - loss: 0.3391 max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m25/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m8s\u001b[0m 792ms/step - accuracy: 0.9375 - loss: 0.3395max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m26/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━\u001b[0m \u001b[1m7s\u001b[0m 792ms/step - accuracy: 0.9374 - loss: 0.3399max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m27/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m7s\u001b[0m 792ms/step - accuracy: 0.9373 - loss: 0.3402max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m28/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m6s\u001b[0m 792ms/step - accuracy: 0.9372 - loss: 0.3404max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m29/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m5s\u001b[0m 792ms/step - accuracy: 0.9371 - loss: 0.3407max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m30/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m4s\u001b[0m 792ms/step - accuracy: 0.9370 - loss: 0.3409max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m31/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 792ms/step - accuracy: 0.9370 - loss: 0.3410max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m32/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 792ms/step - accuracy: 0.9369 - loss: 0.3412max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m33/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m2s\u001b[0m 792ms/step - accuracy: 0.9369 - loss: 0.3413max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m34/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m1s\u001b[0m 792ms/step - accuracy: 0.9369 - loss: 0.3414max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m35/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 792ms/step - accuracy: 0.9368 - loss: 0.3415max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 784ms/step - accuracy: 0.9368 - loss: 0.3417max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      " Saved checkpoint: checkpoints/segnet_epoch_070_vloss_0.5150.h5\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m30s\u001b[0m 831ms/step - accuracy: 0.9367 - loss: 0.3418 - val_accuracy: 0.8854 - val_loss: 0.5150 - learning_rate: 1.5625e-06\n",
      "Epoch 71/200\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 1/36\u001b[0m \u001b[37m━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m28s\u001b[0m 811ms/step - accuracy: 0.9301 - loss: 0.3655max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 2/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m27s\u001b[0m 819ms/step - accuracy: 0.9273 - loss: 0.3748max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 3/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 813ms/step - accuracy: 0.9271 - loss: 0.3752max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 4/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 805ms/step - accuracy: 0.9277 - loss: 0.3730max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 5/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 801ms/step - accuracy: 0.9279 - loss: 0.3720max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 6/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 799ms/step - accuracy: 0.9278 - loss: 0.3719max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 7/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 799ms/step - accuracy: 0.9279 - loss: 0.3711max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 8/36\u001b[0m \u001b[32m━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 799ms/step - accuracy: 0.9282 - loss: 0.3701max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 9/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 797ms/step - accuracy: 0.9284 - loss: 0.3691max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m10/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m20s\u001b[0m 798ms/step - accuracy: 0.9287 - loss: 0.3681max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m11/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 797ms/step - accuracy: 0.9290 - loss: 0.3671max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m12/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 797ms/step - accuracy: 0.9294 - loss: 0.3659max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m13/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 795ms/step - accuracy: 0.9297 - loss: 0.3650max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m14/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m17s\u001b[0m 796ms/step - accuracy: 0.9299 - loss: 0.3640max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m15/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m16s\u001b[0m 797ms/step - accuracy: 0.9302 - loss: 0.3631max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m16/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 798ms/step - accuracy: 0.9305 - loss: 0.3622max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m17/36\u001b[0m \u001b[32m━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 799ms/step - accuracy: 0.9307 - loss: 0.3615max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m18/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 799ms/step - accuracy: 0.9308 - loss: 0.3609max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m19/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m13s\u001b[0m 799ms/step - accuracy: 0.9310 - loss: 0.3604max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m20/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m12s\u001b[0m 799ms/step - accuracy: 0.9312 - loss: 0.3598max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m21/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 799ms/step - accuracy: 0.9313 - loss: 0.3593max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m22/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 798ms/step - accuracy: 0.9315 - loss: 0.3588max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m23/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m10s\u001b[0m 798ms/step - accuracy: 0.9317 - loss: 0.3582max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m24/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m9s\u001b[0m 798ms/step - accuracy: 0.9318 - loss: 0.3577 max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m25/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m8s\u001b[0m 798ms/step - accuracy: 0.9320 - loss: 0.3573max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m26/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━\u001b[0m \u001b[1m7s\u001b[0m 798ms/step - accuracy: 0.9321 - loss: 0.3568max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m27/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m7s\u001b[0m 797ms/step - accuracy: 0.9323 - loss: 0.3563max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m28/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m6s\u001b[0m 797ms/step - accuracy: 0.9324 - loss: 0.3559max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m29/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m5s\u001b[0m 797ms/step - accuracy: 0.9325 - loss: 0.3555max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m30/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m4s\u001b[0m 797ms/step - accuracy: 0.9326 - loss: 0.3552max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m31/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 797ms/step - accuracy: 0.9327 - loss: 0.3550max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m32/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 797ms/step - accuracy: 0.9328 - loss: 0.3547max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m33/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m2s\u001b[0m 796ms/step - accuracy: 0.9329 - loss: 0.3545max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m34/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m1s\u001b[0m 796ms/step - accuracy: 0.9329 - loss: 0.3543max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m35/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 796ms/step - accuracy: 0.9330 - loss: 0.3542max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 787ms/step - accuracy: 0.9331 - loss: 0.3540max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 817ms/step - accuracy: 0.9331 - loss: 0.3539 - val_accuracy: 0.8859 - val_loss: 0.5123 - learning_rate: 1.0000e-06\n",
      "Epoch 72/200\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 1/36\u001b[0m \u001b[37m━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m28s\u001b[0m 806ms/step - accuracy: 0.9366 - loss: 0.3365max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 2/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 787ms/step - accuracy: 0.9380 - loss: 0.3339max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 3/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 788ms/step - accuracy: 0.9390 - loss: 0.3322max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 4/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 789ms/step - accuracy: 0.9393 - loss: 0.3322max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 5/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 789ms/step - accuracy: 0.9391 - loss: 0.3328max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 6/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 789ms/step - accuracy: 0.9385 - loss: 0.3348max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 7/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 790ms/step - accuracy: 0.9382 - loss: 0.3359max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 8/36\u001b[0m \u001b[32m━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 789ms/step - accuracy: 0.9381 - loss: 0.3364max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 9/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 789ms/step - accuracy: 0.9380 - loss: 0.3369max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m10/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m20s\u001b[0m 789ms/step - accuracy: 0.9379 - loss: 0.3373max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m11/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 789ms/step - accuracy: 0.9378 - loss: 0.3375max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m12/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 790ms/step - accuracy: 0.9378 - loss: 0.3374max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m13/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 790ms/step - accuracy: 0.9379 - loss: 0.3373max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m14/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m17s\u001b[0m 790ms/step - accuracy: 0.9379 - loss: 0.3372max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m15/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m16s\u001b[0m 790ms/step - accuracy: 0.9379 - loss: 0.3373max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m16/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 790ms/step - accuracy: 0.9378 - loss: 0.3374max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m17/36\u001b[0m \u001b[32m━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 799ms/step - accuracy: 0.9378 - loss: 0.3376max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m18/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 799ms/step - accuracy: 0.9378 - loss: 0.3377max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m19/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m13s\u001b[0m 798ms/step - accuracy: 0.9377 - loss: 0.3378max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m20/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m12s\u001b[0m 798ms/step - accuracy: 0.9377 - loss: 0.3380max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m21/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 797ms/step - accuracy: 0.9376 - loss: 0.3382max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m22/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 797ms/step - accuracy: 0.9376 - loss: 0.3384max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m23/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m10s\u001b[0m 796ms/step - accuracy: 0.9375 - loss: 0.3386max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m24/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m9s\u001b[0m 796ms/step - accuracy: 0.9375 - loss: 0.3387 max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m25/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m8s\u001b[0m 796ms/step - accuracy: 0.9374 - loss: 0.3389max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m26/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━\u001b[0m \u001b[1m7s\u001b[0m 796ms/step - accuracy: 0.9374 - loss: 0.3391max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m27/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m7s\u001b[0m 795ms/step - accuracy: 0.9374 - loss: 0.3393max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m28/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m6s\u001b[0m 795ms/step - accuracy: 0.9373 - loss: 0.3394max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m29/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m5s\u001b[0m 795ms/step - accuracy: 0.9373 - loss: 0.3396max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m30/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m4s\u001b[0m 795ms/step - accuracy: 0.9372 - loss: 0.3398max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m31/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 795ms/step - accuracy: 0.9372 - loss: 0.3399max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m32/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 795ms/step - accuracy: 0.9371 - loss: 0.3401max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m33/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m2s\u001b[0m 795ms/step - accuracy: 0.9371 - loss: 0.3403max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m34/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m1s\u001b[0m 795ms/step - accuracy: 0.9370 - loss: 0.3405max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m35/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 795ms/step - accuracy: 0.9370 - loss: 0.3406max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 787ms/step - accuracy: 0.9369 - loss: 0.3408max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 817ms/step - accuracy: 0.9369 - loss: 0.3409 - val_accuracy: 0.8854 - val_loss: 0.5143 - learning_rate: 1.0000e-06\n",
      "Epoch 73/200\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 1/36\u001b[0m \u001b[37m━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m28s\u001b[0m 819ms/step - accuracy: 0.9315 - loss: 0.3583max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 2/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m27s\u001b[0m 798ms/step - accuracy: 0.9303 - loss: 0.3613max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 3/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 797ms/step - accuracy: 0.9307 - loss: 0.3598max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 4/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 794ms/step - accuracy: 0.9310 - loss: 0.3585max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 5/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 793ms/step - accuracy: 0.9310 - loss: 0.3583max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 6/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 791ms/step - accuracy: 0.9314 - loss: 0.3570max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 7/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 792ms/step - accuracy: 0.9316 - loss: 0.3563max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 8/36\u001b[0m \u001b[32m━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 793ms/step - accuracy: 0.9317 - loss: 0.3561max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 9/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 794ms/step - accuracy: 0.9318 - loss: 0.3557max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m10/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m20s\u001b[0m 794ms/step - accuracy: 0.9319 - loss: 0.3553max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m11/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 796ms/step - accuracy: 0.9321 - loss: 0.3548max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m12/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 796ms/step - accuracy: 0.9322 - loss: 0.3544max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m13/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 796ms/step - accuracy: 0.9324 - loss: 0.3539max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m14/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m17s\u001b[0m 795ms/step - accuracy: 0.9325 - loss: 0.3537max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m15/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m16s\u001b[0m 795ms/step - accuracy: 0.9326 - loss: 0.3534max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m16/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 794ms/step - accuracy: 0.9327 - loss: 0.3531max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m17/36\u001b[0m \u001b[32m━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 795ms/step - accuracy: 0.9328 - loss: 0.3528max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m18/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 795ms/step - accuracy: 0.9329 - loss: 0.3524max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m19/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m13s\u001b[0m 795ms/step - accuracy: 0.9330 - loss: 0.3521max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m20/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m12s\u001b[0m 796ms/step - accuracy: 0.9331 - loss: 0.3518max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m21/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 795ms/step - accuracy: 0.9332 - loss: 0.3515max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m22/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 795ms/step - accuracy: 0.9332 - loss: 0.3513max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m23/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m10s\u001b[0m 795ms/step - accuracy: 0.9333 - loss: 0.3510max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m24/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m9s\u001b[0m 794ms/step - accuracy: 0.9334 - loss: 0.3507 max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m25/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m8s\u001b[0m 794ms/step - accuracy: 0.9335 - loss: 0.3504max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m26/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━\u001b[0m \u001b[1m7s\u001b[0m 793ms/step - accuracy: 0.9336 - loss: 0.3502max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m27/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m7s\u001b[0m 794ms/step - accuracy: 0.9336 - loss: 0.3500max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m28/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m6s\u001b[0m 794ms/step - accuracy: 0.9337 - loss: 0.3498max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m29/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m5s\u001b[0m 794ms/step - accuracy: 0.9338 - loss: 0.3497max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m30/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m4s\u001b[0m 794ms/step - accuracy: 0.9338 - loss: 0.3495max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m31/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 794ms/step - accuracy: 0.9339 - loss: 0.3493max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m32/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 794ms/step - accuracy: 0.9340 - loss: 0.3492max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m33/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m2s\u001b[0m 793ms/step - accuracy: 0.9340 - loss: 0.3490max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m34/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m1s\u001b[0m 794ms/step - accuracy: 0.9340 - loss: 0.3489max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m35/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 793ms/step - accuracy: 0.9341 - loss: 0.3488max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 785ms/step - accuracy: 0.9341 - loss: 0.3487max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 815ms/step - accuracy: 0.9342 - loss: 0.3487 - val_accuracy: 0.8857 - val_loss: 0.5132 - learning_rate: 1.0000e-06\n",
      "Epoch 74/200\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 1/36\u001b[0m \u001b[37m━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m28s\u001b[0m 814ms/step - accuracy: 0.9261 - loss: 0.3710max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 2/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 785ms/step - accuracy: 0.9275 - loss: 0.3692max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 3/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 784ms/step - accuracy: 0.9277 - loss: 0.3687max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 4/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 785ms/step - accuracy: 0.9280 - loss: 0.3679max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 5/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 787ms/step - accuracy: 0.9281 - loss: 0.3674max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 6/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 789ms/step - accuracy: 0.9285 - loss: 0.3661max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 7/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 790ms/step - accuracy: 0.9290 - loss: 0.3644max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 8/36\u001b[0m \u001b[32m━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 791ms/step - accuracy: 0.9294 - loss: 0.3629max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 9/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 790ms/step - accuracy: 0.9298 - loss: 0.3617max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m10/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m20s\u001b[0m 790ms/step - accuracy: 0.9303 - loss: 0.3603max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m11/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 791ms/step - accuracy: 0.9307 - loss: 0.3591max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m12/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 791ms/step - accuracy: 0.9310 - loss: 0.3581max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m13/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 791ms/step - accuracy: 0.9314 - loss: 0.3570max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m14/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m17s\u001b[0m 791ms/step - accuracy: 0.9317 - loss: 0.3562max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m15/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m16s\u001b[0m 791ms/step - accuracy: 0.9319 - loss: 0.3555max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m16/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 790ms/step - accuracy: 0.9321 - loss: 0.3548max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m17/36\u001b[0m \u001b[32m━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 790ms/step - accuracy: 0.9324 - loss: 0.3541max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m18/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 791ms/step - accuracy: 0.9325 - loss: 0.3535max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m19/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m13s\u001b[0m 791ms/step - accuracy: 0.9327 - loss: 0.3531max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m20/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m12s\u001b[0m 790ms/step - accuracy: 0.9328 - loss: 0.3527max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m21/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 790ms/step - accuracy: 0.9329 - loss: 0.3523max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m22/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 790ms/step - accuracy: 0.9331 - loss: 0.3519max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m23/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m10s\u001b[0m 790ms/step - accuracy: 0.9331 - loss: 0.3516max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m24/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m9s\u001b[0m 790ms/step - accuracy: 0.9332 - loss: 0.3513 max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m25/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m8s\u001b[0m 790ms/step - accuracy: 0.9334 - loss: 0.3509max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m26/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━\u001b[0m \u001b[1m7s\u001b[0m 790ms/step - accuracy: 0.9335 - loss: 0.3506max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m27/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m7s\u001b[0m 790ms/step - accuracy: 0.9336 - loss: 0.3503max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m28/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m6s\u001b[0m 790ms/step - accuracy: 0.9337 - loss: 0.3500max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m29/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m5s\u001b[0m 791ms/step - accuracy: 0.9338 - loss: 0.3498max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m30/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m4s\u001b[0m 791ms/step - accuracy: 0.9338 - loss: 0.3496max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m31/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 791ms/step - accuracy: 0.9339 - loss: 0.3495max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m32/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 791ms/step - accuracy: 0.9339 - loss: 0.3493max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m33/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m2s\u001b[0m 791ms/step - accuracy: 0.9340 - loss: 0.3490max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m34/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m1s\u001b[0m 791ms/step - accuracy: 0.9341 - loss: 0.3489max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m35/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 791ms/step - accuracy: 0.9341 - loss: 0.3488max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 783ms/step - accuracy: 0.9342 - loss: 0.3486max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 812ms/step - accuracy: 0.9342 - loss: 0.3485 - val_accuracy: 0.8857 - val_loss: 0.5131 - learning_rate: 1.0000e-06\n",
      "Epoch 75/200\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 1/36\u001b[0m \u001b[37m━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m27s\u001b[0m 799ms/step - accuracy: 0.9442 - loss: 0.3224max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 2/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 788ms/step - accuracy: 0.9388 - loss: 0.3394max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 3/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 784ms/step - accuracy: 0.9372 - loss: 0.3434max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 4/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 784ms/step - accuracy: 0.9372 - loss: 0.3434max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 5/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 784ms/step - accuracy: 0.9367 - loss: 0.3448max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 6/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 784ms/step - accuracy: 0.9363 - loss: 0.3462max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 7/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 785ms/step - accuracy: 0.9359 - loss: 0.3469max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 8/36\u001b[0m \u001b[32m━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 786ms/step - accuracy: 0.9357 - loss: 0.3475max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 9/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 787ms/step - accuracy: 0.9355 - loss: 0.3479max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m10/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m20s\u001b[0m 787ms/step - accuracy: 0.9354 - loss: 0.3481max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m11/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 786ms/step - accuracy: 0.9354 - loss: 0.3482max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m12/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 787ms/step - accuracy: 0.9354 - loss: 0.3482max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m13/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 787ms/step - accuracy: 0.9354 - loss: 0.3480max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m14/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m17s\u001b[0m 787ms/step - accuracy: 0.9355 - loss: 0.3480max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m15/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m16s\u001b[0m 788ms/step - accuracy: 0.9355 - loss: 0.3478max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m16/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 788ms/step - accuracy: 0.9355 - loss: 0.3477max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m17/36\u001b[0m \u001b[32m━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 788ms/step - accuracy: 0.9356 - loss: 0.3476max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m18/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 788ms/step - accuracy: 0.9355 - loss: 0.3476max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m19/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m13s\u001b[0m 788ms/step - accuracy: 0.9355 - loss: 0.3476max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m20/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m12s\u001b[0m 788ms/step - accuracy: 0.9355 - loss: 0.3476max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m21/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 788ms/step - accuracy: 0.9355 - loss: 0.3476max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m22/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 788ms/step - accuracy: 0.9355 - loss: 0.3476max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m23/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m10s\u001b[0m 788ms/step - accuracy: 0.9355 - loss: 0.3477max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m24/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m9s\u001b[0m 789ms/step - accuracy: 0.9354 - loss: 0.3478 max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m25/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m8s\u001b[0m 789ms/step - accuracy: 0.9354 - loss: 0.3479max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m26/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━\u001b[0m \u001b[1m7s\u001b[0m 789ms/step - accuracy: 0.9354 - loss: 0.3479max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m27/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m7s\u001b[0m 789ms/step - accuracy: 0.9354 - loss: 0.3478max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m28/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m6s\u001b[0m 789ms/step - accuracy: 0.9354 - loss: 0.3478max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m29/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m5s\u001b[0m 789ms/step - accuracy: 0.9354 - loss: 0.3478max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m30/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m4s\u001b[0m 790ms/step - accuracy: 0.9354 - loss: 0.3478max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m31/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 790ms/step - accuracy: 0.9353 - loss: 0.3479max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m32/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 790ms/step - accuracy: 0.9353 - loss: 0.3479max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m33/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m2s\u001b[0m 790ms/step - accuracy: 0.9353 - loss: 0.3479max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m34/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m1s\u001b[0m 790ms/step - accuracy: 0.9353 - loss: 0.3479max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m35/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 790ms/step - accuracy: 0.9353 - loss: 0.3479max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 782ms/step - accuracy: 0.9353 - loss: 0.3480max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 811ms/step - accuracy: 0.9353 - loss: 0.3480 - val_accuracy: 0.8862 - val_loss: 0.5114 - learning_rate: 1.0000e-06\n",
      "Epoch 76/200\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 1/36\u001b[0m \u001b[37m━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m27s\u001b[0m 796ms/step - accuracy: 0.9382 - loss: 0.3386max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 2/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 782ms/step - accuracy: 0.9390 - loss: 0.3360max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 3/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 779ms/step - accuracy: 0.9371 - loss: 0.3408max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 4/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 780ms/step - accuracy: 0.9362 - loss: 0.3438max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 5/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 782ms/step - accuracy: 0.9359 - loss: 0.3446max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 6/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 782ms/step - accuracy: 0.9360 - loss: 0.3445max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 7/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 781ms/step - accuracy: 0.9361 - loss: 0.3443max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 8/36\u001b[0m \u001b[32m━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 781ms/step - accuracy: 0.9363 - loss: 0.3439max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 9/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 781ms/step - accuracy: 0.9365 - loss: 0.3436max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m10/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m20s\u001b[0m 781ms/step - accuracy: 0.9367 - loss: 0.3432max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m11/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 780ms/step - accuracy: 0.9368 - loss: 0.3430max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m12/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 778ms/step - accuracy: 0.9370 - loss: 0.3428max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m13/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m17s\u001b[0m 776ms/step - accuracy: 0.9371 - loss: 0.3426max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m14/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m17s\u001b[0m 775ms/step - accuracy: 0.9372 - loss: 0.3424max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m15/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m16s\u001b[0m 775ms/step - accuracy: 0.9372 - loss: 0.3423max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m16/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 775ms/step - accuracy: 0.9373 - loss: 0.3422max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m17/36\u001b[0m \u001b[32m━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 776ms/step - accuracy: 0.9373 - loss: 0.3422max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m18/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m13s\u001b[0m 776ms/step - accuracy: 0.9372 - loss: 0.3424max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m19/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m13s\u001b[0m 776ms/step - accuracy: 0.9371 - loss: 0.3426max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m20/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m12s\u001b[0m 776ms/step - accuracy: 0.9371 - loss: 0.3428max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m21/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 776ms/step - accuracy: 0.9370 - loss: 0.3429max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m22/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m10s\u001b[0m 777ms/step - accuracy: 0.9370 - loss: 0.3430max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m23/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m10s\u001b[0m 777ms/step - accuracy: 0.9369 - loss: 0.3431max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m24/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m9s\u001b[0m 777ms/step - accuracy: 0.9369 - loss: 0.3432 max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m25/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m8s\u001b[0m 778ms/step - accuracy: 0.9369 - loss: 0.3433max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m26/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━\u001b[0m \u001b[1m7s\u001b[0m 778ms/step - accuracy: 0.9368 - loss: 0.3434max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m27/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m7s\u001b[0m 779ms/step - accuracy: 0.9368 - loss: 0.3434max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m28/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m6s\u001b[0m 779ms/step - accuracy: 0.9368 - loss: 0.3435max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m29/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m5s\u001b[0m 779ms/step - accuracy: 0.9368 - loss: 0.3435max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m30/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m4s\u001b[0m 779ms/step - accuracy: 0.9367 - loss: 0.3435max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m31/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 779ms/step - accuracy: 0.9367 - loss: 0.3436max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m32/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 779ms/step - accuracy: 0.9367 - loss: 0.3436max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m33/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m2s\u001b[0m 779ms/step - accuracy: 0.9366 - loss: 0.3437max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m34/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m1s\u001b[0m 779ms/step - accuracy: 0.9366 - loss: 0.3437max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m35/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 779ms/step - accuracy: 0.9366 - loss: 0.3438max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 771ms/step - accuracy: 0.9365 - loss: 0.3439max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 800ms/step - accuracy: 0.9365 - loss: 0.3439 - val_accuracy: 0.8860 - val_loss: 0.5123 - learning_rate: 1.0000e-06\n",
      "Epoch 77/200\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 1/36\u001b[0m \u001b[37m━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m28s\u001b[0m 808ms/step - accuracy: 0.9402 - loss: 0.3252max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 2/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 790ms/step - accuracy: 0.9405 - loss: 0.3288max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 3/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 788ms/step - accuracy: 0.9406 - loss: 0.3297max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 4/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 789ms/step - accuracy: 0.9392 - loss: 0.3342max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 5/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 789ms/step - accuracy: 0.9380 - loss: 0.3375max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 6/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 790ms/step - accuracy: 0.9375 - loss: 0.3389max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 7/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 788ms/step - accuracy: 0.9373 - loss: 0.3394max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 8/36\u001b[0m \u001b[32m━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 788ms/step - accuracy: 0.9372 - loss: 0.3397max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 9/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 789ms/step - accuracy: 0.9372 - loss: 0.3396max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m10/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m20s\u001b[0m 789ms/step - accuracy: 0.9373 - loss: 0.3392max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m11/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 790ms/step - accuracy: 0.9372 - loss: 0.3391max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m12/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 791ms/step - accuracy: 0.9372 - loss: 0.3393max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m13/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 791ms/step - accuracy: 0.9372 - loss: 0.3396max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m14/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m17s\u001b[0m 792ms/step - accuracy: 0.9372 - loss: 0.3398max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m15/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m16s\u001b[0m 792ms/step - accuracy: 0.9372 - loss: 0.3398max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m16/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 792ms/step - accuracy: 0.9372 - loss: 0.3398max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m17/36\u001b[0m \u001b[32m━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 791ms/step - accuracy: 0.9372 - loss: 0.3399max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m18/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 791ms/step - accuracy: 0.9372 - loss: 0.3400max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m19/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m13s\u001b[0m 791ms/step - accuracy: 0.9371 - loss: 0.3402max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m20/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m12s\u001b[0m 791ms/step - accuracy: 0.9370 - loss: 0.3405max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m21/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 792ms/step - accuracy: 0.9370 - loss: 0.3407max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m22/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 792ms/step - accuracy: 0.9369 - loss: 0.3409max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m23/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m10s\u001b[0m 792ms/step - accuracy: 0.9369 - loss: 0.3411max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m24/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m9s\u001b[0m 792ms/step - accuracy: 0.9369 - loss: 0.3412 max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m25/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m8s\u001b[0m 792ms/step - accuracy: 0.9368 - loss: 0.3413max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m26/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━\u001b[0m \u001b[1m7s\u001b[0m 792ms/step - accuracy: 0.9368 - loss: 0.3415max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m27/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m7s\u001b[0m 792ms/step - accuracy: 0.9367 - loss: 0.3417max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m28/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m6s\u001b[0m 792ms/step - accuracy: 0.9367 - loss: 0.3418max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m29/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m5s\u001b[0m 792ms/step - accuracy: 0.9367 - loss: 0.3420max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m30/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m4s\u001b[0m 792ms/step - accuracy: 0.9366 - loss: 0.3422max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m31/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 793ms/step - accuracy: 0.9365 - loss: 0.3423max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m32/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 792ms/step - accuracy: 0.9365 - loss: 0.3425max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m33/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m2s\u001b[0m 792ms/step - accuracy: 0.9365 - loss: 0.3426max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m34/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m1s\u001b[0m 792ms/step - accuracy: 0.9364 - loss: 0.3428max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m35/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 792ms/step - accuracy: 0.9364 - loss: 0.3429max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 784ms/step - accuracy: 0.9364 - loss: 0.3430max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 814ms/step - accuracy: 0.9363 - loss: 0.3431 - val_accuracy: 0.8859 - val_loss: 0.5124 - learning_rate: 1.0000e-06\n"
     ]
    }
   ],
   "source": [
    "import tensorflow as tf\n",
    "from tensorflow.keras.optimizers import Adam\n",
    "from tensorflow.keras.callbacks import EarlyStopping\n",
    "from tensorflow.keras.callbacks import ReduceLROnPlateau\n",
    "import glob\n",
    "import os \n",
    "# Option A: disable XLA JIT globally\n",
    "tf.config.optimizer.set_jit(False)\n",
    "\n",
    "# Option B: run all functions eagerly (no graph compilation)\n",
    "tf.config.run_functions_eagerly(True)\n",
    "\n",
    "# 1) EarlyStopping to halt when val_loss stops improving\n",
    "early_stop = EarlyStopping(\n",
    "    monitor='val_loss',\n",
    "    patience=10,\n",
    "    restore_best_weights=True\n",
    ")\n",
    "\n",
    "# 2) Custom callback to save every N epochs\n",
    "class SaveEveryNEpochs(tf.keras.callbacks.Callback):\n",
    "    def __init__(self, save_freq, filepath_template):\n",
    "        super().__init__()\n",
    "        self.save_freq = save_freq\n",
    "        self.filepath_template = filepath_template\n",
    "\n",
    "    def on_epoch_end(self, epoch, logs=None):\n",
    "        epoch_num = epoch + 1\n",
    "        if epoch_num % self.save_freq == 0:\n",
    "            # filepath_template can include `{epoch}` and any logs keys, e.g. loss, val_loss\n",
    "            path = self.filepath_template.format(epoch=epoch_num, **(logs or {}))\n",
    "            self.model.save(path, overwrite=True)\n",
    "            print(f\"\\n Saved checkpoint: {path}\")\n",
    "\n",
    "def load_checkpoint(model, checkpoint_dir, checkpoint_filename=None):\n",
    "    \"\"\"\n",
    "    Loads weights into `model`.\n",
    "    If `checkpoint_filename` is None, picks the latest file matching pattern in `checkpoint_dir`.\n",
    "    \"\"\"\n",
    "    pattern = os.path.join(checkpoint_dir, 'segnet_epoch_*.h5')\n",
    "    ckpts = glob.glob(pattern)\n",
    "    if not ckpts:\n",
    "        raise FileNotFoundError(f\"No checkpoints found in {checkpoint_dir}\")\n",
    "    if checkpoint_filename:\n",
    "        path = os.path.join(checkpoint_dir, checkpoint_filename)\n",
    "    else:\n",
    "        path = sorted(ckpts)[-1]\n",
    "    print(f\"Loading weights from: {path}\")\n",
    "    model.load_weights(path)\n",
    "    return path\n",
    "\n",
    "# instantiate it to save every 10 epochs:\n",
    "save_every_10 = SaveEveryNEpochs(\n",
    "    save_freq=10,\n",
    "    filepath_template='checkpoints/segnet_epoch_{epoch:03d}_vloss_{val_loss:.4f}.h5'\n",
    ")\n",
    "\n",
    "reduce_lr = ReduceLROnPlateau(\n",
    "  monitor='val_loss', \n",
    "  factor=0.5, \n",
    "  patience=3, \n",
    "  min_lr=1e-6\n",
    ")\n",
    "# 3) Compile & fit\n",
    "model.compile(\n",
    "    optimizer=Adam(learning_rate=1e-4),\n",
    "    loss='sparse_categorical_crossentropy',\n",
    "    metrics=['accuracy'],\n",
    "    run_eagerly=False    \n",
    ")\n",
    "\n",
    "history = model.fit(\n",
    "    X_train,\n",
    "    y_train_int,\n",
    "    batch_size=12,\n",
    "    epochs=200,               # high ceiling\n",
    "    shuffle=True,\n",
    "    validation_split=0.1,\n",
    "    callbacks=[early_stop, save_every_10, reduce_lr ]\n",
    ")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "dict_keys(['accuracy', 'loss', 'val_accuracy', 'val_loss', 'learning_rate'])"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "history.history.keys()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m1/8\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m41s\u001b[0m 6s/step - accuracy: 0.8179 - loss: 0.7859max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m2/8\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m4s\u001b[0m 703ms/step - accuracy: 0.8142 - loss: 0.8004max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m3/8\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m3s\u001b[0m 697ms/step - accuracy: 0.8166 - loss: 0.7899max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m4/8\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m2s\u001b[0m 694ms/step - accuracy: 0.8185 - loss: 0.7818max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m5/8\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m2s\u001b[0m 686ms/step - accuracy: 0.8191 - loss: 0.7783max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m6/8\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m1s\u001b[0m 682ms/step - accuracy: 0.8198 - loss: 0.7740max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m7/8\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m0s\u001b[0m 684ms/step - accuracy: 0.8211 - loss: 0.7680max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m8/8\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m12s\u001b[0m 845ms/step - accuracy: 0.8228 - loss: 0.7602\n",
      "test loss, test accuracy: [0.7330203652381897, 0.8288004994392395]\n"
     ]
    }
   ],
   "source": [
    "results = model.evaluate(X_test, y_test_int)\n",
    "print(\"test loss, test accuracy:\", results)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.plot(history.history['accuracy'])\n",
    "plt.plot(history.history['val_accuracy'])\n",
    "plt.title('Model Accuracy')\n",
    "plt.ylabel('Accuracy')\n",
    "plt.xlabel('Epoch')\n",
    "plt.legend(['Train', 'Test'], loc='upper left')\n",
    "plt.show()\n",
    "\n",
    "plt.plot(history.history['loss'])\n",
    "plt.plot(history.history['val_loss'])\n",
    "plt.title('Model Loss')\n",
    "plt.ylabel('Loss')\n",
    "plt.xlabel('Epoch')\n",
    "plt.legend(['Train', 'Test'], loc='upper left')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m1/8\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m4s\u001b[0m 689ms/stepmax pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m2/8\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m4s\u001b[0m 683ms/stepmax pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m3/8\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m3s\u001b[0m 676ms/stepmax pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m4/8\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m2s\u001b[0m 662ms/stepmax pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m5/8\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m1s\u001b[0m 664ms/stepmax pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m6/8\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m1s\u001b[0m 660ms/stepmax pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m7/8\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m0s\u001b[0m 663ms/stepmax pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m8/8\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 596ms/step\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "(<Figure size 640x480 with 1 Axes>,\n",
       " <matplotlib.image.AxesImage at 0x7f6dc69338e0>,\n",
       " (-0.5, 223.5, 223.5, -0.5))"
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1280x960 with 12 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1280x960 with 12 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#model- 10 epochs one \n",
    "\n",
    "pred = model.predict(X_test, verbose=1)\n",
    "\n",
    "ranidx = randint(0, len(y_test))\n",
    "gs = GridSpec(1,12)\n",
    "plt.figure(dpi=200)\n",
    "for i in range(12):\n",
    "    plt.subplot(gs[i]), plt.imshow(pred[ranidx][:,:,i], cmap='jet'), plt.axis('off')\n",
    "\n",
    "plt.figure(dpi=200)\n",
    "for i in range(12):\n",
    "    plt.subplot(gs[i]), plt.imshow(y_test[ranidx][:,:,i],cmap='jet'), plt.axis('off')\n",
    "    \n",
    "plt.figure(),plt.imshow(X_test[ranidx]), plt.axis('off')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1280x960 with 12 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# refer from : https://github.com/preddy5/segnet/blob/master/Segnet.ipynb\n",
    "# model- 10 epochs one\n",
    "Sky = [128,128,128]\n",
    "Building = [128,0,0]\n",
    "Pole = [192,192,128]\n",
    "Road_marking = [255,69,0]\n",
    "Road = [128,64,128]\n",
    "Pavement = [60,40,222]\n",
    "Tree = [128,128,0]\n",
    "SignSymbol = [192,128,128]\n",
    "Fence = [64,64,128]\n",
    "Car = [64,0,128]\n",
    "Pedestrian = [64,64,0]\n",
    "Bicyclist = [0,128,192]\n",
    "Unlabelled = [0,0,0]\n",
    "\n",
    "label_colours = np.array([Sky, Building, Pole, Road, Pavement,\n",
    "                          Tree, SignSymbol, Fence, Car, Pedestrian, Bicyclist, Unlabelled])\n",
    "\n",
    "def visualize(temp, plot=True):\n",
    "    r = temp.copy()\n",
    "    g = temp.copy()\n",
    "    b = temp.copy()\n",
    "\n",
    "    for l in [0, 3, 4, 8, 9, 10]:\n",
    "        r[temp==l]=label_colours[l,0]                                                         \n",
    "        g[temp==l]=label_colours[l,1]\n",
    "        b[temp==l]=label_colours[l,2]\n",
    "\n",
    "    rgb = np.zeros((temp.shape[0], temp.shape[1], 3))\n",
    "    rgb[:,:,0] = (r/255.0)#[:,:,0]\n",
    "    rgb[:,:,1] = (g/255.0)#[:,:,1]\n",
    "    rgb[:,:,2] = (b/255.0)#[:,:,2]\n",
    "    if plot:\n",
    "        plt.imshow(rgb)\n",
    "    else:\n",
    "        return rgb\n",
    "\n",
    "randsample = sample(range(0,len(pred)), 4)\n",
    "gs = GridSpec(3,5)\n",
    "plt.figure(dpi=200)\n",
    "\n",
    "for i in range(4):\n",
    "    output = visualize(np.argmax(pred[randsample[i]],axis=2).reshape((224,224)), plot=False)\n",
    "    out_test = visualize(np.argmax(y_test[randsample[i]],axis=2).reshape((224,224)), plot=False)\n",
    "        \n",
    "    plt.subplot(gs[i]), plt.imshow(X_test[randsample[i]]), plt.axis('off')\n",
    "    plt.subplot(gs[5+i]), plt.imshow(output), plt.axis('off')\n",
    "    plt.subplot(gs[10+i]), plt.imshow(out_test), plt.axis('off')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "\n",
    "def compute_metrics_from_prediction(pred_probs, gt_onehot, num_classes=13):\n",
    "    \"\"\"\n",
    "    pred_probs: (224, 224, num_classes) softmax output for one image\n",
    "    gt_onehot:  (224, 224, num_classes) one-hot encoded ground truth for one image\n",
    "    \"\"\"\n",
    "\n",
    "    # Convert to class index maps\n",
    "    pred_mask = np.argmax(pred_probs, axis=-1)\n",
    "    gt_mask = np.argmax(gt_onehot, axis=-1)\n",
    "\n",
    "    # Initialize metrics\n",
    "    pixel_acc = np.sum(pred_mask == gt_mask) / pred_mask.size\n",
    "\n",
    "    class_iou = []\n",
    "    class_acc = []\n",
    "\n",
    "    for cls in range(num_classes):\n",
    "        pred_cls = (pred_mask == cls)\n",
    "        gt_cls = (gt_mask == cls)\n",
    "\n",
    "        intersection = np.logical_and(pred_cls, gt_cls).sum()\n",
    "        union = np.logical_or(pred_cls, gt_cls).sum()\n",
    "        gt_total = gt_cls.sum()\n",
    "\n",
    "        iou = intersection / union if union != 0 else np.nan\n",
    "        acc = intersection / gt_total if gt_total != 0 else np.nan\n",
    "\n",
    "        class_iou.append(iou)\n",
    "        class_acc.append(acc)\n",
    "\n",
    "    mean_iou = np.nanmean(class_iou)\n",
    "    mean_class_acc = np.nanmean(class_acc)\n",
    "\n",
    "    return {\n",
    "        'Pixel Accuracy': pixel_acc,\n",
    "        'Mean Class Accuracy': mean_class_acc,\n",
    "        'Mean IoU': mean_iou,\n",
    "        'Class IoU': class_iou,\n",
    "        'Class Accuracy': class_acc\n",
    "    }\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Pixel Accuracy: 0.8664899553571429\n",
      "Mean Class Accuracy: 0.421683268261726\n",
      "Mean IoU: 0.34955367219619543\n",
      "Class IoU: [0.7706694374350601, 0.8197257113560625, 0.0, 0.9300903593994158, 0.8692014273409622, 0.5827586206896552, 0.003683241252302026, 0.0020387359836901123, 0.027777777777777776, 0.007380073800738007, 0.0, 0.1813186813186813, nan]\n",
      "Class Accuracy: [0.94143245693563, 0.8896230351926554, 0.0, 0.9469461160683406, 0.909957490660827, 0.769217801753203, 0.00425531914893617, 0.022988505747126436, 0.04878048780487805, 0.008130081300813009, 0.0, 0.5188679245283019, nan]\n"
     ]
    }
   ],
   "source": [
    "i = randsample[1]\n",
    "\n",
    "metrics = compute_metrics_from_prediction(pred[i], y_test[i], num_classes=13)\n",
    "for k, v in metrics.items():\n",
    "    print(f\"{k}: {v}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Loading weights from: checkpoints/segnet_epoch_080_vloss_0.7051.h5\n",
      "Epoch 31/50\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 1/36\u001b[0m \u001b[37m━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m27s\u001b[0m 779ms/step - accuracy: 0.9206 - loss: 0.5207max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 2/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 768ms/step - accuracy: 0.9182 - loss: 0.5285max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 3/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 767ms/step - accuracy: 0.9175 - loss: 0.5303max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 4/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 772ms/step - accuracy: 0.9175 - loss: 0.5302max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 5/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 770ms/step - accuracy: 0.9175 - loss: 0.5306max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 6/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 767ms/step - accuracy: 0.9176 - loss: 0.5304max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 7/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 766ms/step - accuracy: 0.9170 - loss: 0.5322max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 8/36\u001b[0m \u001b[32m━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 769ms/step - accuracy: 0.9166 - loss: 0.5334max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 9/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m20s\u001b[0m 771ms/step - accuracy: 0.9162 - loss: 0.5345max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m10/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m20s\u001b[0m 772ms/step - accuracy: 0.9157 - loss: 0.5357max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m11/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 773ms/step - accuracy: 0.9152 - loss: 0.5369max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m12/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 772ms/step - accuracy: 0.9148 - loss: 0.5379max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m13/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m17s\u001b[0m 772ms/step - accuracy: 0.9143 - loss: 0.5391max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m14/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m16s\u001b[0m 771ms/step - accuracy: 0.9138 - loss: 0.5404max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m15/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m16s\u001b[0m 770ms/step - accuracy: 0.9134 - loss: 0.5415max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m16/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 770ms/step - accuracy: 0.9131 - loss: 0.5423max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m17/36\u001b[0m \u001b[32m━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 769ms/step - accuracy: 0.9128 - loss: 0.5430max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m18/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m13s\u001b[0m 769ms/step - accuracy: 0.9125 - loss: 0.5436max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m19/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m13s\u001b[0m 769ms/step - accuracy: 0.9123 - loss: 0.5441max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m20/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m12s\u001b[0m 768ms/step - accuracy: 0.9122 - loss: 0.5445max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m21/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 768ms/step - accuracy: 0.9120 - loss: 0.5448max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m22/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m10s\u001b[0m 768ms/step - accuracy: 0.9119 - loss: 0.5450max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m23/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m9s\u001b[0m 767ms/step - accuracy: 0.9118 - loss: 0.5452 max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m24/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m9s\u001b[0m 767ms/step - accuracy: 0.9117 - loss: 0.5454max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m25/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m8s\u001b[0m 768ms/step - accuracy: 0.9116 - loss: 0.5456max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m26/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━\u001b[0m \u001b[1m7s\u001b[0m 768ms/step - accuracy: 0.9115 - loss: 0.5459max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m27/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m6s\u001b[0m 767ms/step - accuracy: 0.9114 - loss: 0.5461max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m28/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m6s\u001b[0m 768ms/step - accuracy: 0.9113 - loss: 0.5463max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m29/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m5s\u001b[0m 768ms/step - accuracy: 0.9113 - loss: 0.5464max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m30/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m4s\u001b[0m 768ms/step - accuracy: 0.9112 - loss: 0.5466max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m31/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 769ms/step - accuracy: 0.9111 - loss: 0.5468max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m32/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 769ms/step - accuracy: 0.9110 - loss: 0.5470max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m33/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m2s\u001b[0m 769ms/step - accuracy: 0.9109 - loss: 0.5472max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m34/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m1s\u001b[0m 769ms/step - accuracy: 0.9109 - loss: 0.5473max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m35/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 769ms/step - accuracy: 0.9108 - loss: 0.5475max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 762ms/step - accuracy: 0.9108 - loss: 0.5476max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 792ms/step - accuracy: 0.9107 - loss: 0.5477 - val_accuracy: 0.8516 - val_loss: 0.7044 - learning_rate: 1.0000e-06\n",
      "Epoch 32/50\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 1/36\u001b[0m \u001b[37m━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m27s\u001b[0m 774ms/step - accuracy: 0.9106 - loss: 0.5395max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 2/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 789ms/step - accuracy: 0.9107 - loss: 0.5424max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 3/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 777ms/step - accuracy: 0.9078 - loss: 0.5510max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 4/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 773ms/step - accuracy: 0.9067 - loss: 0.5550max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 5/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 770ms/step - accuracy: 0.9057 - loss: 0.5584max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 6/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 768ms/step - accuracy: 0.9053 - loss: 0.5596max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 7/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 768ms/step - accuracy: 0.9053 - loss: 0.5603max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 8/36\u001b[0m \u001b[32m━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 768ms/step - accuracy: 0.9053 - loss: 0.5606max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 9/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m20s\u001b[0m 768ms/step - accuracy: 0.9054 - loss: 0.5605max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m10/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m20s\u001b[0m 771ms/step - accuracy: 0.9056 - loss: 0.5601max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m11/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 773ms/step - accuracy: 0.9058 - loss: 0.5596max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m12/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 772ms/step - accuracy: 0.9061 - loss: 0.5590max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m13/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m17s\u001b[0m 772ms/step - accuracy: 0.9063 - loss: 0.5585max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m14/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m16s\u001b[0m 771ms/step - accuracy: 0.9066 - loss: 0.5581max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m15/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m16s\u001b[0m 770ms/step - accuracy: 0.9067 - loss: 0.5578max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m16/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 771ms/step - accuracy: 0.9069 - loss: 0.5573max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m17/36\u001b[0m \u001b[32m━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 771ms/step - accuracy: 0.9071 - loss: 0.5568max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m18/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m13s\u001b[0m 771ms/step - accuracy: 0.9072 - loss: 0.5566max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m19/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m13s\u001b[0m 771ms/step - accuracy: 0.9074 - loss: 0.5562max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m20/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m12s\u001b[0m 771ms/step - accuracy: 0.9075 - loss: 0.5558max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m21/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 770ms/step - accuracy: 0.9076 - loss: 0.5555max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m22/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m10s\u001b[0m 771ms/step - accuracy: 0.9078 - loss: 0.5552max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m23/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m10s\u001b[0m 771ms/step - accuracy: 0.9079 - loss: 0.5549max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m24/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m9s\u001b[0m 771ms/step - accuracy: 0.9080 - loss: 0.5546 max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m25/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m8s\u001b[0m 771ms/step - accuracy: 0.9080 - loss: 0.5546max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m26/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━\u001b[0m \u001b[1m7s\u001b[0m 771ms/step - accuracy: 0.9080 - loss: 0.5545max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m27/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m6s\u001b[0m 770ms/step - accuracy: 0.9080 - loss: 0.5544max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m28/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m6s\u001b[0m 770ms/step - accuracy: 0.9081 - loss: 0.5543max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m29/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m5s\u001b[0m 771ms/step - accuracy: 0.9081 - loss: 0.5543max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m30/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m4s\u001b[0m 771ms/step - accuracy: 0.9081 - loss: 0.5542max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m31/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 771ms/step - accuracy: 0.9081 - loss: 0.5541max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m32/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 772ms/step - accuracy: 0.9082 - loss: 0.5541max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m33/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m2s\u001b[0m 773ms/step - accuracy: 0.9082 - loss: 0.5540max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m34/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m1s\u001b[0m 773ms/step - accuracy: 0.9082 - loss: 0.5539max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m35/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 773ms/step - accuracy: 0.9082 - loss: 0.5538max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 766ms/step - accuracy: 0.9082 - loss: 0.5538max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 794ms/step - accuracy: 0.9082 - loss: 0.5537 - val_accuracy: 0.8510 - val_loss: 0.7068 - learning_rate: 1.0000e-06\n",
      "Epoch 33/50\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 1/36\u001b[0m \u001b[37m━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m27s\u001b[0m 797ms/step - accuracy: 0.9200 - loss: 0.5211max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 2/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 777ms/step - accuracy: 0.9204 - loss: 0.5204max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 3/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 777ms/step - accuracy: 0.9209 - loss: 0.5207max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 4/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 781ms/step - accuracy: 0.9199 - loss: 0.5229max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 5/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 784ms/step - accuracy: 0.9191 - loss: 0.5249max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 6/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 782ms/step - accuracy: 0.9186 - loss: 0.5258max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 7/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 780ms/step - accuracy: 0.9175 - loss: 0.5289max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 8/36\u001b[0m \u001b[32m━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 780ms/step - accuracy: 0.9165 - loss: 0.5314max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 9/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 780ms/step - accuracy: 0.9157 - loss: 0.5333max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m10/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m20s\u001b[0m 778ms/step - accuracy: 0.9152 - loss: 0.5346max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m11/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 779ms/step - accuracy: 0.9147 - loss: 0.5357max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m12/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 779ms/step - accuracy: 0.9143 - loss: 0.5369max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m13/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m17s\u001b[0m 778ms/step - accuracy: 0.9139 - loss: 0.5380max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m14/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m17s\u001b[0m 777ms/step - accuracy: 0.9135 - loss: 0.5390max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m15/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m16s\u001b[0m 778ms/step - accuracy: 0.9132 - loss: 0.5399max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m16/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 778ms/step - accuracy: 0.9129 - loss: 0.5407max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m17/36\u001b[0m \u001b[32m━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 778ms/step - accuracy: 0.9126 - loss: 0.5414max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m18/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 779ms/step - accuracy: 0.9123 - loss: 0.5420max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m19/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m13s\u001b[0m 780ms/step - accuracy: 0.9121 - loss: 0.5426max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m20/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m12s\u001b[0m 780ms/step - accuracy: 0.9119 - loss: 0.5430max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m21/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 791ms/step - accuracy: 0.9118 - loss: 0.5434max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m22/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 790ms/step - accuracy: 0.9117 - loss: 0.5437max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m23/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m10s\u001b[0m 790ms/step - accuracy: 0.9116 - loss: 0.5440max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m24/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m9s\u001b[0m 790ms/step - accuracy: 0.9114 - loss: 0.5443 max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m25/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m8s\u001b[0m 790ms/step - accuracy: 0.9113 - loss: 0.5446max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m26/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━\u001b[0m \u001b[1m7s\u001b[0m 790ms/step - accuracy: 0.9113 - loss: 0.5448max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m27/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m7s\u001b[0m 789ms/step - accuracy: 0.9112 - loss: 0.5450max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m28/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m6s\u001b[0m 789ms/step - accuracy: 0.9111 - loss: 0.5452max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m29/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m5s\u001b[0m 789ms/step - accuracy: 0.9110 - loss: 0.5453max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m30/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m4s\u001b[0m 789ms/step - accuracy: 0.9110 - loss: 0.5455max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m31/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 789ms/step - accuracy: 0.9109 - loss: 0.5457max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m32/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 788ms/step - accuracy: 0.9108 - loss: 0.5460max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m33/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m2s\u001b[0m 788ms/step - accuracy: 0.9107 - loss: 0.5462max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m34/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m1s\u001b[0m 788ms/step - accuracy: 0.9107 - loss: 0.5464max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m35/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 788ms/step - accuracy: 0.9106 - loss: 0.5466max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 780ms/step - accuracy: 0.9105 - loss: 0.5469max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 809ms/step - accuracy: 0.9104 - loss: 0.5471 - val_accuracy: 0.8513 - val_loss: 0.7047 - learning_rate: 1.0000e-06\n",
      "Epoch 34/50\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 1/36\u001b[0m \u001b[37m━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m27s\u001b[0m 797ms/step - accuracy: 0.9156 - loss: 0.5392max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 2/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 781ms/step - accuracy: 0.9136 - loss: 0.5425max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 3/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 780ms/step - accuracy: 0.9127 - loss: 0.5451max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 4/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 783ms/step - accuracy: 0.9125 - loss: 0.5464max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 5/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 785ms/step - accuracy: 0.9123 - loss: 0.5473max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 6/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 786ms/step - accuracy: 0.9118 - loss: 0.5484max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 7/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 787ms/step - accuracy: 0.9116 - loss: 0.5488max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 8/36\u001b[0m \u001b[32m━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 787ms/step - accuracy: 0.9114 - loss: 0.5490max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 9/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 786ms/step - accuracy: 0.9110 - loss: 0.5495max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m10/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m20s\u001b[0m 786ms/step - accuracy: 0.9107 - loss: 0.5498max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m11/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 786ms/step - accuracy: 0.9105 - loss: 0.5500max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m12/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 786ms/step - accuracy: 0.9103 - loss: 0.5504max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m13/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 787ms/step - accuracy: 0.9101 - loss: 0.5508max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m14/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m17s\u001b[0m 787ms/step - accuracy: 0.9099 - loss: 0.5512max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m15/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m16s\u001b[0m 787ms/step - accuracy: 0.9098 - loss: 0.5515max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m16/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 787ms/step - accuracy: 0.9097 - loss: 0.5516max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m17/36\u001b[0m \u001b[32m━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 787ms/step - accuracy: 0.9096 - loss: 0.5517max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m18/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 787ms/step - accuracy: 0.9095 - loss: 0.5518max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m19/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m13s\u001b[0m 787ms/step - accuracy: 0.9095 - loss: 0.5519max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m20/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m12s\u001b[0m 787ms/step - accuracy: 0.9094 - loss: 0.5520max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m21/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 787ms/step - accuracy: 0.9094 - loss: 0.5521max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m22/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 787ms/step - accuracy: 0.9093 - loss: 0.5521max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m23/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m10s\u001b[0m 787ms/step - accuracy: 0.9093 - loss: 0.5521max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m24/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m9s\u001b[0m 787ms/step - accuracy: 0.9093 - loss: 0.5520 max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m25/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m8s\u001b[0m 787ms/step - accuracy: 0.9094 - loss: 0.5520max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m26/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━\u001b[0m \u001b[1m7s\u001b[0m 787ms/step - accuracy: 0.9094 - loss: 0.5520max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m27/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m7s\u001b[0m 788ms/step - accuracy: 0.9094 - loss: 0.5520max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m28/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m6s\u001b[0m 788ms/step - accuracy: 0.9094 - loss: 0.5519max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m29/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m5s\u001b[0m 787ms/step - accuracy: 0.9094 - loss: 0.5519max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m30/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m4s\u001b[0m 787ms/step - accuracy: 0.9094 - loss: 0.5519max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m31/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 787ms/step - accuracy: 0.9094 - loss: 0.5518max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m32/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 787ms/step - accuracy: 0.9094 - loss: 0.5518max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m33/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m2s\u001b[0m 787ms/step - accuracy: 0.9094 - loss: 0.5518max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m34/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m1s\u001b[0m 787ms/step - accuracy: 0.9094 - loss: 0.5519max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m35/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 787ms/step - accuracy: 0.9093 - loss: 0.5519max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 779ms/step - accuracy: 0.9093 - loss: 0.5519max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 809ms/step - accuracy: 0.9093 - loss: 0.5519 - val_accuracy: 0.8514 - val_loss: 0.7029 - learning_rate: 1.0000e-06\n",
      "Epoch 35/50\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 1/36\u001b[0m \u001b[37m━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m28s\u001b[0m 806ms/step - accuracy: 0.9168 - loss: 0.5230max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 2/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 785ms/step - accuracy: 0.9111 - loss: 0.5417max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 3/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 774ms/step - accuracy: 0.9082 - loss: 0.5516max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 4/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 777ms/step - accuracy: 0.9071 - loss: 0.5548max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 5/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 778ms/step - accuracy: 0.9065 - loss: 0.5563max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 6/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 780ms/step - accuracy: 0.9065 - loss: 0.5562max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 7/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 781ms/step - accuracy: 0.9066 - loss: 0.5556max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 8/36\u001b[0m \u001b[32m━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 782ms/step - accuracy: 0.9068 - loss: 0.5551max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 9/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 781ms/step - accuracy: 0.9071 - loss: 0.5545max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m10/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m20s\u001b[0m 782ms/step - accuracy: 0.9074 - loss: 0.5536max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m11/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 782ms/step - accuracy: 0.9076 - loss: 0.5530max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m12/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 782ms/step - accuracy: 0.9077 - loss: 0.5527max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m13/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 784ms/step - accuracy: 0.9078 - loss: 0.5525max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m14/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m17s\u001b[0m 784ms/step - accuracy: 0.9078 - loss: 0.5525max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m15/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m16s\u001b[0m 785ms/step - accuracy: 0.9078 - loss: 0.5526max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m16/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 785ms/step - accuracy: 0.9078 - loss: 0.5526max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m17/36\u001b[0m \u001b[32m━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 785ms/step - accuracy: 0.9079 - loss: 0.5525max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m18/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 785ms/step - accuracy: 0.9079 - loss: 0.5524max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m19/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m13s\u001b[0m 785ms/step - accuracy: 0.9080 - loss: 0.5524max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m20/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m12s\u001b[0m 785ms/step - accuracy: 0.9080 - loss: 0.5524max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m21/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 785ms/step - accuracy: 0.9080 - loss: 0.5524max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m22/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m10s\u001b[0m 785ms/step - accuracy: 0.9080 - loss: 0.5524max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m23/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m10s\u001b[0m 784ms/step - accuracy: 0.9080 - loss: 0.5524max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m24/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m9s\u001b[0m 783ms/step - accuracy: 0.9081 - loss: 0.5523 max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m25/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m8s\u001b[0m 783ms/step - accuracy: 0.9081 - loss: 0.5523max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m26/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━\u001b[0m \u001b[1m7s\u001b[0m 783ms/step - accuracy: 0.9082 - loss: 0.5522max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m27/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m7s\u001b[0m 784ms/step - accuracy: 0.9082 - loss: 0.5521max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m28/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m6s\u001b[0m 784ms/step - accuracy: 0.9082 - loss: 0.5521max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m29/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m5s\u001b[0m 785ms/step - accuracy: 0.9083 - loss: 0.5520max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m30/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m4s\u001b[0m 785ms/step - accuracy: 0.9083 - loss: 0.5520max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m31/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 785ms/step - accuracy: 0.9083 - loss: 0.5520max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m32/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 785ms/step - accuracy: 0.9083 - loss: 0.5519max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m33/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m2s\u001b[0m 785ms/step - accuracy: 0.9084 - loss: 0.5519max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m34/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m1s\u001b[0m 786ms/step - accuracy: 0.9084 - loss: 0.5518max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m35/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 786ms/step - accuracy: 0.9084 - loss: 0.5518max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 778ms/step - accuracy: 0.9084 - loss: 0.5518max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 808ms/step - accuracy: 0.9084 - loss: 0.5518 - val_accuracy: 0.8516 - val_loss: 0.7030 - learning_rate: 1.0000e-06\n",
      "Epoch 36/50\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 1/36\u001b[0m \u001b[37m━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m28s\u001b[0m 815ms/step - accuracy: 0.9033 - loss: 0.5540max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 2/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m27s\u001b[0m 800ms/step - accuracy: 0.9086 - loss: 0.5431max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 3/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 794ms/step - accuracy: 0.9093 - loss: 0.5439max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 4/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 791ms/step - accuracy: 0.9087 - loss: 0.5479max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 5/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 789ms/step - accuracy: 0.9090 - loss: 0.5486max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 6/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 792ms/step - accuracy: 0.9087 - loss: 0.5503max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 7/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 794ms/step - accuracy: 0.9084 - loss: 0.5517max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 8/36\u001b[0m \u001b[32m━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 795ms/step - accuracy: 0.9083 - loss: 0.5523max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 9/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 795ms/step - accuracy: 0.9082 - loss: 0.5527max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m10/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m20s\u001b[0m 794ms/step - accuracy: 0.9082 - loss: 0.5528max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m11/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 794ms/step - accuracy: 0.9083 - loss: 0.5526max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m12/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 794ms/step - accuracy: 0.9084 - loss: 0.5523max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m13/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 794ms/step - accuracy: 0.9084 - loss: 0.5524max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m14/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m17s\u001b[0m 794ms/step - accuracy: 0.9083 - loss: 0.5525max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m15/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m16s\u001b[0m 795ms/step - accuracy: 0.9083 - loss: 0.5525max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m16/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 794ms/step - accuracy: 0.9083 - loss: 0.5525max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m17/36\u001b[0m \u001b[32m━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 794ms/step - accuracy: 0.9083 - loss: 0.5524max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m18/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 794ms/step - accuracy: 0.9083 - loss: 0.5523max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m19/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m13s\u001b[0m 793ms/step - accuracy: 0.9083 - loss: 0.5522max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m20/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m12s\u001b[0m 793ms/step - accuracy: 0.9084 - loss: 0.5519max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m21/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 793ms/step - accuracy: 0.9084 - loss: 0.5518max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m22/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 793ms/step - accuracy: 0.9085 - loss: 0.5516max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m23/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m10s\u001b[0m 793ms/step - accuracy: 0.9085 - loss: 0.5514max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m24/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m9s\u001b[0m 793ms/step - accuracy: 0.9086 - loss: 0.5513 max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m25/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m8s\u001b[0m 793ms/step - accuracy: 0.9087 - loss: 0.5511max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m26/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━\u001b[0m \u001b[1m7s\u001b[0m 793ms/step - accuracy: 0.9087 - loss: 0.5510max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m27/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m7s\u001b[0m 794ms/step - accuracy: 0.9087 - loss: 0.5509max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m28/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m6s\u001b[0m 793ms/step - accuracy: 0.9088 - loss: 0.5509max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m29/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m5s\u001b[0m 794ms/step - accuracy: 0.9088 - loss: 0.5508max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m30/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m4s\u001b[0m 794ms/step - accuracy: 0.9088 - loss: 0.5508max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m31/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 794ms/step - accuracy: 0.9088 - loss: 0.5508max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m32/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 795ms/step - accuracy: 0.9088 - loss: 0.5508max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m33/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m2s\u001b[0m 795ms/step - accuracy: 0.9089 - loss: 0.5508max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m34/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m1s\u001b[0m 795ms/step - accuracy: 0.9089 - loss: 0.5507max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m35/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 795ms/step - accuracy: 0.9089 - loss: 0.5508max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 787ms/step - accuracy: 0.9089 - loss: 0.5508max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 819ms/step - accuracy: 0.9089 - loss: 0.5508 - val_accuracy: 0.8524 - val_loss: 0.7011 - learning_rate: 1.0000e-06\n",
      "Epoch 37/50\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 1/36\u001b[0m \u001b[37m━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m28s\u001b[0m 809ms/step - accuracy: 0.9149 - loss: 0.5526max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 2/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m27s\u001b[0m 798ms/step - accuracy: 0.9112 - loss: 0.5602max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 3/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 798ms/step - accuracy: 0.9092 - loss: 0.5620max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 4/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 798ms/step - accuracy: 0.9074 - loss: 0.5646max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 5/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 798ms/step - accuracy: 0.9069 - loss: 0.5644max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 6/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 796ms/step - accuracy: 0.9067 - loss: 0.5637max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 7/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 795ms/step - accuracy: 0.9068 - loss: 0.5626max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 8/36\u001b[0m \u001b[32m━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 796ms/step - accuracy: 0.9068 - loss: 0.5618max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 9/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 795ms/step - accuracy: 0.9065 - loss: 0.5616max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m10/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m20s\u001b[0m 796ms/step - accuracy: 0.9065 - loss: 0.5611max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m11/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 796ms/step - accuracy: 0.9065 - loss: 0.5606max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m12/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 796ms/step - accuracy: 0.9065 - loss: 0.5600max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m13/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 796ms/step - accuracy: 0.9065 - loss: 0.5596max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m14/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m17s\u001b[0m 795ms/step - accuracy: 0.9065 - loss: 0.5592max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m15/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m16s\u001b[0m 795ms/step - accuracy: 0.9066 - loss: 0.5587max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m16/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 795ms/step - accuracy: 0.9067 - loss: 0.5583max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m17/36\u001b[0m \u001b[32m━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 795ms/step - accuracy: 0.9067 - loss: 0.5579max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m18/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 795ms/step - accuracy: 0.9068 - loss: 0.5575max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m19/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m13s\u001b[0m 795ms/step - accuracy: 0.9069 - loss: 0.5570max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m20/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m12s\u001b[0m 795ms/step - accuracy: 0.9070 - loss: 0.5567max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m21/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 794ms/step - accuracy: 0.9071 - loss: 0.5562max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m22/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 794ms/step - accuracy: 0.9072 - loss: 0.5559max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m23/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m10s\u001b[0m 794ms/step - accuracy: 0.9073 - loss: 0.5556max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m24/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m9s\u001b[0m 794ms/step - accuracy: 0.9074 - loss: 0.5552 max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m25/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m8s\u001b[0m 794ms/step - accuracy: 0.9075 - loss: 0.5549max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m26/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━\u001b[0m \u001b[1m7s\u001b[0m 794ms/step - accuracy: 0.9076 - loss: 0.5545max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m27/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m7s\u001b[0m 795ms/step - accuracy: 0.9077 - loss: 0.5543max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m28/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m6s\u001b[0m 795ms/step - accuracy: 0.9078 - loss: 0.5540max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m29/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m5s\u001b[0m 795ms/step - accuracy: 0.9079 - loss: 0.5538max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m30/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m4s\u001b[0m 795ms/step - accuracy: 0.9079 - loss: 0.5536max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m31/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 795ms/step - accuracy: 0.9080 - loss: 0.5535max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m32/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 795ms/step - accuracy: 0.9080 - loss: 0.5533max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m33/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m2s\u001b[0m 795ms/step - accuracy: 0.9081 - loss: 0.5532max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m34/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m1s\u001b[0m 795ms/step - accuracy: 0.9081 - loss: 0.5531max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m35/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 796ms/step - accuracy: 0.9081 - loss: 0.5529max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 788ms/step - accuracy: 0.9082 - loss: 0.5528max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 819ms/step - accuracy: 0.9082 - loss: 0.5527 - val_accuracy: 0.8525 - val_loss: 0.6998 - learning_rate: 1.0000e-06\n",
      "Epoch 38/50\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 1/36\u001b[0m \u001b[37m━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m28s\u001b[0m 811ms/step - accuracy: 0.9053 - loss: 0.5662max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 2/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m27s\u001b[0m 800ms/step - accuracy: 0.9069 - loss: 0.5575max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 3/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 802ms/step - accuracy: 0.9074 - loss: 0.5547max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 4/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 799ms/step - accuracy: 0.9082 - loss: 0.5527max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 5/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 799ms/step - accuracy: 0.9089 - loss: 0.5504max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 6/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 798ms/step - accuracy: 0.9094 - loss: 0.5487max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 7/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 799ms/step - accuracy: 0.9099 - loss: 0.5472max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 8/36\u001b[0m \u001b[32m━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 800ms/step - accuracy: 0.9104 - loss: 0.5461max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 9/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 800ms/step - accuracy: 0.9108 - loss: 0.5454max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m10/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m20s\u001b[0m 799ms/step - accuracy: 0.9112 - loss: 0.5444max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m11/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 799ms/step - accuracy: 0.9114 - loss: 0.5438max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m12/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 799ms/step - accuracy: 0.9116 - loss: 0.5433max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m13/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 799ms/step - accuracy: 0.9117 - loss: 0.5430max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m14/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m17s\u001b[0m 799ms/step - accuracy: 0.9116 - loss: 0.5432max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m15/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m16s\u001b[0m 799ms/step - accuracy: 0.9114 - loss: 0.5437max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m16/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 799ms/step - accuracy: 0.9112 - loss: 0.5442max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m17/36\u001b[0m \u001b[32m━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 799ms/step - accuracy: 0.9110 - loss: 0.5448max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m18/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 799ms/step - accuracy: 0.9108 - loss: 0.5455max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m19/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m13s\u001b[0m 799ms/step - accuracy: 0.9106 - loss: 0.5460max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m20/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m12s\u001b[0m 798ms/step - accuracy: 0.9105 - loss: 0.5464max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m21/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 798ms/step - accuracy: 0.9104 - loss: 0.5467max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m22/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 797ms/step - accuracy: 0.9104 - loss: 0.5470max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m23/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m10s\u001b[0m 796ms/step - accuracy: 0.9103 - loss: 0.5473max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m24/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m9s\u001b[0m 796ms/step - accuracy: 0.9102 - loss: 0.5474 max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m25/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m8s\u001b[0m 795ms/step - accuracy: 0.9102 - loss: 0.5476max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m26/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━\u001b[0m \u001b[1m7s\u001b[0m 795ms/step - accuracy: 0.9101 - loss: 0.5478max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m27/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m7s\u001b[0m 795ms/step - accuracy: 0.9101 - loss: 0.5479max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m28/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m6s\u001b[0m 794ms/step - accuracy: 0.9100 - loss: 0.5481max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m29/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m5s\u001b[0m 794ms/step - accuracy: 0.9099 - loss: 0.5483max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m30/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m4s\u001b[0m 794ms/step - accuracy: 0.9099 - loss: 0.5485max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m31/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 794ms/step - accuracy: 0.9098 - loss: 0.5487max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m32/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 793ms/step - accuracy: 0.9098 - loss: 0.5489max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m33/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m2s\u001b[0m 793ms/step - accuracy: 0.9097 - loss: 0.5491max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m34/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m1s\u001b[0m 793ms/step - accuracy: 0.9097 - loss: 0.5492max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m35/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 793ms/step - accuracy: 0.9096 - loss: 0.5493max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 785ms/step - accuracy: 0.9096 - loss: 0.5494max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 815ms/step - accuracy: 0.9096 - loss: 0.5495 - val_accuracy: 0.8515 - val_loss: 0.7028 - learning_rate: 1.0000e-06\n",
      "Epoch 39/50\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 1/36\u001b[0m \u001b[37m━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m28s\u001b[0m 800ms/step - accuracy: 0.9188 - loss: 0.5275max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 2/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 785ms/step - accuracy: 0.9171 - loss: 0.5311max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 3/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 786ms/step - accuracy: 0.9146 - loss: 0.5387max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 4/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 786ms/step - accuracy: 0.9137 - loss: 0.5415max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 5/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 785ms/step - accuracy: 0.9128 - loss: 0.5436max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 6/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 785ms/step - accuracy: 0.9117 - loss: 0.5464max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 7/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 786ms/step - accuracy: 0.9113 - loss: 0.5472max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 8/36\u001b[0m \u001b[32m━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 786ms/step - accuracy: 0.9110 - loss: 0.5478max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 9/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 786ms/step - accuracy: 0.9108 - loss: 0.5481max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m10/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m20s\u001b[0m 786ms/step - accuracy: 0.9107 - loss: 0.5484max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m11/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 787ms/step - accuracy: 0.9106 - loss: 0.5485max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m12/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 788ms/step - accuracy: 0.9104 - loss: 0.5488max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m13/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 789ms/step - accuracy: 0.9103 - loss: 0.5491max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m14/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m17s\u001b[0m 789ms/step - accuracy: 0.9102 - loss: 0.5491max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m15/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m16s\u001b[0m 788ms/step - accuracy: 0.9101 - loss: 0.5491max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m16/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 788ms/step - accuracy: 0.9101 - loss: 0.5491max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m17/36\u001b[0m \u001b[32m━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 788ms/step - accuracy: 0.9101 - loss: 0.5490max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m18/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 788ms/step - accuracy: 0.9100 - loss: 0.5491max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m19/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m13s\u001b[0m 787ms/step - accuracy: 0.9100 - loss: 0.5491max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m20/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m12s\u001b[0m 787ms/step - accuracy: 0.9099 - loss: 0.5491max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m21/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 787ms/step - accuracy: 0.9100 - loss: 0.5490max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m22/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 787ms/step - accuracy: 0.9100 - loss: 0.5490max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m23/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m10s\u001b[0m 787ms/step - accuracy: 0.9100 - loss: 0.5490max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m24/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m9s\u001b[0m 788ms/step - accuracy: 0.9099 - loss: 0.5491 max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m25/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m8s\u001b[0m 788ms/step - accuracy: 0.9099 - loss: 0.5491max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m26/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━\u001b[0m \u001b[1m7s\u001b[0m 787ms/step - accuracy: 0.9099 - loss: 0.5491max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m27/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m7s\u001b[0m 787ms/step - accuracy: 0.9099 - loss: 0.5490max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m28/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m6s\u001b[0m 787ms/step - accuracy: 0.9099 - loss: 0.5490max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m29/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m5s\u001b[0m 787ms/step - accuracy: 0.9099 - loss: 0.5490max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m30/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m4s\u001b[0m 787ms/step - accuracy: 0.9099 - loss: 0.5489max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m31/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 787ms/step - accuracy: 0.9099 - loss: 0.5489max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m32/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 787ms/step - accuracy: 0.9099 - loss: 0.5489max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m33/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m2s\u001b[0m 787ms/step - accuracy: 0.9099 - loss: 0.5488max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m34/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m1s\u001b[0m 787ms/step - accuracy: 0.9099 - loss: 0.5488max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m35/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 787ms/step - accuracy: 0.9099 - loss: 0.5488max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 779ms/step - accuracy: 0.9099 - loss: 0.5488max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 808ms/step - accuracy: 0.9099 - loss: 0.5488 - val_accuracy: 0.8525 - val_loss: 0.7013 - learning_rate: 1.0000e-06\n",
      "Epoch 40/50\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 1/36\u001b[0m \u001b[37m━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m28s\u001b[0m 804ms/step - accuracy: 0.9037 - loss: 0.5577max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 2/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 781ms/step - accuracy: 0.9056 - loss: 0.5549max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 3/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 787ms/step - accuracy: 0.9066 - loss: 0.5543max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 4/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 787ms/step - accuracy: 0.9055 - loss: 0.5574max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 5/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 784ms/step - accuracy: 0.9056 - loss: 0.5571max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 6/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 784ms/step - accuracy: 0.9059 - loss: 0.5562max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 7/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 783ms/step - accuracy: 0.9063 - loss: 0.5552max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 8/36\u001b[0m \u001b[32m━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 783ms/step - accuracy: 0.9066 - loss: 0.5545max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 9/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 783ms/step - accuracy: 0.9068 - loss: 0.5538max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m10/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m20s\u001b[0m 783ms/step - accuracy: 0.9071 - loss: 0.5530max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m11/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 782ms/step - accuracy: 0.9073 - loss: 0.5525max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m12/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 782ms/step - accuracy: 0.9075 - loss: 0.5520max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m13/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m17s\u001b[0m 783ms/step - accuracy: 0.9076 - loss: 0.5516max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m14/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m17s\u001b[0m 783ms/step - accuracy: 0.9078 - loss: 0.5513max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m15/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m16s\u001b[0m 784ms/step - accuracy: 0.9079 - loss: 0.5510max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m16/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 784ms/step - accuracy: 0.9080 - loss: 0.5509max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m17/36\u001b[0m \u001b[32m━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 784ms/step - accuracy: 0.9080 - loss: 0.5509max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m18/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 784ms/step - accuracy: 0.9080 - loss: 0.5508max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m19/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m13s\u001b[0m 784ms/step - accuracy: 0.9080 - loss: 0.5509max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m20/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m12s\u001b[0m 784ms/step - accuracy: 0.9080 - loss: 0.5509max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m21/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 785ms/step - accuracy: 0.9081 - loss: 0.5508max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m22/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m10s\u001b[0m 785ms/step - accuracy: 0.9081 - loss: 0.5507max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m23/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m10s\u001b[0m 785ms/step - accuracy: 0.9082 - loss: 0.5506max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m24/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m9s\u001b[0m 785ms/step - accuracy: 0.9082 - loss: 0.5505 max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m25/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m8s\u001b[0m 785ms/step - accuracy: 0.9083 - loss: 0.5504max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m26/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━\u001b[0m \u001b[1m7s\u001b[0m 786ms/step - accuracy: 0.9083 - loss: 0.5503max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m27/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m7s\u001b[0m 786ms/step - accuracy: 0.9083 - loss: 0.5504max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m28/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m6s\u001b[0m 787ms/step - accuracy: 0.9083 - loss: 0.5504max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m29/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m5s\u001b[0m 787ms/step - accuracy: 0.9083 - loss: 0.5505max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m30/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m4s\u001b[0m 787ms/step - accuracy: 0.9083 - loss: 0.5505max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m31/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 787ms/step - accuracy: 0.9083 - loss: 0.5505max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m32/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 787ms/step - accuracy: 0.9083 - loss: 0.5505max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m33/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m2s\u001b[0m 788ms/step - accuracy: 0.9083 - loss: 0.5505max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m34/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m1s\u001b[0m 788ms/step - accuracy: 0.9084 - loss: 0.5504max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m35/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 788ms/step - accuracy: 0.9084 - loss: 0.5503max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 780ms/step - accuracy: 0.9084 - loss: 0.5503max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      " Saved checkpoint: checkpoints/segnet_epoch_040_vloss_0.7000.h5\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m30s\u001b[0m 827ms/step - accuracy: 0.9084 - loss: 0.5503 - val_accuracy: 0.8523 - val_loss: 0.7000 - learning_rate: 1.0000e-06\n",
      "Epoch 41/50\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 1/36\u001b[0m \u001b[37m━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m28s\u001b[0m 805ms/step - accuracy: 0.9112 - loss: 0.5336max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 2/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m27s\u001b[0m 806ms/step - accuracy: 0.9133 - loss: 0.5319max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 3/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 804ms/step - accuracy: 0.9130 - loss: 0.5336max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 4/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 796ms/step - accuracy: 0.9124 - loss: 0.5366max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 5/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 792ms/step - accuracy: 0.9121 - loss: 0.5382max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 6/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 791ms/step - accuracy: 0.9117 - loss: 0.5396max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 7/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 792ms/step - accuracy: 0.9106 - loss: 0.5428max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 8/36\u001b[0m \u001b[32m━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 794ms/step - accuracy: 0.9099 - loss: 0.5446max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 9/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 797ms/step - accuracy: 0.9097 - loss: 0.5454max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m10/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m20s\u001b[0m 796ms/step - accuracy: 0.9093 - loss: 0.5463max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m11/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 795ms/step - accuracy: 0.9090 - loss: 0.5472max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m12/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 794ms/step - accuracy: 0.9087 - loss: 0.5480max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m13/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 793ms/step - accuracy: 0.9085 - loss: 0.5484max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m14/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m17s\u001b[0m 792ms/step - accuracy: 0.9084 - loss: 0.5487max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m15/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m16s\u001b[0m 794ms/step - accuracy: 0.9083 - loss: 0.5488max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m16/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 795ms/step - accuracy: 0.9083 - loss: 0.5488max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m17/36\u001b[0m \u001b[32m━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 796ms/step - accuracy: 0.9083 - loss: 0.5488max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m18/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 796ms/step - accuracy: 0.9083 - loss: 0.5488max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m19/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m13s\u001b[0m 796ms/step - accuracy: 0.9084 - loss: 0.5487max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m20/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m12s\u001b[0m 795ms/step - accuracy: 0.9084 - loss: 0.5486max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m21/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 795ms/step - accuracy: 0.9084 - loss: 0.5486max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m22/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 795ms/step - accuracy: 0.9084 - loss: 0.5486max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m23/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m10s\u001b[0m 794ms/step - accuracy: 0.9084 - loss: 0.5487max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m24/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m9s\u001b[0m 795ms/step - accuracy: 0.9084 - loss: 0.5488 max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m25/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m8s\u001b[0m 795ms/step - accuracy: 0.9084 - loss: 0.5488max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m26/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━\u001b[0m \u001b[1m7s\u001b[0m 795ms/step - accuracy: 0.9084 - loss: 0.5489max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m27/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m7s\u001b[0m 795ms/step - accuracy: 0.9083 - loss: 0.5491max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m28/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m6s\u001b[0m 795ms/step - accuracy: 0.9083 - loss: 0.5492max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m29/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m5s\u001b[0m 794ms/step - accuracy: 0.9083 - loss: 0.5494max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m30/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m4s\u001b[0m 794ms/step - accuracy: 0.9083 - loss: 0.5495max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m31/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 794ms/step - accuracy: 0.9083 - loss: 0.5496max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m32/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 793ms/step - accuracy: 0.9083 - loss: 0.5497max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m33/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m2s\u001b[0m 793ms/step - accuracy: 0.9083 - loss: 0.5497max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m34/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m1s\u001b[0m 793ms/step - accuracy: 0.9083 - loss: 0.5497max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m35/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 793ms/step - accuracy: 0.9083 - loss: 0.5498max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 785ms/step - accuracy: 0.9083 - loss: 0.5498max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 814ms/step - accuracy: 0.9083 - loss: 0.5498 - val_accuracy: 0.8518 - val_loss: 0.7008 - learning_rate: 1.0000e-06\n",
      "Epoch 42/50\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 1/36\u001b[0m \u001b[37m━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m28s\u001b[0m 810ms/step - accuracy: 0.9167 - loss: 0.5265max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 2/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m27s\u001b[0m 794ms/step - accuracy: 0.9176 - loss: 0.5248max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 3/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 794ms/step - accuracy: 0.9171 - loss: 0.5271max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 4/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 795ms/step - accuracy: 0.9164 - loss: 0.5297max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 5/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 795ms/step - accuracy: 0.9153 - loss: 0.5329max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 6/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 795ms/step - accuracy: 0.9139 - loss: 0.5372max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 7/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 794ms/step - accuracy: 0.9133 - loss: 0.5395max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 8/36\u001b[0m \u001b[32m━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 793ms/step - accuracy: 0.9129 - loss: 0.5408max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 9/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 793ms/step - accuracy: 0.9127 - loss: 0.5415max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m10/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m20s\u001b[0m 792ms/step - accuracy: 0.9124 - loss: 0.5426max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m11/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 792ms/step - accuracy: 0.9122 - loss: 0.5432max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m12/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 792ms/step - accuracy: 0.9122 - loss: 0.5435max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m13/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 792ms/step - accuracy: 0.9121 - loss: 0.5437max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m14/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m17s\u001b[0m 793ms/step - accuracy: 0.9122 - loss: 0.5436max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m15/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m16s\u001b[0m 793ms/step - accuracy: 0.9122 - loss: 0.5437max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m16/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 794ms/step - accuracy: 0.9122 - loss: 0.5439max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m17/36\u001b[0m \u001b[32m━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 794ms/step - accuracy: 0.9122 - loss: 0.5439max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m18/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 794ms/step - accuracy: 0.9121 - loss: 0.5441max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m19/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m13s\u001b[0m 794ms/step - accuracy: 0.9121 - loss: 0.5442max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m20/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m12s\u001b[0m 795ms/step - accuracy: 0.9121 - loss: 0.5443max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m21/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 795ms/step - accuracy: 0.9121 - loss: 0.5443max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m22/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 795ms/step - accuracy: 0.9120 - loss: 0.5444max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m23/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m10s\u001b[0m 795ms/step - accuracy: 0.9120 - loss: 0.5445max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m24/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m9s\u001b[0m 795ms/step - accuracy: 0.9119 - loss: 0.5446 max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m25/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m8s\u001b[0m 795ms/step - accuracy: 0.9119 - loss: 0.5448max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m26/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━\u001b[0m \u001b[1m7s\u001b[0m 794ms/step - accuracy: 0.9118 - loss: 0.5449max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m27/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m7s\u001b[0m 794ms/step - accuracy: 0.9117 - loss: 0.5450max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m28/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m6s\u001b[0m 794ms/step - accuracy: 0.9117 - loss: 0.5451max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m29/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m5s\u001b[0m 794ms/step - accuracy: 0.9117 - loss: 0.5452max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m30/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m4s\u001b[0m 793ms/step - accuracy: 0.9116 - loss: 0.5453max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m31/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 793ms/step - accuracy: 0.9115 - loss: 0.5455max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m32/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 793ms/step - accuracy: 0.9115 - loss: 0.5456max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m33/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m2s\u001b[0m 793ms/step - accuracy: 0.9114 - loss: 0.5457max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m34/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m1s\u001b[0m 792ms/step - accuracy: 0.9113 - loss: 0.5458max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m35/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 792ms/step - accuracy: 0.9113 - loss: 0.5460max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 784ms/step - accuracy: 0.9112 - loss: 0.5461max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 814ms/step - accuracy: 0.9111 - loss: 0.5462 - val_accuracy: 0.8521 - val_loss: 0.6993 - learning_rate: 1.0000e-06\n",
      "Epoch 43/50\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 1/36\u001b[0m \u001b[37m━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m27s\u001b[0m 784ms/step - accuracy: 0.8904 - loss: 0.5892max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 2/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 764ms/step - accuracy: 0.8960 - loss: 0.5761max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 3/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 773ms/step - accuracy: 0.8987 - loss: 0.5701max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 4/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 777ms/step - accuracy: 0.9004 - loss: 0.5662max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 5/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 779ms/step - accuracy: 0.9014 - loss: 0.5637max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 6/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 780ms/step - accuracy: 0.9019 - loss: 0.5625max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 7/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 781ms/step - accuracy: 0.9017 - loss: 0.5633max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 8/36\u001b[0m \u001b[32m━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 781ms/step - accuracy: 0.9017 - loss: 0.5638max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 9/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 782ms/step - accuracy: 0.9018 - loss: 0.5639max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m10/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m20s\u001b[0m 783ms/step - accuracy: 0.9021 - loss: 0.5636max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m11/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 783ms/step - accuracy: 0.9025 - loss: 0.5630max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m12/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 784ms/step - accuracy: 0.9028 - loss: 0.5623max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m13/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 784ms/step - accuracy: 0.9030 - loss: 0.5620max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m14/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m17s\u001b[0m 784ms/step - accuracy: 0.9032 - loss: 0.5616max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m15/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m16s\u001b[0m 785ms/step - accuracy: 0.9034 - loss: 0.5613max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m16/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 784ms/step - accuracy: 0.9037 - loss: 0.5607max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m17/36\u001b[0m \u001b[32m━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 785ms/step - accuracy: 0.9039 - loss: 0.5603max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m18/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 785ms/step - accuracy: 0.9042 - loss: 0.5598max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m19/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m13s\u001b[0m 785ms/step - accuracy: 0.9044 - loss: 0.5593max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m20/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m12s\u001b[0m 785ms/step - accuracy: 0.9046 - loss: 0.5590max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m21/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 785ms/step - accuracy: 0.9047 - loss: 0.5586max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m22/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m10s\u001b[0m 785ms/step - accuracy: 0.9049 - loss: 0.5583max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m23/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m10s\u001b[0m 784ms/step - accuracy: 0.9051 - loss: 0.5579max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m24/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m9s\u001b[0m 784ms/step - accuracy: 0.9052 - loss: 0.5576 max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m25/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m8s\u001b[0m 784ms/step - accuracy: 0.9054 - loss: 0.5573max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m26/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━\u001b[0m \u001b[1m7s\u001b[0m 784ms/step - accuracy: 0.9055 - loss: 0.5570max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m27/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m7s\u001b[0m 784ms/step - accuracy: 0.9056 - loss: 0.5568max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m28/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m6s\u001b[0m 784ms/step - accuracy: 0.9057 - loss: 0.5566max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m29/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m5s\u001b[0m 785ms/step - accuracy: 0.9058 - loss: 0.5564max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m30/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m4s\u001b[0m 785ms/step - accuracy: 0.9059 - loss: 0.5562max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m31/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 785ms/step - accuracy: 0.9060 - loss: 0.5560max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m32/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 785ms/step - accuracy: 0.9061 - loss: 0.5557max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m33/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m2s\u001b[0m 785ms/step - accuracy: 0.9062 - loss: 0.5555max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m34/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m1s\u001b[0m 784ms/step - accuracy: 0.9063 - loss: 0.5554max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m35/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 784ms/step - accuracy: 0.9064 - loss: 0.5552max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 776ms/step - accuracy: 0.9065 - loss: 0.5550max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 805ms/step - accuracy: 0.9065 - loss: 0.5548 - val_accuracy: 0.8513 - val_loss: 0.7016 - learning_rate: 1.0000e-06\n",
      "Epoch 44/50\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 1/36\u001b[0m \u001b[37m━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m27s\u001b[0m 773ms/step - accuracy: 0.9238 - loss: 0.5106max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 2/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 759ms/step - accuracy: 0.9194 - loss: 0.5246max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 3/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 771ms/step - accuracy: 0.9192 - loss: 0.5247max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 4/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 777ms/step - accuracy: 0.9173 - loss: 0.5294max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 5/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 774ms/step - accuracy: 0.9156 - loss: 0.5344max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 6/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 777ms/step - accuracy: 0.9145 - loss: 0.5376max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 7/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 780ms/step - accuracy: 0.9139 - loss: 0.5397max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 8/36\u001b[0m \u001b[32m━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 781ms/step - accuracy: 0.9133 - loss: 0.5414max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 9/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 782ms/step - accuracy: 0.9127 - loss: 0.5428max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m10/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m20s\u001b[0m 782ms/step - accuracy: 0.9123 - loss: 0.5435max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m11/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 784ms/step - accuracy: 0.9120 - loss: 0.5441max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m12/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 784ms/step - accuracy: 0.9118 - loss: 0.5445max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m13/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 785ms/step - accuracy: 0.9117 - loss: 0.5446max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m14/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m17s\u001b[0m 785ms/step - accuracy: 0.9116 - loss: 0.5446max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m15/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m16s\u001b[0m 786ms/step - accuracy: 0.9116 - loss: 0.5446max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m16/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 786ms/step - accuracy: 0.9116 - loss: 0.5445max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m17/36\u001b[0m \u001b[32m━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 786ms/step - accuracy: 0.9115 - loss: 0.5445max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m18/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 786ms/step - accuracy: 0.9115 - loss: 0.5446max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m19/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m13s\u001b[0m 786ms/step - accuracy: 0.9114 - loss: 0.5446max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m20/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m12s\u001b[0m 786ms/step - accuracy: 0.9114 - loss: 0.5446max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m21/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 786ms/step - accuracy: 0.9113 - loss: 0.5446max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m22/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 786ms/step - accuracy: 0.9113 - loss: 0.5447max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m23/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m10s\u001b[0m 786ms/step - accuracy: 0.9112 - loss: 0.5449max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m24/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m9s\u001b[0m 786ms/step - accuracy: 0.9110 - loss: 0.5452 max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m25/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m8s\u001b[0m 786ms/step - accuracy: 0.9109 - loss: 0.5454max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m26/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━\u001b[0m \u001b[1m7s\u001b[0m 786ms/step - accuracy: 0.9108 - loss: 0.5456max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m27/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m7s\u001b[0m 786ms/step - accuracy: 0.9107 - loss: 0.5458max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m28/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m6s\u001b[0m 786ms/step - accuracy: 0.9107 - loss: 0.5460max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m29/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m5s\u001b[0m 786ms/step - accuracy: 0.9106 - loss: 0.5462max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m30/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m4s\u001b[0m 786ms/step - accuracy: 0.9105 - loss: 0.5463max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m31/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 787ms/step - accuracy: 0.9105 - loss: 0.5464max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m32/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 787ms/step - accuracy: 0.9104 - loss: 0.5466max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m33/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m2s\u001b[0m 787ms/step - accuracy: 0.9104 - loss: 0.5467max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m34/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m1s\u001b[0m 787ms/step - accuracy: 0.9103 - loss: 0.5468max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m35/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 787ms/step - accuracy: 0.9103 - loss: 0.5469max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 779ms/step - accuracy: 0.9103 - loss: 0.5470max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 809ms/step - accuracy: 0.9102 - loss: 0.5471 - val_accuracy: 0.8517 - val_loss: 0.7006 - learning_rate: 1.0000e-06\n",
      "Epoch 45/50\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 1/36\u001b[0m \u001b[37m━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m28s\u001b[0m 805ms/step - accuracy: 0.8980 - loss: 0.5874max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 2/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 786ms/step - accuracy: 0.9037 - loss: 0.5710max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 3/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 787ms/step - accuracy: 0.9073 - loss: 0.5605max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 4/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 788ms/step - accuracy: 0.9092 - loss: 0.5549max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 5/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 790ms/step - accuracy: 0.9100 - loss: 0.5524max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 6/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 790ms/step - accuracy: 0.9106 - loss: 0.5503max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 7/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 789ms/step - accuracy: 0.9109 - loss: 0.5490max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 8/36\u001b[0m \u001b[32m━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 789ms/step - accuracy: 0.9112 - loss: 0.5479max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 9/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 789ms/step - accuracy: 0.9109 - loss: 0.5481max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m10/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m20s\u001b[0m 790ms/step - accuracy: 0.9107 - loss: 0.5484max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m11/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 790ms/step - accuracy: 0.9105 - loss: 0.5487max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m12/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 790ms/step - accuracy: 0.9104 - loss: 0.5489max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m13/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 791ms/step - accuracy: 0.9103 - loss: 0.5489max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m14/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m17s\u001b[0m 791ms/step - accuracy: 0.9103 - loss: 0.5489max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m15/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m16s\u001b[0m 791ms/step - accuracy: 0.9102 - loss: 0.5488max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m16/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 791ms/step - accuracy: 0.9102 - loss: 0.5486max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m17/36\u001b[0m \u001b[32m━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 792ms/step - accuracy: 0.9102 - loss: 0.5485max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m18/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 792ms/step - accuracy: 0.9102 - loss: 0.5485max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m19/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m13s\u001b[0m 792ms/step - accuracy: 0.9102 - loss: 0.5484max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m20/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m12s\u001b[0m 792ms/step - accuracy: 0.9102 - loss: 0.5483max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m21/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 793ms/step - accuracy: 0.9103 - loss: 0.5480max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m22/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 792ms/step - accuracy: 0.9103 - loss: 0.5478max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m23/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m10s\u001b[0m 792ms/step - accuracy: 0.9103 - loss: 0.5477max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m24/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m9s\u001b[0m 792ms/step - accuracy: 0.9103 - loss: 0.5477 max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m25/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m8s\u001b[0m 792ms/step - accuracy: 0.9103 - loss: 0.5476max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m26/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━\u001b[0m \u001b[1m7s\u001b[0m 791ms/step - accuracy: 0.9104 - loss: 0.5475max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m27/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m7s\u001b[0m 791ms/step - accuracy: 0.9103 - loss: 0.5475max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m28/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m6s\u001b[0m 791ms/step - accuracy: 0.9103 - loss: 0.5475max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m29/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m5s\u001b[0m 792ms/step - accuracy: 0.9103 - loss: 0.5475max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m30/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m4s\u001b[0m 792ms/step - accuracy: 0.9103 - loss: 0.5475max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m31/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 791ms/step - accuracy: 0.9103 - loss: 0.5475max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m32/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 791ms/step - accuracy: 0.9102 - loss: 0.5475max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m33/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m2s\u001b[0m 791ms/step - accuracy: 0.9102 - loss: 0.5475max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m34/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m1s\u001b[0m 792ms/step - accuracy: 0.9102 - loss: 0.5475max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m35/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 792ms/step - accuracy: 0.9102 - loss: 0.5475max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 784ms/step - accuracy: 0.9102 - loss: 0.5475max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 812ms/step - accuracy: 0.9102 - loss: 0.5475 - val_accuracy: 0.8513 - val_loss: 0.7016 - learning_rate: 1.0000e-06\n",
      "Epoch 46/50\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 1/36\u001b[0m \u001b[37m━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m28s\u001b[0m 805ms/step - accuracy: 0.8810 - loss: 0.6236max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 2/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 794ms/step - accuracy: 0.8865 - loss: 0.6072max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 3/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 792ms/step - accuracy: 0.8917 - loss: 0.5933max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 4/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 792ms/step - accuracy: 0.8930 - loss: 0.5884max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 5/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 793ms/step - accuracy: 0.8943 - loss: 0.5848max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 6/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 792ms/step - accuracy: 0.8952 - loss: 0.5823max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 7/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 792ms/step - accuracy: 0.8959 - loss: 0.5805max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 8/36\u001b[0m \u001b[32m━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 792ms/step - accuracy: 0.8969 - loss: 0.5783max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 9/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 791ms/step - accuracy: 0.8979 - loss: 0.5757max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m10/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m20s\u001b[0m 789ms/step - accuracy: 0.8988 - loss: 0.5734max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m11/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 789ms/step - accuracy: 0.8995 - loss: 0.5717max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m12/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 789ms/step - accuracy: 0.9001 - loss: 0.5702max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m13/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 788ms/step - accuracy: 0.9007 - loss: 0.5685max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m14/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m17s\u001b[0m 788ms/step - accuracy: 0.9013 - loss: 0.5670max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m15/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m16s\u001b[0m 788ms/step - accuracy: 0.9019 - loss: 0.5655max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m16/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 788ms/step - accuracy: 0.9024 - loss: 0.5642max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m17/36\u001b[0m \u001b[32m━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 788ms/step - accuracy: 0.9028 - loss: 0.5633max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m18/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 788ms/step - accuracy: 0.9031 - loss: 0.5624max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m19/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m13s\u001b[0m 788ms/step - accuracy: 0.9034 - loss: 0.5616max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m20/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m12s\u001b[0m 789ms/step - accuracy: 0.9037 - loss: 0.5609max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m21/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 789ms/step - accuracy: 0.9040 - loss: 0.5602max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m22/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 789ms/step - accuracy: 0.9042 - loss: 0.5596max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m23/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m10s\u001b[0m 789ms/step - accuracy: 0.9045 - loss: 0.5589max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m24/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m9s\u001b[0m 788ms/step - accuracy: 0.9047 - loss: 0.5584 max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m25/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m8s\u001b[0m 789ms/step - accuracy: 0.9049 - loss: 0.5578max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m26/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━\u001b[0m \u001b[1m7s\u001b[0m 789ms/step - accuracy: 0.9051 - loss: 0.5573max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m27/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m7s\u001b[0m 789ms/step - accuracy: 0.9053 - loss: 0.5569max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m28/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m6s\u001b[0m 789ms/step - accuracy: 0.9054 - loss: 0.5565max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m29/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m5s\u001b[0m 789ms/step - accuracy: 0.9056 - loss: 0.5561max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m30/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m4s\u001b[0m 790ms/step - accuracy: 0.9057 - loss: 0.5558max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m31/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 790ms/step - accuracy: 0.9058 - loss: 0.5555max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m32/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 790ms/step - accuracy: 0.9059 - loss: 0.5552max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m33/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m2s\u001b[0m 790ms/step - accuracy: 0.9060 - loss: 0.5550max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m34/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m1s\u001b[0m 790ms/step - accuracy: 0.9061 - loss: 0.5547max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m35/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 790ms/step - accuracy: 0.9062 - loss: 0.5545max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 782ms/step - accuracy: 0.9063 - loss: 0.5543max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 813ms/step - accuracy: 0.9064 - loss: 0.5541 - val_accuracy: 0.8521 - val_loss: 0.6988 - learning_rate: 1.0000e-06\n",
      "Epoch 47/50\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 1/36\u001b[0m \u001b[37m━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m28s\u001b[0m 809ms/step - accuracy: 0.9139 - loss: 0.5433max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 2/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m27s\u001b[0m 801ms/step - accuracy: 0.9119 - loss: 0.5465max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 3/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 799ms/step - accuracy: 0.9130 - loss: 0.5424max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 4/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 797ms/step - accuracy: 0.9127 - loss: 0.5421max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 5/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 800ms/step - accuracy: 0.9123 - loss: 0.5426max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 6/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 798ms/step - accuracy: 0.9124 - loss: 0.5420max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 7/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 800ms/step - accuracy: 0.9126 - loss: 0.5414max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 8/36\u001b[0m \u001b[32m━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 798ms/step - accuracy: 0.9126 - loss: 0.5409max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 9/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 798ms/step - accuracy: 0.9126 - loss: 0.5406max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m10/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m20s\u001b[0m 799ms/step - accuracy: 0.9126 - loss: 0.5404max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m11/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 799ms/step - accuracy: 0.9127 - loss: 0.5400max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m12/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 800ms/step - accuracy: 0.9127 - loss: 0.5399max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m13/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 800ms/step - accuracy: 0.9127 - loss: 0.5397max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m14/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m17s\u001b[0m 800ms/step - accuracy: 0.9127 - loss: 0.5396max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m15/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m16s\u001b[0m 800ms/step - accuracy: 0.9128 - loss: 0.5395max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m16/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 799ms/step - accuracy: 0.9126 - loss: 0.5398max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m17/36\u001b[0m \u001b[32m━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 799ms/step - accuracy: 0.9125 - loss: 0.5401max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m18/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 798ms/step - accuracy: 0.9124 - loss: 0.5405max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m19/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m13s\u001b[0m 797ms/step - accuracy: 0.9123 - loss: 0.5407max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m20/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m12s\u001b[0m 797ms/step - accuracy: 0.9123 - loss: 0.5408max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m21/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 796ms/step - accuracy: 0.9123 - loss: 0.5409max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m22/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 796ms/step - accuracy: 0.9122 - loss: 0.5411max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m23/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m10s\u001b[0m 796ms/step - accuracy: 0.9121 - loss: 0.5412max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m24/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m9s\u001b[0m 796ms/step - accuracy: 0.9121 - loss: 0.5413 max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m25/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m8s\u001b[0m 796ms/step - accuracy: 0.9120 - loss: 0.5415max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m26/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━\u001b[0m \u001b[1m7s\u001b[0m 796ms/step - accuracy: 0.9119 - loss: 0.5417max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m27/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m7s\u001b[0m 796ms/step - accuracy: 0.9118 - loss: 0.5421max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m28/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m6s\u001b[0m 796ms/step - accuracy: 0.9116 - loss: 0.5423max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m29/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m5s\u001b[0m 796ms/step - accuracy: 0.9116 - loss: 0.5426max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m30/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m4s\u001b[0m 796ms/step - accuracy: 0.9115 - loss: 0.5428max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m31/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 795ms/step - accuracy: 0.9114 - loss: 0.5430max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m32/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 795ms/step - accuracy: 0.9113 - loss: 0.5432max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m33/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m2s\u001b[0m 795ms/step - accuracy: 0.9112 - loss: 0.5434max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m34/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m1s\u001b[0m 795ms/step - accuracy: 0.9112 - loss: 0.5435max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m35/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 795ms/step - accuracy: 0.9111 - loss: 0.5437max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 787ms/step - accuracy: 0.9111 - loss: 0.5438max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 817ms/step - accuracy: 0.9110 - loss: 0.5440 - val_accuracy: 0.8519 - val_loss: 0.7011 - learning_rate: 1.0000e-06\n",
      "Epoch 48/50\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 1/36\u001b[0m \u001b[37m━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m28s\u001b[0m 801ms/step - accuracy: 0.9249 - loss: 0.5157max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 2/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 781ms/step - accuracy: 0.9166 - loss: 0.5373max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 3/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 784ms/step - accuracy: 0.9134 - loss: 0.5471max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 4/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 784ms/step - accuracy: 0.9122 - loss: 0.5502max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 5/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 785ms/step - accuracy: 0.9115 - loss: 0.5517max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 6/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 787ms/step - accuracy: 0.9113 - loss: 0.5518max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 7/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 788ms/step - accuracy: 0.9108 - loss: 0.5523max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 8/36\u001b[0m \u001b[32m━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 789ms/step - accuracy: 0.9105 - loss: 0.5525max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 9/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 788ms/step - accuracy: 0.9104 - loss: 0.5521max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m10/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m20s\u001b[0m 788ms/step - accuracy: 0.9103 - loss: 0.5519max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m11/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 787ms/step - accuracy: 0.9101 - loss: 0.5520max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m12/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 787ms/step - accuracy: 0.9099 - loss: 0.5520max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m13/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 787ms/step - accuracy: 0.9098 - loss: 0.5518max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m14/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m17s\u001b[0m 786ms/step - accuracy: 0.9097 - loss: 0.5520max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m15/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m16s\u001b[0m 785ms/step - accuracy: 0.9095 - loss: 0.5523max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m16/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 785ms/step - accuracy: 0.9093 - loss: 0.5524max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m17/36\u001b[0m \u001b[32m━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 785ms/step - accuracy: 0.9091 - loss: 0.5527max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m18/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 786ms/step - accuracy: 0.9090 - loss: 0.5529max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m19/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m13s\u001b[0m 785ms/step - accuracy: 0.9089 - loss: 0.5530max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m20/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m12s\u001b[0m 786ms/step - accuracy: 0.9088 - loss: 0.5531max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m21/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 785ms/step - accuracy: 0.9088 - loss: 0.5531max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m22/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m10s\u001b[0m 786ms/step - accuracy: 0.9087 - loss: 0.5531max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m23/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m10s\u001b[0m 786ms/step - accuracy: 0.9088 - loss: 0.5529max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m24/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m9s\u001b[0m 787ms/step - accuracy: 0.9088 - loss: 0.5528 max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m25/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m8s\u001b[0m 787ms/step - accuracy: 0.9088 - loss: 0.5526max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m26/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━\u001b[0m \u001b[1m7s\u001b[0m 786ms/step - accuracy: 0.9088 - loss: 0.5524max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m27/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m7s\u001b[0m 786ms/step - accuracy: 0.9088 - loss: 0.5523max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m28/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m6s\u001b[0m 786ms/step - accuracy: 0.9089 - loss: 0.5522max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m29/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m5s\u001b[0m 786ms/step - accuracy: 0.9089 - loss: 0.5520max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m30/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m4s\u001b[0m 786ms/step - accuracy: 0.9089 - loss: 0.5518max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m31/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 785ms/step - accuracy: 0.9090 - loss: 0.5516max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m32/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 785ms/step - accuracy: 0.9090 - loss: 0.5515max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m33/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m2s\u001b[0m 785ms/step - accuracy: 0.9090 - loss: 0.5514max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m34/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m1s\u001b[0m 786ms/step - accuracy: 0.9090 - loss: 0.5513max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m35/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 786ms/step - accuracy: 0.9090 - loss: 0.5512max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 778ms/step - accuracy: 0.9090 - loss: 0.5511max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 808ms/step - accuracy: 0.9091 - loss: 0.5510 - val_accuracy: 0.8519 - val_loss: 0.7002 - learning_rate: 1.0000e-06\n",
      "Epoch 49/50\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 1/36\u001b[0m \u001b[37m━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m28s\u001b[0m 811ms/step - accuracy: 0.9162 - loss: 0.5297max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 2/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 785ms/step - accuracy: 0.9168 - loss: 0.5286max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 3/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 789ms/step - accuracy: 0.9173 - loss: 0.5292max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 4/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 788ms/step - accuracy: 0.9171 - loss: 0.5304max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 5/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 790ms/step - accuracy: 0.9169 - loss: 0.5311max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 6/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 792ms/step - accuracy: 0.9162 - loss: 0.5327max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 7/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 792ms/step - accuracy: 0.9155 - loss: 0.5345max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 8/36\u001b[0m \u001b[32m━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 792ms/step - accuracy: 0.9150 - loss: 0.5359max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 9/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 792ms/step - accuracy: 0.9147 - loss: 0.5368max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m10/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m20s\u001b[0m 791ms/step - accuracy: 0.9144 - loss: 0.5376max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m11/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 791ms/step - accuracy: 0.9141 - loss: 0.5383max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m12/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 791ms/step - accuracy: 0.9139 - loss: 0.5388max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m13/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 791ms/step - accuracy: 0.9138 - loss: 0.5392max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m14/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m17s\u001b[0m 791ms/step - accuracy: 0.9135 - loss: 0.5397max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m15/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m16s\u001b[0m 791ms/step - accuracy: 0.9133 - loss: 0.5401max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m16/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 791ms/step - accuracy: 0.9131 - loss: 0.5405max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m17/36\u001b[0m \u001b[32m━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 791ms/step - accuracy: 0.9130 - loss: 0.5408max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m18/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 791ms/step - accuracy: 0.9129 - loss: 0.5411max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m19/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m13s\u001b[0m 791ms/step - accuracy: 0.9128 - loss: 0.5413max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m20/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m12s\u001b[0m 792ms/step - accuracy: 0.9127 - loss: 0.5414max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m21/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 792ms/step - accuracy: 0.9127 - loss: 0.5415max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m22/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 792ms/step - accuracy: 0.9126 - loss: 0.5416max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m23/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m10s\u001b[0m 792ms/step - accuracy: 0.9125 - loss: 0.5417max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m24/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m9s\u001b[0m 792ms/step - accuracy: 0.9125 - loss: 0.5416 max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m25/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m8s\u001b[0m 792ms/step - accuracy: 0.9125 - loss: 0.5416max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m26/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━\u001b[0m \u001b[1m7s\u001b[0m 791ms/step - accuracy: 0.9125 - loss: 0.5416max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m27/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m7s\u001b[0m 791ms/step - accuracy: 0.9124 - loss: 0.5417max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m28/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m6s\u001b[0m 791ms/step - accuracy: 0.9124 - loss: 0.5417max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m29/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m5s\u001b[0m 791ms/step - accuracy: 0.9124 - loss: 0.5417max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m30/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m4s\u001b[0m 791ms/step - accuracy: 0.9123 - loss: 0.5418max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m31/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 791ms/step - accuracy: 0.9123 - loss: 0.5419max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m32/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 791ms/step - accuracy: 0.9122 - loss: 0.5420max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m33/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m2s\u001b[0m 791ms/step - accuracy: 0.9121 - loss: 0.5421max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m34/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m1s\u001b[0m 791ms/step - accuracy: 0.9121 - loss: 0.5422max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m35/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 791ms/step - accuracy: 0.9120 - loss: 0.5424max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 782ms/step - accuracy: 0.9119 - loss: 0.5425max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 812ms/step - accuracy: 0.9119 - loss: 0.5426 - val_accuracy: 0.8517 - val_loss: 0.7005 - learning_rate: 1.0000e-06\n",
      "Epoch 50/50\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 1/36\u001b[0m \u001b[37m━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m28s\u001b[0m 811ms/step - accuracy: 0.9247 - loss: 0.5046max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 2/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 789ms/step - accuracy: 0.9183 - loss: 0.5270max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 3/36\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m26s\u001b[0m 793ms/step - accuracy: 0.9163 - loss: 0.5325max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 4/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m25s\u001b[0m 798ms/step - accuracy: 0.9143 - loss: 0.5378max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 5/36\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m24s\u001b[0m 800ms/step - accuracy: 0.9134 - loss: 0.5400max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 6/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 798ms/step - accuracy: 0.9130 - loss: 0.5411max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 7/36\u001b[0m \u001b[32m━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m23s\u001b[0m 798ms/step - accuracy: 0.9129 - loss: 0.5413max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 8/36\u001b[0m \u001b[32m━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m22s\u001b[0m 800ms/step - accuracy: 0.9131 - loss: 0.5413max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m 9/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m21s\u001b[0m 800ms/step - accuracy: 0.9130 - loss: 0.5418max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m10/36\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m20s\u001b[0m 800ms/step - accuracy: 0.9130 - loss: 0.5419max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m11/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 799ms/step - accuracy: 0.9129 - loss: 0.5423max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m12/36\u001b[0m \u001b[32m━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━\u001b[0m \u001b[1m19s\u001b[0m 799ms/step - accuracy: 0.9127 - loss: 0.5429max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m13/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m18s\u001b[0m 798ms/step - accuracy: 0.9126 - loss: 0.5433max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m14/36\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m17s\u001b[0m 798ms/step - accuracy: 0.9124 - loss: 0.5437max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m15/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m16s\u001b[0m 797ms/step - accuracy: 0.9122 - loss: 0.5439max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m16/36\u001b[0m \u001b[32m━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 798ms/step - accuracy: 0.9122 - loss: 0.5439max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m17/36\u001b[0m \u001b[32m━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━\u001b[0m \u001b[1m15s\u001b[0m 797ms/step - accuracy: 0.9121 - loss: 0.5439max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m18/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 796ms/step - accuracy: 0.9121 - loss: 0.5438max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m19/36\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m13s\u001b[0m 796ms/step - accuracy: 0.9122 - loss: 0.5436max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m20/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m12s\u001b[0m 795ms/step - accuracy: 0.9121 - loss: 0.5437max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m21/36\u001b[0m \u001b[32m━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 794ms/step - accuracy: 0.9120 - loss: 0.5438max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m22/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m11s\u001b[0m 794ms/step - accuracy: 0.9119 - loss: 0.5439max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m23/36\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m10s\u001b[0m 793ms/step - accuracy: 0.9118 - loss: 0.5440max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m24/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m9s\u001b[0m 794ms/step - accuracy: 0.9118 - loss: 0.5441 max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m25/36\u001b[0m \u001b[32m━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━\u001b[0m \u001b[1m8s\u001b[0m 793ms/step - accuracy: 0.9117 - loss: 0.5441max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m26/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━\u001b[0m \u001b[1m7s\u001b[0m 793ms/step - accuracy: 0.9117 - loss: 0.5441max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m27/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m7s\u001b[0m 793ms/step - accuracy: 0.9116 - loss: 0.5441max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m28/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m6s\u001b[0m 793ms/step - accuracy: 0.9116 - loss: 0.5441max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m29/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m5s\u001b[0m 793ms/step - accuracy: 0.9115 - loss: 0.5441max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m30/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━\u001b[0m \u001b[1m4s\u001b[0m 793ms/step - accuracy: 0.9115 - loss: 0.5442max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m31/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 793ms/step - accuracy: 0.9114 - loss: 0.5442max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m32/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m3s\u001b[0m 793ms/step - accuracy: 0.9114 - loss: 0.5443max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m33/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m2s\u001b[0m 792ms/step - accuracy: 0.9113 - loss: 0.5443max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m34/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m1s\u001b[0m 792ms/step - accuracy: 0.9113 - loss: 0.5443max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m35/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 792ms/step - accuracy: 0.9113 - loss: 0.5444max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 788ms/step - accuracy: 0.9112 - loss: 0.5444max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      " Saved checkpoint: checkpoints/segnet_epoch_050_vloss_0.6998.h5\n",
      "\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m30s\u001b[0m 835ms/step - accuracy: 0.9112 - loss: 0.5444 - val_accuracy: 0.8517 - val_loss: 0.6998 - learning_rate: 1.0000e-06\n"
     ]
    }
   ],
   "source": [
    "load_checkpoint(model, 'checkpoints')\n",
    "history = model.fit(\n",
    "    X_train,\n",
    "    y_train_int,\n",
    "    batch_size=12,\n",
    "    epochs=50,               # high ceiling\n",
    "    shuffle=True,\n",
    "    validation_split=0.1,\n",
    "    callbacks=[early_stop, save_every_10, reduce_lr ],\n",
    "    initial_epoch = 30\n",
    ")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m1/8\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m4s\u001b[0m 713ms/step - accuracy: 0.7948 - loss: 0.9124max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m2/8\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m3s\u001b[0m 663ms/step - accuracy: 0.7929 - loss: 0.9135max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m3/8\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m3s\u001b[0m 687ms/step - accuracy: 0.7981 - loss: 0.8929max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m4/8\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m2s\u001b[0m 682ms/step - accuracy: 0.8020 - loss: 0.8783max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m5/8\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m2s\u001b[0m 693ms/step - accuracy: 0.8039 - loss: 0.8718max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m6/8\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m1s\u001b[0m 697ms/step - accuracy: 0.8055 - loss: 0.8659max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m7/8\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m0s\u001b[0m 691ms/step - accuracy: 0.8076 - loss: 0.8585max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m8/8\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 622ms/step - accuracy: 0.8105 - loss: 0.8484\n",
      "test loss, test accuracy: [0.8128920793533325, 0.8206510543823242]\n"
     ]
    }
   ],
   "source": [
    "results = model.evaluate(X_test, y_test_int)\n",
    "print(\"test loss, test accuracy:\", results)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.plot(history.history['accuracy'])\n",
    "plt.plot(history.history['val_accuracy'])\n",
    "plt.title('Model Accuracy')\n",
    "plt.ylabel('Accuracy')\n",
    "plt.xlabel('Epoch')\n",
    "plt.xlim([0, 30])\n",
    "plt.ylim([0.4, 1])  # Set y-axis range for accuracy\n",
    "plt.legend(['Train', 'Test'], loc='upper left')\n",
    "plt.show()\n",
    "\n",
    "plt.plot(history.history['loss'])\n",
    "plt.plot(history.history['val_loss'])\n",
    "plt.title('Model Loss')\n",
    "plt.ylabel('Loss')\n",
    "plt.xlabel('Epoch')\n",
    "plt.xlim([0, 30])\n",
    "plt.ylim([0.25, 2.25])  # Set y-axis range for loss\n",
    "plt.legend(['Train', 'Test'], loc='upper left')\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m1/8\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m4s\u001b[0m 683ms/stepmax pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m2/8\u001b[0m \u001b[32m━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━\u001b[0m \u001b[1m4s\u001b[0m 695ms/stepmax pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m3/8\u001b[0m \u001b[32m━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━\u001b[0m \u001b[1m3s\u001b[0m 685ms/stepmax pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m4/8\u001b[0m \u001b[32m━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━━━\u001b[0m \u001b[1m2s\u001b[0m 680ms/stepmax pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m5/8\u001b[0m \u001b[32m━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━━━━\u001b[0m \u001b[1m2s\u001b[0m 681ms/stepmax pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m6/8\u001b[0m \u001b[32m━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━━━\u001b[0m \u001b[1m1s\u001b[0m 675ms/stepmax pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m7/8\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m0s\u001b[0m 673ms/stepmax pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "max pooling with argmax\n",
      "computing mask\n",
      "\u001b[1m8/8\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 603ms/step\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "(<Figure size 640x480 with 1 Axes>,\n",
       " <matplotlib.image.AxesImage at 0x7f6dc6e11b10>,\n",
       " (-0.5, 223.5, 223.5, -0.5))"
      ]
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1280x960 with 12 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1280x960 with 12 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#model-the continued one \n",
    "pred = model.predict(X_test, verbose=1)\n",
    "\n",
    "ranidx = randint(0, len(y_test))\n",
    "gs = GridSpec(1,12)\n",
    "plt.figure(dpi=200)\n",
    "for i in range(12):\n",
    "    plt.subplot(gs[i]), plt.imshow(pred[ranidx][:,:,i], cmap='jet'), plt.axis('off')\n",
    "\n",
    "plt.figure(dpi=200)\n",
    "for i in range(12):\n",
    "    plt.subplot(gs[i]), plt.imshow(y_test[ranidx][:,:,i],cmap='jet'), plt.axis('off')\n",
    "    \n",
    "plt.figure(),plt.imshow(X_test[ranidx]), plt.axis('off')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1280x960 with 12 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# refer from : https://github.com/preddy5/segnet/blob/master/Segnet.ipynb\n",
    "Sky = [128,128,128]\n",
    "Building = [128,0,0]\n",
    "Pole = [192,192,128]\n",
    "Road_marking = [255,69,0]\n",
    "Road = [128,64,128]\n",
    "Pavement = [60,40,222]\n",
    "Tree = [128,128,0]\n",
    "SignSymbol = [192,128,128]\n",
    "Fence = [64,64,128]\n",
    "Car = [64,0,128]\n",
    "Pedestrian = [64,64,0]\n",
    "Bicyclist = [0,128,192]\n",
    "Unlabelled = [0,0,0]\n",
    "\n",
    "label_colours = np.array([Sky, Building, Pole, Road, Pavement,\n",
    "                          Tree, SignSymbol, Fence, Car, Pedestrian, Bicyclist, Unlabelled])\n",
    "\n",
    "def visualize(temp, plot=True):\n",
    "    r = temp.copy()\n",
    "    g = temp.copy()\n",
    "    b = temp.copy()\n",
    "\n",
    "    for l in [0, 3, 4, 8, 9, 10]:\n",
    "        r[temp==l]=label_colours[l,0]                                                         \n",
    "        g[temp==l]=label_colours[l,1]\n",
    "        b[temp==l]=label_colours[l,2]\n",
    "\n",
    "    rgb = np.zeros((temp.shape[0], temp.shape[1], 3))\n",
    "    rgb[:,:,0] = (r/255.0)#[:,:,0]\n",
    "    rgb[:,:,1] = (g/255.0)#[:,:,1]\n",
    "    rgb[:,:,2] = (b/255.0)#[:,:,2]\n",
    "    if plot:\n",
    "        plt.imshow(rgb)\n",
    "    else:\n",
    "        return rgb\n",
    "\n",
    "randsample = sample(range(0,len(pred)), 4)\n",
    "gs = GridSpec(3,5)\n",
    "plt.figure(dpi=200)\n",
    "\n",
    "for i in range(4):\n",
    "    output = visualize(np.argmax(pred[randsample[i]],axis=2).reshape((224,224)), plot=False)\n",
    "    out_test = visualize(np.argmax(y_test[randsample[i]],axis=2).reshape((224,224)), plot=False)\n",
    "        \n",
    "    plt.subplot(gs[i]), plt.imshow(X_test[randsample[i]]), plt.axis('off')\n",
    "    plt.subplot(gs[5+i]), plt.imshow(output), plt.axis('off')\n",
    "    plt.subplot(gs[10+i]), plt.imshow(out_test), plt.axis('off')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Pixel Accuracy: 0.8347217793367347\n",
      "Mean Class Accuracy: 0.3959245159336149\n",
      "Mean IoU: 0.3425056061210918\n",
      "Class IoU: [0.930731932579081, 0.6675055048757471, 0.0, 0.9566976326041354, 0.8016733808490858, 0.5080981799966605, 0.0, 0.0005497526113249038, 0.20622568093385213, 0.0, 0.0, 0.03858520900321544, nan]\n",
      "Class Accuracy: [0.9927348848663957, 0.8188307929770403, 0.0, 0.9796701189106253, 0.9540844550986539, 0.5224931318681318, 0.0, 0.0072992700729927005, 0.32919254658385094, 0.0, 0.0, 0.14678899082568808, nan]\n"
     ]
    }
   ],
   "source": [
    "i = randsample[1]\n",
    "\n",
    "metrics = compute_metrics_from_prediction(pred[i], y_test[i], num_classes=13)\n",
    "for k, v in metrics.items():\n",
    "    print(f\"{k}: {v}\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/home/zeus/miniconda3/envs/cloudspace/lib/python3.10/site-packages/IPython/core/magics/osm.py:417: UserWarning: using dhist requires you to install the `pickleshare` library.\n",
      "  self.shell.db['dhist'] = compress_dhist(dhist)[-100:]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/teamspace/studios/this_studio\n",
      "SegNet-Semantic-Segmentation  main.py  segnet_implementation\n"
     ]
    }
   ],
   "source": [
    "%cd /teamspace/studios/this_studio\n",
    "!ls\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[33mhint: Using 'master' as the name for the initial branch. This default branch name\u001b[m\n",
      "\u001b[33mhint: is subject to change. To configure the initial branch name to use in all\u001b[m\n",
      "\u001b[33mhint: of your new repositories, which will suppress this warning, call:\u001b[m\n",
      "\u001b[33mhint: \u001b[m\n",
      "\u001b[33mhint: \tgit config --global init.defaultBranch <name>\u001b[m\n",
      "\u001b[33mhint: \u001b[m\n",
      "\u001b[33mhint: Names commonly chosen instead of 'master' are 'main', 'trunk' and\u001b[m\n",
      "\u001b[33mhint: 'development'. The just-created branch can be renamed via this command:\u001b[m\n",
      "\u001b[33mhint: \u001b[m\n",
      "\u001b[33mhint: \tgit branch -m <name>\u001b[m\n",
      "Initialized empty Git repository in /teamspace/studios/this_studio/.git/\n"
     ]
    }
   ],
   "source": [
    "!git init\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "mkdir: cannot create directory ‘segnet_implementation’: File exists\n",
      "mv: cannot stat 'segnet_model.ipynb': No such file or directory\n",
      "mv: cannot stat 'result.jpg': No such file or directory\n",
      "mv: cannot stat 'Segnet.jpg': No such file or directory\n",
      "zsh:1: no matches found: dataset/*\n"
     ]
    }
   ],
   "source": [
    "!mkdir notebooks segnet_implementation assets data\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "metadata": {},
   "outputs": [],
   "source": [
    "!mv SegNet-Semantic-Segmentation/SegNet_Model.ipynb notebooks/\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "metadata": {},
   "outputs": [],
   "source": [
    "!mv SegNet-Semantic-Segmentation/Results.JPG assets/"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "metadata": {},
   "outputs": [],
   "source": [
    "!mv SegNet-Semantic-Segmentation/SegNet.JPG assets/"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "__pycache__/\n"
     ]
    }
   ],
   "source": [
    "!echo __pycache__/"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "metadata": {},
   "outputs": [],
   "source": [
    "!git config --global user.name \"MajinVegetaaa\"\n",
    "!git config --global user.email \"mishrapoorab@gmail.com\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "metadata": {},
   "outputs": [
    {
     "ename": "SyntaxError",
     "evalue": "invalid syntax (3827820173.py, line 1)",
     "output_type": "error",
     "traceback": [
      "\u001b[0;36m  Cell \u001b[0;32mIn[58], line 1\u001b[0;36m\u001b[0m\n\u001b[0;31m    git add .\u001b[0m\n\u001b[0m        ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid syntax\n"
     ]
    }
   ],
   "source": [
    "git add ."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "language_info": {
   "name": "python"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
